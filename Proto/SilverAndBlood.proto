syntax = "proto3";

enum AccountChannelGroupType {
  AccountChannelGroupType_General = 1;
  AccountChannelGroupType_Other = 6;
}

enum AccountType {
  AccountType_IosDevice = 1;
  AccountType_AndroidDevice = 2;
  AccountType_MSdk = 3;
  AccountType_GSDK = 4;
  AccountType_QuickSDK = 5;
  AccountType_DMM = 6;
  AccountType_WeGame = 7;
}

enum ActCfgNewDirectPushGiftType {
  ActCfgNewDirectPushGiftType_Null = 0;
  ActCfgNewDirectPushGiftType_Battle = 1;
  ActCfgNewDirectPushGiftType_Tower = 2;
  ActCfgNewDirectPushGiftType_RoleLevel = 3;
  ActCfgNewDirectPushGiftType_InheritLevel = 4;
  ActCfgNewDirectPushGiftType_AKX = 5;
  ActCfgNewDirectPushGiftType_CampTower = 6;
  ActCfgNewDirectPushGiftType_ActBoss = 7;
  ActCfgNewDirectPushGiftType_BattleBoss = 8;
  ActCfgNewDirectPushGiftType_EndlessDungeon = 9;
  ActCfgNewDirectPushGiftType_TimeArena = 10;
  ActCfgNewDirectPushGiftType_GlobalArena = 12;
  ActCfgNewDirectPushGiftType_BlueRoute = 13;
  ActCfgNewDirectPushGiftType_StarLife = 14;
  ActCfgNewDirectPushGiftType_SeasonLineMain = 15;
  ActCfgNewDirectPushGiftType_SeasonLineSub = 16;
  ActCfgNewDirectPushGiftType_SeasonLineGod = 17;
  ActCfgNewDirectPushGiftType_RichJourneyUnlock = 18;
  ActCfgNewDirectPushGiftType_RichJourneySightHot = 19;
  ActCfgNewDirectPushGiftType_RabbitGirl = 21;
  ActCfgNewDirectPushGiftType_ClaradeCo = 22;
  ActCfgNewDirectPushGiftType_AncientArea = 23;
  ActCfgNewDirectPushGiftType_GloryEvolution = 24;
  ActCfgNewDirectPushGiftType_GM = 25;
  ActCfgNewDirectPushGiftType_MAX = 26;
}

enum ActivityType {
  ActivityType_IAPBonus = 1;
  ActivityType_VersionQuest = 2;
  ActivityType_IAPSellModify = 3;
  ActivityType_StoreGift = 4;
  ActivityType_IAPBuy = 5;
  ActivityType_AntiCheat = 6;
  ActivityType_CreateRoleLimit = 7;
  ActivityType_ModuleControl = 8;
  ActivityType_PreUpgrade = 9;
  ActivityType_ThirdPartyShop = 11;
  ActivityType_GameNotice = 13;
  ActivityType_GlobalPush = 14;
  ActivityType_NewDirectPushGift = 15;
  ActivityType_DailyGiftNew = 16;
  ActivityType_PushGiftVirtualItem = 17;
  ActivityType_CDKeyExchange = 18;
  ActivityType_PreRegisterMail = 21;
  ActivityType_ResourceMonitor = 22;
  ActivityType_PersonalChatWeb = 23;
  ActivityType_ResourceMonitorNew = 27;
  ActivityType_SystemSwitch = 28;
  ActivityType_FightDebug = 29;
  ActivityType_Censor = 30;
  ActivityType_Sign = 100;
  ActivityType_CommonQuest = 101;
  ActivityType_SurveyReward = 102;
  ActivityType_AutoSendMail = 103;
  ActivityType_LoginSelect = 104;
  ActivityType_LevelAward = 105;
  ActivityType_PayStore = 106;
  ActivityType_BattlePass = 107;
  ActivityType_CommunityEntrance = 108;
  ActivityType_TvProjection = 110;
  ActivityType_RechargeBack = 111;
  ActivityType_PushGift = 112;
  ActivityType_SoloRaid = 113;
  ActivityType_GachaJump = 114;
  ActivityType_RechargeRebate = 115;
  ActivityType_PickupGift = 116;
  ActivityType_AllianceBattle = 117;
  ActivityType_FullBurstDay = 118;
  ActivityType_LamiaTimeManager = 119;
  ActivityType_ItemEmergencyShield = 120;
  ActivityType_HeroSkillReset = 121;
  ActivityType_OnePicAct = 122;
  ActivityType_LoginSendItem = 123;
  ActivityType_UpTimeManager = 124;
  ActivityType_WelfareShow = 125;
  ActivityType_ABTest = 126;
  ActivityType_Hunting = 127;
  ActivityType_EmergencyGift = 137;
  ActivityType_VoucherControl = 138;
  ActivityType_WebReward = 139;
  ActivityType_Refund = 140;
  ActivityType_SignGift = 141;
  ActivityType_GachaFree = 142;
  ActivityType_ForbidCustomDescManager = 143;
  ActivityType_ReturnSign = 144;
  ActivityType_ConsumeReward = 145;
  ActivityType_TimelineJump = 146;
}

enum ActPushGiftPriceType {
  ActPushGiftPriceType_RegDays = 1;
  ActPushGiftPriceType_LastPayDate = 2;
  ActPushGiftPriceType_LastMonthPayCnt = 3;
  ActPushGiftPriceType_TotalPayAmount = 4;
  ActPushGiftPriceType_LastMonthActiveDays = 5;
}

enum ActPushGiftTriggerType {
  ActPushGiftTriggerType_PassStage = 1;
  ActPushGiftTriggerType_RoleBreak = 2;
  ActPushGiftTriggerType_RoleLevelBreak = 3;
  ActPushGiftTriggerType_PassTower = 4;
  ActPushGiftTriggerType_PassTower1 = 5;
  ActPushGiftTriggerType_PassTower2 = 6;
  ActPushGiftTriggerType_PassTower3 = 7;
  ActPushGiftTriggerType_PassTower4 = 8;
  ActPushGiftTriggerType_CommanderLevel = 9;
}

enum AllianceBattleStatus {
  AllianceBattleStatus_None = 0;
  AllianceBattleStatus_Battle = 1;
  AllianceBattleStatus_Settle = 2;
}

enum AllianceJoinLogType {
  AllianceJoinLogType_Apply = 1;
  AllianceJoinLogType_Invite = 2;
  AllianceJoinLogType_NoLimit = 3;
}

enum AllianceJoinType {
  AllianceJoinType_Review = 0;
  AllianceJoinType_All = 1;
  AllianceJoinType_None = 2;
  AllianceJoinTypeMax = 3;
}

enum AlliancePost {
  AlliancePost_Master = 1;
  AlliancePost_Vice = 2;
  AlliancePost_Member = 3;
}

enum AllianceReportType {
  AllianceReportType_Name = 1;
  AllianceReportType_Bulletin = 2;
}

enum AllianceSettingsType {
  AllianceSettingsType_Name = 1;
  AllianceSettingsType_Badge = 2;
  AllianceSettingsType_JoinType = 3;
  AllianceSettingsType_JoinLevel = 4;
  AllianceSettingsType_LanguageId = 5;
  AllianceSettingsType_Recruit = 6;
  AllianceSettingsType_Bulletin = 7;
}

enum AncientHeroType {
  AncientHeroType_Normal = 0;
}

enum AttractArchiveType {
  AttractArchiveType_Archive = 1;
  AttractArchiveType_Story = 2;
  AttractArchiveType_Letter = 3;
}

enum AttractGiftType {
  AttractGiftType_Common = 0;
  AttractGiftType_Camp1 = 1;
  AttractGiftType_Camp2 = 2;
  AttractGiftType_Camp3 = 3;
  AttractGiftType_Camp4 = 4;
  AttractGiftType_Camp5 = 5;
  AttractGiftType_Exclusive = 6;
}

enum AttrIndex {
  AttrIndex_MaxHp = 1;
  AttrIndex_Attack = 2;
  AttrIndex_PhyDefence = 3;
  AttrIndex_MagDefence = 4;
  AttrIndex_AttackSpeed = 5;
  AttrIndex_Lv_MaxHp_Rate = 6;
  AttrIndex_Lv_Attack_Rate = 7;
  AttrIndex_Lv_PhyDefence_Rate = 8;
  AttrIndex_Lv_MagDefence_Rate = 9;
  AttrIndex_MaxHp_Rate = 10;
  AttrIndex_Attack_Rate = 11;
  AttrIndex_PhyDefence_Rate = 12;
  AttrIndex_MagDefence_Rate = 13;
  AttrIndex_Crit_Rate = 14;
  AttrIndex_AntiCrit_Rate = 15;
  AttrIndex_Crit_Ratio = 16;
  AttrIndex_AntiCrit_Ratio = 17;
  AttrIndex_AllPntrate_Rate = 18;
  AttrIndex_AntiAllPntrate_Rate = 19;
  AttrIndex_PhyPntrate_Rate = 20;
  AttrIndex_MagPntrate_Rate = 21;
  AttrIndex_AntiPhyPntrate_Rate = 22;
  AttrIndex_AntiMagPntrate_Rate = 23;
  AttrIndex_AllDmg_AddRate = 24;
  AttrIndex_AllDmg_ReduceRate = 25;
  AttrIndex_PhyDmg_AddRate = 26;
  AttrIndex_PhyDmg_ReduceRate = 27;
  AttrIndex_MagDmg_AddRate = 28;
  AttrIndex_MagDmg_ReduceRate = 29;
  AttrIndex_AllDmg_Add = 30;
  AttrIndex_AllDmg_Reduce = 31;
  AttrIndex_PhyDmg_Add = 32;
  AttrIndex_PhyDmg_Reduce = 33;
  AttrIndex_MagDmg_Add = 34;
  AttrIndex_MagDmg_Reduce = 35;
  AttrIndex_Cure_Rate = 36;
  AttrIndex_BearCure_Rate = 37;
  AttrIndex_CureCrit_Rate = 38;
  AttrIndex_BearCureCrit_Rate = 39;
  AttrIndex_CureCrit_Ratio = 40;
  AttrIndex_BearCureCrit_Ratio = 41;
  AttrIndex_Anger_Rate = 42;
  AttrIndex_HpRecover_Rate = 43;
  AttrIndex_Draw_Rate = 44;
  AttrIndex_ReboundDmg_Rate = 45;
  AttrIndex_RealDmg_Rate = 46;
  AttrIndex_AntiRealDmg_Rate = 47;
  AttrIndex_BonusDmg_Add = 48;
  AttrIndex_BonusDmg_Reduce = 49;
  AttrIndex_AllSpeed_Rate = 50;
  AttrIndex_Shield_Rate = 51;
  AttrIndex_MoveSpeed = 52;
  AttrIndex_InitialEnergy = 53;
  AttrIndex_Shield_AddRate = 54;
  AttrIndex_Shield_ReduceRate = 55;
  AttrIndex_Hit_AddRate = 56;
  AttrIndex_Dodge_AddRate = 57;
  AttrIndex_GetEnergySpeed = 58;
  AttrIndex_Hp = 100;
  AttrIndex_Anger = 101;
  AttrIndex_MaxAnger = 102;
  AttrIndex_MobInitialLifeTime = 103;
  AttrIndex_MobRemainLifeTime = 104;
  AttrIndex_AttackEnergyRate = 105;
  AttrIndex_DotDmg_ReduceRate = 106;
  AttrIndex_AttackDmg_Add = 107;
  AttrIndex_OgiDmg_Add = 108;
  AttrIndex_DebuffDmg_Add = 109;
  AttrIndex_CtrlDmg_Add = 110;
  AttrIndex_BuffTime_Add = 111;
  AttrIndex_DebuffTime_Add = 112;
  AttrIndex_AttackDmg_ReduceRate = 114;
  AttrIndex_SkillDmg_Add = 115;
  AttrIndex_SkillDmg_Reduce = 116;
  AttrIndex_OgiDmg_Reduce = 117;
  AttrIndex_DotDmg_Add = 118;
  AttrIndex_DebuffDmg_Reduce = 119;
  AttrIndex_CtrlDmg_Reduce = 120;
  AttrIndex_FinalDamage_Add = 121;
  AttrIndex_FinalDamage_Reduce = 122;
}

enum AttrType {
  AttrType_Hero = 0;
  AttrType_HeroInit = 1;
  AttrType_HeroBase = 2;
  AttrType_Equip = 3;
  AttrType_Legacy = 4;
}

enum BaseStoreChapterRewardType {
  BaseStoreChapterRewardType_Free = 0;
  BaseStoreChapterRewardType_Pay = 1;
}

enum BattlePassBuyStatus {
  BattlePassBuyStatus_Free = 0;
  BattlePassBuyStatus_Paid = 1;
  BattlePassBuyStatus_Advanced = 2;
}

enum BattleWorldType {
  BattleWorldType_Normal = 0;
  BattleWorldType_Explore = 1;
}

enum CastlePlaceUnlockType {
  CastlePlaceUnlockType_Open = 1;
  CastlePlaceUnlockType_Key = 2;
  CastlePlaceUnlockType_System = 3;
}

enum ChatChannel {
  ChatChannel_World = 1;
  ChatChannel_Alliance = 2;
  ChatChannel_Recruit = 3;
  ChatChannel_System = 4;
  ChatChannel_Personal = 9;
  ChatChannel_CrossZoneLang = 10;
  ChatChannel_Max = 11;
}

enum CmdActivityCatetory {
  CmdActivityCatetory_Normal = 0;
  CmdActivityCatetory_New = 1;
}

enum CmdActivityMainCityIconDisplayType {
  CmdActivityMainCityIconDisplayType_Always = 1;
  CmdActivityMainCityIconDisplayType_Once = 2;
  CmdActivityMainCityIconDisplayType_Daily = 3;
}

enum CmdActivityMainCityIconPosType {
  CmdActivityMainCityIconPosType_Down = 1;
  CmdActivityMainCityIconPosType_Right = 2;
}

enum CmdActivityMarkType {
  CmdActivityMarkType_None = 0;
  CmdActivityMarkType_Hot = 1;
  CmdActivityMarkType_New = 2;
  CmdActivityMarkType_Beta = 3;
}

enum CmdActivityReceiveStatus {
  CmdActivityReceiveStatus_CanNotReceive = 0;
  CmdActivityReceiveStatus_CanReceive = 1;
  CmdActivityReceiveStatus_HasReceive = 2;
}

enum CmdActPayStoreRefreshType {
  CmdActPayStoreRefreshType_None = 1;
  CmdActPayStoreRefreshType_Day = 2;
  CmdActPayStoreRefreshType_Week = 3;
  CmdActPayStoreRefreshType_Month = 4;
  CmdActPayStoreRefreshType_Time = 5;
}

enum CmdActPayStoreType {
  CmdActPayStoreType_Up = 11;
  CmdActPayStoreType_StepupGift = 12;
  CmdActPayStoreType_PickupGift = 13;
  CmdActPayStoreType_OpenCard = 14;
  CmdActPayStoreType_OpenNewShop = 15;
  CmdActPayStoreType_OpenBeginner = 16;
  CmdActPayStoreType_PushGift = 17;
  CmdActPayStoreType_Permanent = 18;
  CmdActPayStoreType_MainStage = 19;
  CmdActPayStoreType_MonthlyCard = 20;
  CmdActPayStoreType_DaimondBuy = 21;
  CmdActPayStoreType_SignGift = 22;
  CmdActPayStoreType_FashionStore = 23;
  CmdActPayStoreType_PickupGiftNew = 24;
}

enum CmdAllianceHistoryType {
  CmdAllianceHistoryType_Create = 1;
  CmdAllianceHistoryType_Transfer = 2;
  CmdAllianceHistoryType_PostToVice = 3;
  CmdAllianceHistoryType_PostToNormal = 4;
  CmdAllianceHistoryType_JoinAlliance = 5;
  CmdAllianceHistoryType_LeaveAlliance = 6;
  CmdAllianceHistoryType_KickAlliance = 7;
  CmdAllianceHistoryType_LevelUp = 8;
  CmdAllianceHistoryType_Like = 9;
  CmdAllianceHistoryType_AutoTransfer = 99;
}

enum CmdBulletinDisplayGrade {
  CmdBulletinDisplayGrade_A = 0;
  CmdBulletinDisplayGrade_B = 1;
}

enum CmdClientDataSize {
  CmdClientDataSize_Alarm = 800;
  CmdClientDataSize_Invalid = 1024;
}

enum CmdClientDataType {
  CmdClientDataType_None = 0;
  CmdClientDataType_Unlock = 1;
  CmdClientDataType_Guide = 2;
  CmdClientDataType_MainEnter = 3;
  CmdClientDataType_Tower = 4;
  CmdClientDataType_Arena = 5;
  CmdClientDataType_Gacha = 6;
  CmdClientDataType_Statue = 7;
  CmdClientDataType_Explore = 8;
  CmdClientDataType_LamiaEnter = 9;
  CmdClientDataType_LegacyLevel = 10;
  CmdClientDataType_LegacyGuide = 11;
  CmdClientDataType_HallDecoration = 12;
  CmdClientDataType_TowerAuto = 13;
  CmdClientDataType_Max = 14;
}

enum CmdCornerMarkType {
  CmdCornerMarkType_None = 0;
  CmdCornerMarkType_Hot = 1;
  CmdCornerMarkType_New = 2;
  CmdCornerMarkType_Wait = 3;
}

enum CmdFightBuffType {
  CmdFightBuffType_SimpleBuff = 0;
  CmdFightBuffType_GlobalEffect = 1;
}

enum CmdFightVerifyErrorType {
  CmdFightVerifyErrorType_Normal = 0;
  CmdFightVerifyErrorType_Fight = 1;
  CmdFightVerifyErrorType_OutRange = 2;
}

enum CmdFormCampType {
  CmdFormCampType_My = 1;
  CmdFormCampType_Enemy = 2;
}

enum CmdId_Act {
  CmdId_Act_GetList_CS = 50001;
  CmdId_Act_GetList_SC = 50002;
  CmdId_Act_GetStatusById_CS = 50003;
  CmdId_Act_GetStatusById_SC = 50004;
  CmdId_Act_DayChangeZero_CS = 50005;
  CmdId_Act_DayChangeZero_SC = 50006;
}

enum CmdId_Act_BattlePass {
  CmdId_Act_BattlePass_GetLevelReward_CS = 59931;
  CmdId_Act_BattlePass_GetLevelReward_SC = 59932;
  CmdId_Act_BattlePass_BuyExp_CS = 59933;
  CmdId_Act_BattlePass_BuyExp_SC = 59934;
}

enum CmdId_Act_CommonQuest {
  CmdId_Act_CommonQuest_TakeDailyReward_CS = 59831;
  CmdId_Act_CommonQuest_TakeDailyReward_SC = 59832;
  CmdId_Act_CommonQuest_TakeFinalReward_CS = 59833;
  CmdId_Act_CommonQuest_TakeFinalReward_SC = 59834;
}

enum CmdId_Act_ConsumeReward {
  CmdId_Act_ConsumeReward_TakeReward_CS = 60541;
  CmdId_Act_ConsumeReward_TakeReward_SC = 60542;
}

enum CmdId_Act_DailyGiftNew {
  CmdId_Act_DailyGiftNew_BuyFreeGift_CS = 57901;
  CmdId_Act_DailyGiftNew_BuyFreeGift_SC = 57902;
  CmdId_Act_DailyGiftNew_RefreshSelect_CS = 57903;
  CmdId_Act_DailyGiftNew_RefreshSelect_SC = 57904;
}

enum CmdId_Act_EmergencyGift {
  CmdId_Act_EmergencyGift_Trigger_CS = 60383;
  CmdId_Act_EmergencyGift_Trigger_SC = 60384;
}

enum CmdId_Act_GachaJump {
  CmdId_Act_GachaJump_Order_CS = 60081;
  CmdId_Act_GachaJump_Order_SC = 60082;
}

enum CmdId_Act_LevelAward {
  CmdId_Act_LevelAward_GetAward_CS = 59871;
  CmdId_Act_LevelAward_GetAward_SC = 59872;
}

enum CmdId_Act_LoginSelect {
  CmdId_Act_LoginSelect_SelectReward_CS = 59851;
  CmdId_Act_LoginSelect_SelectReward_SC = 59852;
}

enum CmdId_Act_LoginSendItem {
  CmdId_Act_LoginSendItem_TakeReward_CS = 60261;
  CmdId_Act_LoginSendItem_TakeReward_SC = 60262;
}

enum CmdId_Act_PayStore {
  CmdId_Act_PayStore_SelectReward_CS = 59911;
  CmdId_Act_PayStore_SelectReward_SC = 59912;
  CmdId_Act_PayStore_FreeReward_CS = 59913;
  CmdId_Act_PayStore_FreeReward_SC = 59914;
}

enum CmdId_Act_PickupGift {
  CmdId_Act_PickupGift_SetReward_CS = 60121;
  CmdId_Act_PickupGift_SetReward_SC = 60122;
}

enum CmdId_Act_Recharge {
  CmdId_Act_NewbieLucky_SkillPoint_CS = 50101;
  CmdId_Act_NewbieLucky_SkillPoint_SC = 50102;
  CmdId_Act_Recharge_BuyFreeGift_SC = 50103;
  CmdId_Act_Recharge_BuyFreeGift_CS = 50104;
  CmdId_Act_Recharge_IAP_GetFreeReward_CS = 50105;
  CmdId_Act_Recharge_IAP_GetFreeReward_SC = 50106;
  CmdId_Act_Recharge_SelectGift_CS = 50107;
  CmdId_Act_Recharge_SelectGift_SC = 50108;
}

enum CmdId_Act_ReturnSign {
  CmdId_Act_ReturnSign_GetSignReward_CS = 60521;
  CmdId_Act_ReturnSign_GetSignReward_SC = 60522;
}

enum CmdId_Act_Sign {
  CmdId_Act_Sign_Sign_CS = 59771;
  CmdId_Act_Sign_Sign_SC = 59772;
}

enum CmdId_Act_SignGift {
  CmdId_Act_SignGift_GetSignReward_CS = 60461;
  CmdId_Act_SignGift_GetSignReward_SC = 60462;
}

enum CmdId_Act_SurveyReward {
  CmdId_Act_SurveyReward_GetLink_CS = 59811;
  CmdId_Act_SurveyReward_GetLink_SC = 59812;
  CmdId_Act_SurveyReward_GetReward_CS = 59813;
  CmdId_Act_SurveyReward_GetReward_SC = 59814;
}

enum CmdId_Act_TimelineJump {
  CmdId_Act_TimelineJump_GetReward_CS = 60561;
  CmdId_Act_TimelineJump_GetReward_SC = 60562;
}

enum CmdId_Afk {
  CmdId_Afk_GetData_CS = 14301;
  CmdId_Afk_GetData_SC = 14302;
  CmdId_Afk_TakeReward_CS = 14303;
  CmdId_Afk_TakeReward_SC = 14304;
  CmdId_Afk_TakeInstant_CS = 14305;
  CmdId_Afk_TakeInstant_SC = 14306;
}

enum CmdId_Alliance {
  CmdId_Alliance_GetInit_CS = 11501;
  CmdId_Alliance_GetInit_SC = 11502;
  CmdId_Alliance_GetRecommendList_CS = 11503;
  CmdId_Alliance_GetRecommendList_SC = 11504;
  CmdId_Alliance_GetDetail_CS = 11505;
  CmdId_Alliance_GetDetail_SC = 11506;
  CmdId_Alliance_Create_CS = 11507;
  CmdId_Alliance_Create_SC = 11508;
  CmdId_Alliance_Destroy_CS = 11509;
  CmdId_Alliance_Destroy_SC = 11510;
  CmdId_Alliance_Leave_CS = 11511;
  CmdId_Alliance_Leave_SC = 11512;
  CmdId_Alliance_Kick_CS = 11513;
  CmdId_Alliance_Kick_SC = 11514;
  CmdId_Alliance_ChangeName_CS = 11515;
  CmdId_Alliance_ChangeName_SC = 11516;
  CmdId_Alliance_ChangeBulletin_CS = 11517;
  CmdId_Alliance_ChangeBulletin_SC = 11518;
  CmdId_Alliance_ChangeRecruit_CS = 11519;
  CmdId_Alliance_ChangeRecruit_SC = 11520;
  CmdId_Alliance_ChangeSetting_CS = 11521;
  CmdId_Alliance_ChangeSetting_SC = 11522;
  CmdId_Alliance_Apply_CS = 11523;
  CmdId_Alliance_Apply_SC = 11524;
  CmdId_Alliance_GetRoleApplyList_CS = 11525;
  CmdId_Alliance_GetRoleApplyList_SC = 11526;
  CmdId_Alliance_CancelApply_CS = 11527;
  CmdId_Alliance_CancelApply_SC = 11528;
  CmdId_Alliance_GetApplyList_CS = 11529;
  CmdId_Alliance_GetApplyList_SC = 11530;
  CmdId_Alliance_OperateApply_CS = 11531;
  CmdId_Alliance_OperateApply_SC = 11532;
  CmdId_Alliance_RefuseAll_CS = 11533;
  CmdId_Alliance_RefuseAll_SC = 11534;
  CmdId_Alliance_Invite_CS = 11535;
  CmdId_Alliance_Invite_SC = 11536;
  CmdId_Alliance_GetInviteList_CS = 11537;
  CmdId_Alliance_GetInviteList_SC = 11538;
  CmdId_Alliance_RefuseAllBeInvite_CS = 11539;
  CmdId_Alliance_RefuseAllBeInvite_SC = 11540;
  CmdId_Alliance_ReplyInvite_CS = 11541;
  CmdId_Alliance_ReplyInvite_SC = 11542;
  CmdId_Alliance_Transfer_CS = 11543;
  CmdId_Alliance_Transfer_SC = 11544;
  CmdId_Alliance_ChangePost_CS = 11545;
  CmdId_Alliance_ChangePost_SC = 11546;
  CmdId_Alliance_AllianceHistory_CS = 11547;
  CmdId_Alliance_AllianceHistory_SC = 11548;
  CmdId_Alliance_Like_CS = 11549;
  CmdId_Alliance_Like_SC = 11550;
  CmdId_Alliance_Sign_CS = 11551;
  CmdId_Alliance_Sign_SC = 11552;
  CmdId_Alliance_Search_CS = 11553;
  CmdId_Alliance_Search_SC = 11554;
  CmdId_Alliance_SendMail_CS = 11555;
  CmdId_Alliance_SendMail_SC = 11556;
  CmdId_Alliance_Report_CS = 11557;
  CmdId_Alliance_Report_SC = 11558;
  CmdId_Alliance_CancelTransfer_CS = 11559;
  CmdId_Alliance_CancelTransfer_SC = 11560;
  CmdId_Alliance_Battle_GetBattleData_CS = 11600;
  CmdId_Alliance_Battle_GetBattleData_SC = 11601;
  CmdId_Alliance_Battle_GetBattleHistory_CS = 11606;
  CmdId_Alliance_Battle_GetBattleHistory_SC = 11607;
  CmdId_Alliance_Battle_GetRankList_CS = 11608;
  CmdId_Alliance_Battle_GetRankList_SC = 11609;
}

enum CmdId_Ancient {
  CmdId_Ancient_GetData_CS = 11101;
  CmdId_Ancient_GetData_SC = 11102;
  CmdId_Ancient_ChangeHero_CS = 11103;
  CmdId_Ancient_ChangeHero_SC = 11104;
  CmdId_Ancient_TakeQuestAward_CS = 11105;
  CmdId_Ancient_TakeQuestAward_SC = 11106;
  CmdId_Ancient_RefreshQuest_CS = 11107;
  CmdId_Ancient_RefreshQuest_SC = 11108;
  CmdId_Ancient_AddEnergy_CS = 11109;
  CmdId_Ancient_AddEnergy_SC = 11110;
  CmdId_Ancient_SummonHero_CS = 11111;
  CmdId_Ancient_SummonHero_SC = 11112;
}

enum CmdId_Arena {
  CmdId_Arena_StartChallenge_CS = 11101;
  CmdId_Arena_StartChallenge_SC = 11102;
  CmdId_Arena_FinishChallenge_CS = 11103;
  CmdId_Arena_FinishChallenge_SC = 11104;
  CmdId_Arena_QuitChallenge_CS = 11105;
  CmdId_Arena_QuitChallenge_SC = 11106;
}

enum CmdId_Attract {
  CmdId_Attract_GetAttract_CS = 10901;
  CmdId_Attract_GetAttract_SC = 10902;
  CmdId_Attract_TouchHero_CS = 10903;
  CmdId_Attract_TouchHero_SC = 10904;
  CmdId_Attract_TakeStoryReward_CS = 10905;
  CmdId_Attract_TakeStoryReward_SC = 10906;
  CmdId_Attract_SendGift_CS = 10907;
  CmdId_Attract_SendGift_SC = 10908;
  CmdId_Attract_SeeStory_CS = 10909;
  CmdId_Attract_SeeStory_SC = 10910;
  CmdId_Attract_SetCouncilHero_CS = 10911;
  CmdId_Attract_SetCouncilHero_SC = 10912;
  CmdId_Attract_StartCouncil_CS = 10913;
  CmdId_Attract_StartCouncil_SC = 10914;
  CmdId_Attract_EndCouncil_CS = 10915;
  CmdId_Attract_EndCouncil_SC = 10916;
  CmdId_Attract_SetLetter_CS = 10917;
  CmdId_Attract_SetLetter_SC = 10918;
  CmdId_Attract_LetterSubmitItem_CS = 10919;
  CmdId_Attract_LetterSubmitItem_SC = 10920;
}

enum CmdId_BaseStore {
  CmdId_BaseStore_GetBaseStore_CS = 10951;
  CmdId_BaseStore_GetBaseStore_SC = 10952;
  CmdId_BaseStore_Refresh_CS = 10953;
  CmdId_BaseStore_Refresh_SC = 10954;
  CmdId_BaseStore_GetBaseStoreMonthlyCard_CS = 10955;
  CmdId_BaseStore_GetBaseStoreMonthlyCard_SC = 10956;
  CmdId_BaseStore_GetBaseStoreChapter_CS = 10957;
  CmdId_BaseStore_GetBaseStoreChapter_SC = 10958;
  CmdId_BaseStore_GetBaseStoreChapterReward_CS = 10959;
  CmdId_BaseStore_GetBaseStoreChapterReward_SC = 10960;
}

enum CmdId_Battle {
  CmdId_Battle_Connect_CS = 1001;
  CmdId_Battle_Connect_SC = 1002;
  CmdId_Battle_DisConnect_CS = 1003;
  CmdId_Battle_DisConnect_SC = 1004;
  CmdId_Battle_Idle_CS = 1005;
  CmdId_Battle_Idle_SC = 1006;
  CmdId_Battle_Echo_CS = 1013;
  CmdId_Battle_Echo_SC = 1014;
  CmdId_Battle_Hash_CS = 1015;
  CmdId_Battle_Hash_SC = 1016;
  CmdId_Battle_GetFrameTime_CS = 1021;
  CmdId_Battle_GetFrameTime_SC = 1022;
  CmdId_Battle_SetUdpPattern_CS = 1023;
  CmdId_Battle_SetUdpPattern_SC = 1024;
  CmdId_Battle_SetUdpInitPattern_CS = 1027;
  CmdId_Battle_SetUdpInitPattern_SC = 1028;
  CmdId_Battle_Check_CS = 1029;
  CmdId_Battle_Check_SC = 1030;
  CmdId_Battle_Ping_CS = 1033;
  CmdId_Battle_Ping_SC = 1034;
  CmdId_Battle_ReportPing_CS = 1035;
  CmdId_Battle_ReportPing_SC = 1036;
  CmdId_Battle_Oper_CS = 1100;
  CmdId_Battle_Oper_SC = 1101;
  CmdId_Battle_Result_CS = 1102;
  CmdId_Battle_Result_SC = 1103;
  CmdId_Battle_RealEnd_CS = 1104;
  CmdId_Battle_RealEnd_SC = 1105;
  CmdId_Battle_ReconnectReady_CS = 1106;
  CmdId_Battle_ReconnectReady_SC = 1107;
  CmdId_Battle_UdpFramesData_CS = 1108;
  CmdId_Battle_UdpFrameReq_CS = 1110;
  CmdId_Battle_UdpFrameReq_SC = 1111;
  CmdId_Battle_UdpFramesDataRecon_CS = 1116;
  CmdId_Battle_UdpFramesDataRecon_SC = 1117;
  CmdId_Battle_UdpFrame_Confirm_CS = 1122;
  CmdId_Battle_NewUdpFramesData_SC = 1157;
  CmdId_Battle_NewUdpFramesDataNormal_SC = 1159;
  CmdId_Battle_ReportLogicError_CS = 1160;
  CmdId_Battle_ReportLogicError_SC = 1161;
  CmdId_Notify_BattlePlayerInfo = 1200;
  CmdId_Notify_ReadyStartSelect = 1201;
  CmdId_Notify_StartSelect = 1202;
  CmdId_Notify_StartLoading = 1203;
  CmdId_Notify_StartPlay = 1204;
  CmdId_Notify_WaitReady = 1205;
  CmdId_Notify_BattleStartFailed = 1206;
  CmdId_Notify_Reconnect = 1207;
  CmdId_Notify_MD5Failed = 1208;
  CmdId_Notify_RCPlayerInfo = 1209;
  CmdId_Notify_EndPlay = 1210;
}

enum CmdId_Castle {
  CmdId_Castle_GetDispatch_CS = 12201;
  CmdId_Castle_GetDispatch_SC = 12202;
  CmdId_Castle_DoDispatch_CS = 12203;
  CmdId_Castle_DoDispatch_SC = 12204;
  CmdId_Castle_RefreshDispatch_CS = 12205;
  CmdId_Castle_RefreshDispatch_SC = 12206;
  CmdId_Castle_CancelDispatch_CS = 12207;
  CmdId_Castle_CancelDispatch_SC = 12208;
  CmdId_Castle_TakeDispatchReward_CS = 12209;
  CmdId_Castle_TakeDispatchReward_SC = 12210;
  CmdId_Castle_GetExplore_CS = 12211;
  CmdId_Castle_GetExplore_SC = 12212;
  CmdId_Castle_TakeClueReward_CS = 12213;
  CmdId_Castle_TakeClueReward_SC = 12214;
  CmdId_Castle_TakeStoryReward_CS = 12217;
  CmdId_Castle_TakeStoryReward_SC = 12218;
  CmdId_Castle_GetStatue_CS = 12219;
  CmdId_Castle_GetStatue_SC = 12220;
  CmdId_Castle_TakeStatueReward_CS = 12221;
  CmdId_Castle_TakeStatueReward_SC = 12222;
  CmdId_Castle_GetStarRoom_CS = 12223;
  CmdId_Castle_GetStarRoom_SC = 12224;
  CmdId_Castle_UnlockConstella_CS = 12225;
  CmdId_Castle_UnlockConstella_SC = 12226;
  CmdId_Castle_SeeStar_CS = 12227;
  CmdId_Castle_SeeStar_SC = 12228;
  CmdId_Castle_GetPlace_CS = 12229;
  CmdId_Castle_GetPlace_SC = 12230;
  CmdId_Castle_UnlockKeyPlace_CS = 12231;
  CmdId_Castle_UnlockKeyPlace_SC = 12232;
  CmdId_Castle_DoPlaceStory_CS = 12233;
  CmdId_Castle_DoPlaceStory_SC = 12234;
  CmdId_Castle_TakeChapterReward_CS = 12235;
  CmdId_Castle_TakeChapterReward_SC = 12236;
}

enum CmdId_Chat {
  CmdId_Chat_GetInit_CS = 12101;
  CmdId_Chat_GetInit_SC = 12102;
  CmdId_Chat_SendChat_CS = 12103;
  CmdId_Chat_SendChat_SC = 12104;
  CmdId_Chat_AddToShield_CS = 12105;
  CmdId_Chat_AddToShield_SC = 12106;
  CmdId_Chat_RemoveFromShield_CS = 12107;
  CmdId_Chat_RemoveFromShield_SC = 12108;
  CmdId_Chat_GetChat_CS = 12109;
  CmdId_Chat_GetChat_SC = 12110;
  CmdId_Chat_GroupInvite_CS = 12111;
  CmdId_Chat_GroupInvite_SC = 12112;
  CmdId_Chat_GroupLeave_CS = 12113;
  CmdId_Chat_GroupLeave_SC = 12114;
  CmdId_Chat_GroupSetName_CS = 12115;
  CmdId_Chat_GroupSetName_SC = 12116;
  CmdId_Chat_GetTranslate_CS = 12117;
  CmdId_Chat_GetTranslate_SC = 12118;
  CmdId_Chat_SyncTranslate_CS = 12119;
  CmdId_Chat_SyncTranslate_SC = 12120;
  CmdId_Chat_ReportBadMessage_CS = 12121;
  CmdId_Chat_ReportBadMessage_SC = 12122;
  CmdId_Chat_GroupKick_CS = 12123;
  CmdId_Chat_GroupKick_SC = 12124;
  CmdId_Chat_GroupDissolve_CS = 12125;
  CmdId_Chat_GroupDissolve_SC = 12126;
  CmdId_Chat_JoinCrossZoneRoom_CS = 12127;
  CmdId_Chat_JoinCrossZoneRoom_SC = 12128;
  CmdId_Chat_GetCrossZoneInit_CS = 12129;
  CmdId_Chat_GetCrossZoneInit_SC = 12130;
  CmdId_Chat_CrossGroup_Create_CS = 12131;
  CmdId_Chat_CrossGroup_Create_SC = 12132;
  CmdId_Chat_CrossGroup_Leave_CS = 12133;
  CmdId_Chat_CrossGroup_Leave_SC = 12134;
  CmdId_Chat_AddToCrossShield_CS = 12135;
  CmdId_Chat_AddToCrossShield_SC = 12136;
  CmdId_Chat_RemoveFromCrossShield_CS = 12137;
  CmdId_Chat_RemoveFromCrossShield_SC = 12138;
  CmdId_Chat_GetCrossZoneRoleDetail_CS = 12139;
  CmdId_Chat_GetCrossZoneRoleDetail_SC = 12140;
  CmdId_Chat_GroupSet_CS = 12141;
  CmdId_Chat_GroupSet_SC = 12142;
  CmdId_Chat_SetShowCrossChat_CS = 12143;
  CmdId_Chat_SetShowCrossChat_SC = 12144;
  CmdId_Chat_Like_CS = 12145;
  CmdId_Chat_Like_SC = 12146;
  CmdId_Chat_Unlike_CS = 12147;
  CmdId_Chat_Unlike_SC = 12148;
  CmdId_Chat_CreatePersonalChat_CS = 12149;
  CmdId_Chat_CreatePersonalChat_SC = 12150;
  CmdId_Chat_DelPersonalChat_CS = 12151;
  CmdId_Chat_DelPersonalChat_SC = 12152;
  CmdId_Chat_ReadPersonalMsg_CS = 12153;
  CmdId_Chat_ReadPersonalMsg_SC = 12154;
  CmdId_Chat_GetShieldList_CS = 12155;
  CmdId_Chat_GetShieldList_SC = 12156;
  CmdId_Chat_GetLanguageInit_CS = 12157;
  CmdId_Chat_GetLanguageInit_SC = 12158;
  CmdId_Chat_SwitchLanguage_CS = 12159;
  CmdId_Chat_SwitchLanguage_SC = 12160;
  CmdId_Chat_SetRefuseStranger_CS = 12161;
  CmdId_Chat_SetRefuseStranger_SC = 12162;
  CmdId_Chat_GetLanguageGroup_CS = 12163;
  CmdId_Chat_GetLanguageGroup_SC = 12164;
  CmdId_Chat_GetLastChatInfo_CS = 12165;
  CmdId_Chat_GetLastChatInfo_SC = 12166;
  CmdId_Chat_ReportBadMessages_CS = 12167;
  CmdId_Chat_ReportBadMessages_SC = 12168;
  CmdId_Chat_GetDirtyWords_CS = 12169;
  CmdId_Chat_GetDirtyWords_SC = 12170;
}

enum CmdId_ClientData {
  CmdId_ClientData_SetData_CS = 14101;
  CmdId_ClientData_SetData_SC = 14102;
  CmdId_ClientData_GetData_CS = 14103;
  CmdId_ClientData_GetData_SC = 14104;
}

enum CmdId_Equip {
  CmdId_Equip_GetList_CS = 18001;
  CmdId_Equip_GetList_SC = 18002;
  CmdId_Equip_AddExp_CS = 18003;
  CmdId_Equip_AddExp_SC = 18004;
  CmdId_Equip_Overload_CS = 18005;
  CmdId_Equip_Overload_SC = 18006;
  CmdId_Equip_SetEffectLock_CS = 18007;
  CmdId_Equip_SetEffectLock_SC = 18008;
  CmdId_Equip_ReOverload_CS = 18009;
  CmdId_Equip_ReOverload_SC = 18010;
  CmdId_Equip_SaveReOverload_CS = 18011;
  CmdId_Equip_SaveReOverload_SC = 18012;
}

enum CmdId_Fight {
  CmdId_Fight_StartChallenge_CS = 19301;
  CmdId_Fight_StartChallenge_SC = 19302;
  CmdId_Fight_FinishChallenge_CS = 19303;
  CmdId_Fight_FinishChallenge_SC = 19304;
  CmdId_Fight_VerifyReplay_CS = 19305;
  CmdId_Fight_VerifyReplay_SC = 19306;
  CmdId_Fight_QuitChallenge_CS = 19307;
  CmdId_Fight_QuitChallenge_SC = 19308;
}

enum CmdId_Friend {
  CmdId_Friend_GetInit_CS = 17201;
  CmdId_Friend_GetInit_SC = 17202;
  CmdId_Friend_AddFriend_CS = 17203;
  CmdId_Friend_AddFriend_SC = 17204;
  CmdId_Friend_DelFriend_CS = 17205;
  CmdId_Friend_DelFriend_SC = 17206;
  CmdId_Friend_ConfirmFriendRequest_CS = 17207;
  CmdId_Friend_ConfirmFriendRequest_SC = 17208;
  CmdId_Friend_DelFriendRequest_CS = 17209;
  CmdId_Friend_DelFriendRequest_SC = 17210;
  CmdId_Friend_SendHeart_CS = 17211;
  CmdId_Friend_SendHeart_SC = 17212;
  CmdId_Friend_GatherHeart_CS = 17213;
  CmdId_Friend_GatherHeart_SC = 17214;
  CmdId_Friend_GatherAndSendAllHeart_CS = 17215;
  CmdId_Friend_GatherAndSendAllHeart_SC = 17216;
  CmdId_Friend_StartChallenge_CS = 17217;
  CmdId_Friend_StartChallenge_SC = 17218;
  CmdId_Friend_FinishChallenge_CS = 17219;
  CmdId_Friend_FinishChallenge_SC = 17220;
  CmdId_Friend_DelAllFriendRequest_CS = 17221;
  CmdId_Friend_DelAllFriendRequest_SC = 17222;
  CmdId_Friend_ConfirmAllFriendRequest_CS = 17223;
  CmdId_Friend_ConfirmAllFriendRequest_SC = 17224;
  CmdId_Friend_DelFriendBatch_CS = 17225;
  CmdId_Friend_DelFriendBatch_SC = 17226;
  CmdId_Friend_SearchRole_CS = 17227;
  CmdId_Friend_SearchRole_SC = 17228;
  CmdId_Friend_GetRecommend_CS = 17229;
  CmdId_Friend_GetRecommend_SC = 17230;
  CmdId_Friend_AddFriendBatch_CS = 17231;
  CmdId_Friend_AddFriendBatch_SC = 17232;
}

enum CmdId_Gacha {
  CmdId_Gacha_GetGacha_CS = 10751;
  CmdId_Gacha_GetGacha_SC = 10752;
  CmdId_Gacha_DoGacha_CS = 10753;
  CmdId_Gacha_DoGacha_SC = 10754;
  CmdId_Gacha_SetWishList_CS = 10755;
  CmdId_Gacha_SetWishList_SC = 10756;
  CmdId_Gacha_GetWishList_CS = 10757;
  CmdId_Gacha_GetWishList_SC = 10758;
  CmdId_Gacha_GetRecord_CS = 10759;
  CmdId_Gacha_GetRecord_SC = 10760;
  CmdId_Gacha_TakeStepSeq_CS = 10761;
  CmdId_Gacha_TakeStepSeq_SC = 10762;
}

enum CmdId_Game_Push {
  CmdId_Push_Error = 20001;
  CmdId_Push_DailyRefresh = 20002;
  CmdId_Push_SetLevel = 20003;
  CmdId_Push_Warning = 20004;
  CmdId_Push_SetItem = 20005;
  CmdId_Push_SetHeroData = 20006;
  CmdId_Push_KickPlayer = 20007;
  CmdId_Push_NewMailNotify = 20008;
  CmdId_Push_Notice = 20009;
  CmdId_Push_DelNotice = 20010;
  CmdId_Push_Chat = 20011;
  CmdId_Push_Activity_Status = 20012;
  CmdId_Push_Activity_Remove = 20013;
  CmdId_Push_Activity_Change = 20014;
  CmdId_Push_Activity_Reload = 20015;
  CmdId_Push_IAPDelivery = 20016;
  CmdId_Push_TotalRecharge = 20017;
  CmdId_Push_Vip = 20018;
  CmdId_Push_TotalRechargeDiamond = 20019;
  CmdId_Push_AddictTime = 20020;
  CmdId_Push_SetSpecialItem = 20021;
  CmdId_Push_HeroList = 20022;
  CmdId_Push_DelHero = 20023;
  CmdId_Push_AddSameHero = 20024;
  CmdId_Push_Elva_Message = 20025;
  CmdId_Push_IAPMonitor = 20026;
  CmdId_Push_DelEquip = 20027;
  CmdId_Push_EquipList = 20028;
  CmdId_Push_SetQuestDataBatch = 20029;
  CmdId_Push_Notify_FBFace = 20030;
  CmdId_Push_NeedReload = 20031;
  CmdId_Push_GetEmoji = 20032;
  CmdId_Push_Activity_RemoveBatch = 20033;
  CmdId_Push_Activity_ChangeBatch = 20034;
  CmdId_Push_Hero_AddFashion = 20035;
  CmdId_Push_SetUniqueItem = 20036;
  CmdId_Push_UploadFlog = 20037;
  CmdId_Push_GM_DailyRefresh = 20038;
  CmdId_Push_ChatGroupLeave = 20050;
  CmdId_Push_ChatGroupNew = 20051;
  CmdId_Push_ChatGroupNewMember = 20052;
  CmdId_Push_ChatGroupRemove = 20053;
  CmdId_Push_ChatGroupSetName = 20054;
  CmdId_Push_ChatChange = 20055;
  CmdId_Push_Chat_PersonalAllMsg = 20056;
  CmdId_Push_Chat_GroupAllMsg = 20057;
  CmdId_Push_Chat_CreateNewPersonalChat = 20058;
  CmdId_Push_Chat_DelPersonalChat = 20059;
  CmdId_Push_Notify_Chat = 20060;
  CmdId_Push_Notify_PersonalChat = 20061;
  CmdId_Push_Notify_GroupEvent = 20062;
  CmdId_Push_Notify_AddGroupInfo = 20063;
  CmdId_Push_CrossChatGroup_Leave = 20064;
  CmdId_Push_CrossChatGroup_Dismiss = 20065;
  CmdId_Push_CrossChatGroup_Join = 20066;
  CmdId_Push_Friend_AddFriend = 20080;
  CmdId_Push_Friend_AddFriendRequest = 20081;
  CmdId_Push_Friend_DelFriend = 20082;
  CmdId_Push_Friend_RecieveHeart = 20083;
  CmdId_Push_HasNewFace = 20084;
  CmdId_Push_FriendOnline = 20085;
  CmdId_Push_FriendOffline = 20086;
  CmdId_Push_Alliance_SetDevelopment = 20100;
  CmdId_Push_Alliance_MemberLeave = 20101;
  CmdId_Push_Alliance_DelRoleApply = 20102;
  CmdId_Push_Alliance_MemberJoin = 20103;
  CmdId_Push_Alliance_BulletinChange = 20104;
  CmdId_Push_Alliance_ApplyListClear = 20105;
  CmdId_Push_Alliance_PostChange = 20106;
  CmdId_Push_Alliance_SettingChange = 20107;
  CmdId_Push_Alliance_Levelup = 20108;
  CmdId_Push_Alliance_Transfer = 20109;
  CmdId_Push_Alliance_Destroy = 20110;
  CmdId_Push_AllianceMemberOnline = 20111;
  CmdId_Push_AllianceMemberOffline = 20112;
  CmdId_Push_JoinAllianceCount = 20113;
  CmdId_Push_Alliance_AddApplyMember = 20114;
  CmdId_Push_Alliance_DelApplyMember = 20115;
  CmdId_Push_Notify_AllianceChat = 20116;
  CmdId_Push_Alliance_BeInvite = 20117;
  CmdId_Push_Alliance_SetMemberActive = 20118;
  CmdId_Push_Notify_AllianceConfirm = 20119;
  CmdId_Push_Alliance_AddNewRecieveCard = 20120;
  CmdId_Push_NotifyAllianceMail = 20121;
  CmdId_Push_SetAllianceMailSendNum = 20122;
  CmdId_Push_Alliance_SetTotalActive = 20123;
  CmdId_Push_AllianceBattle_NewRound = 20124;
  CmdId_Push_RoomEnter = 20201;
  CmdId_Push_RoomLeave = 20202;
  CmdId_Push_RoomInvite = 20203;
  CmdId_Push_RoomDiscard = 20204;
  CmdId_Push_RoomInviteResult = 20205;
  CmdId_Push_RoomKick = 20206;
  CmdId_Push_RoomChat = 20207;
  CmdId_Push_EnterMatch = 20208;
  CmdId_Push_EnterBattle = 20209;
  CmdId_Push_BeginMultiFightTest = 20210;
  CmdId_Push_SystemOpen = 20301;
  CmdId_Push_AfkLevel = 20302;
  CmdId_Push_DungeonChapterMop = 20303;
  CmdId_Push_PassStage = 20304;
  CmdId_Push_SurveyStatus = 20305;
  CmdId_Push_FormPower = 20306;
  CmdId_Push_InheritLevel = 20307;
  CmdId_Push_StageTimes = 20308;
  CmdId_Push_FightingStage = 20309;
  CmdId_Push_OriginalArenaMineInfo = 20310;
  CmdId_Push_HeroAttract = 20311;
  CmdId_Push_LegacyData = 20312;
  CmdId_Push_Quest_AchieveScore = 20313;
  CmdId_Push_Castle_StatueLevel = 20314;
  CmdId_Push_ReplaceArena_BattleEndUpdate = 20317;
  CmdId_Push_ReplaceArena_RankChange = 20318;
  CmdId_Push_ReplaceArena_NotifySeasonReward = 20319;
  CmdId_Push_Lamia_Quest = 20320;
  CmdId_Push_Lamia_Stage = 20321;
  CmdId_Push_InheritGrid = 20322;
  CmdId_Push_Castle_AddPlaceStory = 20323;
  CmdId_Push_Castle_AddDispatch = 20324;
  CmdId_Push_Rogue_FinishChallenge = 20325;
  CmdId_Push_Hunting_Boss = 20326;
  CmdId_Push_Alliance_Battle_Boss = 20327;
  CmdId_Push_Hunting_RankUpdate = 20328;
  CmdId_Push_Ancient_Quest = 20329;
  CmdId_Push_NewGift = 20330;
  CmdId_Push_LegacyStage = 20331;
  CmdId_Push_Letter_Quest = 20332;
  CmdId_Push_BaseStoreMonthlyCard = 20630;
  CmdId_Push_BaseStoreMonthlyCardReward = 20631;
  CmdId_Push_BaseStoreChapter = 20632;
  CmdId_Push_BaseStoreChapterReward = 20633;
  CmdId_Push_Notify_OriginalArenaReward = 20634;
  CmdId_Push_SoloRaid_FinishRaid = 20635;
  CmdId_Push_SoloRaid_CurRaid = 20636;
  CmdId_Push_Notify_SoloRaidReward = 20637;
  CmdId_Push_NewActivityPickupGift = 20638;
  CmdId_Push_SoloRaid_RankUpdate = 20639;
  CmdId_Push_NewRankTarget = 20640;
  CmdId_Push_Notify_HuntingRankReward = 20641;
}

enum CmdId_GameBattle {
  CmdId_Battle_StartMatch_CS = 19001;
  CmdId_Battle_StartMatch_SC = 19002;
  CmdId_Battle_QuitMatch_CS = 19005;
  CmdId_Battle_QuitMatch_SC = 19006;
  CmdId_Battle_MatchInfo_CS = 19009;
  CmdId_Battle_MatchInfo_SC = 19010;
  CmdId_Battle_ReconnectFailed_CS = 19032;
  CmdId_Battle_ReconnectFailed_SC = 19033;
  CmdId_Battle_ReconnectInfo_CS = 19034;
  CmdId_Battle_ReconnectInfo_SC = 19035;
  CmdId_Battle_RecvEnterBattle_CS = 19048;
  CmdId_Battle_RecvEnterBattle_SC = 19049;
}

enum CmdId_Guide {
  CmdId_Guide_SetGuide_CS = 14201;
  CmdId_Guide_SetGuide_SC = 14202;
  CmdId_Guide_GetGuide_CS = 14203;
  CmdId_Guide_GetGuide_SC = 14204;
}

enum CmdId_Hero {
  CmdId_Hero_GetList_CS = 10401;
  CmdId_Hero_GetList_SC = 10402;
  CmdId_Hero_LevelUp_CS = 10403;
  CmdId_Hero_LevelUp_SC = 10404;
  CmdId_Hero_InstallEquipBatch_CS = 10405;
  CmdId_Hero_InstallEquipBatch_SC = 10406;
  CmdId_Hero_UninstallAllEquip_CS = 10407;
  CmdId_Hero_UninstallAllEquip_SC = 10408;
  CmdId_Hero_InstallEquip_CS = 10409;
  CmdId_Hero_InstallEquip_SC = 10410;
  CmdId_Hero_UninstallEquip_CS = 10411;
  CmdId_Hero_UninstallEquip_SC = 10412;
  CmdId_Hero_SwapEquip_CS = 10413;
  CmdId_Hero_SwapEquip_SC = 10414;
  CmdId_Hero_ResetLevel_CS = 10415;
  CmdId_Hero_ResetLevel_SC = 10416;
  CmdId_Hero_Break_CS = 10417;
  CmdId_Hero_Break_SC = 10418;
  CmdId_Hero_SkillLevelUp_CS = 10419;
  CmdId_Hero_SkillLevelUp_SC = 10420;
  CmdId_Hero_SetHeroLove_CS = 10421;
  CmdId_Hero_SetHeroLove_SC = 10422;
  CmdId_Hero_SetFashion_CS = 10423;
  CmdId_Hero_SetFashion_SC = 10424;
  CmdId_Hero_SkillReset_CS = 10425;
  CmdId_Hero_SkillReset_SC = 10426;
  CmdId_Form_GetForm_CS = 10430;
  CmdId_Form_GetForm_SC = 10431;
  CmdId_Form_SetForm_CS = 10432;
  CmdId_Form_SetForm_SC = 10433;
  CmdId_Form_SetFormStar_CS = 10434;
  CmdId_Form_SetFormStar_SC = 10435;
  CmdId_Form_GetPreset_CS = 10436;
  CmdId_Form_GetPreset_SC = 10437;
  CmdId_Form_SetPreset_CS = 10438;
  CmdId_Form_SetPreset_SC = 10439;
  CmdId_Form_SetMutexForm_CS = 10440;
  CmdId_Form_SetMutexForm_SC = 10441;
  CmdId_Form_GetMultiForm_CS = 10442;
  CmdId_Form_GetMultiForm_SC = 10443;
  CmdId_Form_SetFormCard_CS = 10444;
  CmdId_Form_SetFormCard_SC = 10445;
  CmdId_Inherit_GetData_CS = 10450;
  CmdId_Inherit_GetData_SC = 10451;
  CmdId_Inherit_AddHero_CS = 10452;
  CmdId_Inherit_AddHero_SC = 10453;
  CmdId_Inherit_DelHero_CS = 10454;
  CmdId_Inherit_DelHero_SC = 10455;
  CmdId_Inherit_UnlockGrid_CS = 10456;
  CmdId_Inherit_UnlockGrid_SC = 10457;
  CmdId_Inherit_ResetGrid_CS = 10458;
  CmdId_Inherit_ResetGrid_SC = 10459;
  CmdId_Inherit_Evolve_CS = 10460;
  CmdId_Inherit_Evolve_SC = 10461;
  CmdId_Inherit_LevelUp_CS = 10462;
  CmdId_Inherit_LevelUp_SC = 10463;
}

enum CmdId_Hunting {
  CmdId_Hunting_GetData_CS = 12501;
  CmdId_Hunting_GetData_SC = 12502;
  CmdId_Hunting_ChooseBuff_CS = 12503;
  CmdId_Hunting_ChooseBuff_SC = 12504;
  CmdId_Hunting_TakeBossReward_CS = 12505;
  CmdId_Hunting_TakeBossReward_SC = 12506;
  CmdId_Hunting_GetRankList_CS = 12507;
  CmdId_Hunting_GetRankList_SC = 12508;
  CmdId_Hunting_GetPlayerRecord_CS = 12509;
  CmdId_Hunting_GetPlayerRecord_SC = 12510;
  CmdId_Hunting_GetMyRank_CS = 12511;
  CmdId_Hunting_GetMyRank_SC = 12512;
}

enum CmdId_Item {
  CmdId_Item_GetList_CS = 10201;
  CmdId_Item_GetList_SC = 10202;
  CmdId_Item_Sell_CS = 10203;
  CmdId_Item_Sell_SC = 10204;
  CmdId_Item_Use_CS = 10205;
  CmdId_Item_Use_SC = 10206;
  CmdId_Item_SellBatch_CS = 10207;
  CmdId_Item_SellBatch_SC = 10208;
  CmdId_Item_Buy_CS = 10213;
  CmdId_Item_Buy_SC = 10214;
}

enum CmdId_Lamia {
  CmdId_Lamia_GetList_CS = 19101;
  CmdId_Lamia_GetList_SC = 19102;
  CmdId_Lamia_SignIn_GetAward_CS = 19103;
  CmdId_Lamia_SignIn_GetAward_SC = 19104;
  CmdId_Lamia_Quest_GetAward_CS = 19105;
  CmdId_Lamia_Quest_GetAward_SC = 19106;
  CmdId_Lamia_Quest_GetAllAward_CS = 19107;
  CmdId_Lamia_Quest_GetAllAward_SC = 19108;
  CmdId_Lamia_MiniGame_Finish_CS = 19109;
  CmdId_Lamia_MiniGame_Finish_SC = 19110;
  CmdId_Lamia_MiniGame_GetAllAward_CS = 19111;
  CmdId_Lamia_MiniGame_GetAllAward_SC = 19112;
  CmdId_Lamia_Stage_Sweep_CS = 19113;
  CmdId_Lamia_Stage_Sweep_SC = 19114;
  CmdId_Lamia_GetExploreData_CS = 19115;
  CmdId_Lamia_GetExploreData_SC = 19116;
  CmdId_Lamia_SetExploreData_CS = 19117;
  CmdId_Lamia_SetExploreData_SC = 19118;
  CmdId_Lamia_DailyQuest_GetAward_CS = 19119;
  CmdId_Lamia_DailyQuest_GetAward_SC = 19120;
  CmdId_Lamia_GameQuest_GetAward_CS = 19121;
  CmdId_Lamia_GameQuest_GetAward_SC = 19122;
  CmdId_Lamia_GameQuest_GetAllAward_CS = 19123;
  CmdId_Lamia_GameQuest_GetAllAward_SC = 19124;
  CmdId_Lamia_GetClueAward_CS = 19125;
  CmdId_Lamia_GetClueAward_SC = 19126;
  CmdId_Lamia_GetSubActAward_CS = 19127;
  CmdId_Lamia_GetSubActAward_SC = 19128;
}

enum CmdId_Legacy {
  CmdId_Legacy_GetList_CS = 18051;
  CmdId_Legacy_GetList_SC = 18052;
  CmdId_Legacy_Upgrade_CS = 18053;
  CmdId_Legacy_Upgrade_SC = 18054;
  CmdId_Legacy_Install_CS = 18055;
  CmdId_Legacy_Install_SC = 18056;
  CmdId_Legacy_Uninstall_CS = 18057;
  CmdId_Legacy_Uninstall_SC = 18058;
  CmdId_Legacy_Swap_CS = 18059;
  CmdId_Legacy_Swap_SC = 18060;
  CmdId_Legacy_InstallBatch_CS = 18061;
  CmdId_Legacy_InstallBatch_SC = 18062;
}

enum CmdId_LegacyStage {
  CmdId_LegacyStage_GetInit_CS = 19351;
  CmdId_LegacyStage_GetInit_SC = 19352;
  CmdId_LegacyStage_GameLoad_CS = 19353;
  CmdId_LegacyStage_GameLoad_SC = 19354;
  CmdId_LegacyStage_GameOperate_CS = 19355;
  CmdId_LegacyStage_GameOperate_SC = 19356;
  CmdId_LegacyStage_GameEndRound_CS = 19357;
  CmdId_LegacyStage_GameEndRound_SC = 19358;
  CmdId_LegacyStage_GamePass_CS = 19359;
  CmdId_LegacyStage_GamePass_SC = 19360;
  CmdId_LegacyStage_GameReset_CS = 19361;
  CmdId_LegacyStage_GameReset_SC = 19362;
  CmdId_LegacyStage_GameRollback_CS = 19363;
  CmdId_LegacyStage_GameRollback_SC = 19364;
  CmdId_LegacyStage_TakeChapterReward_CS = 19365;
  CmdId_LegacyStage_TakeChapterReward_SC = 19366;
}

enum CmdId_Login {
  CmdId_Login_Auth_CS = 1;
  CmdId_Login_Auth_SC = 2;
  CmdId_Login_GetZone_CS = 3;
  CmdId_Login_GetZone_SC = 4;
  CmdId_Login_CheckUpgrade_CS = 5;
  CmdId_Login_CheckUpgrade_SC = 6;
  CmdId_Login_GetBulletin_CS = 7;
  CmdId_Login_GetBulletin_SC = 8;
  CmdId_Login_UpdateDeviceToken_CS = 9;
  CmdId_Login_UpdateDeviceToken_SC = 10;
  CmdId_Login_CheckSwitchZone_CS = 11;
  CmdId_Login_CheckSwitchZone_SC = 12;
  CmdId_Login_Register_CS = 13;
  CmdId_Login_Register_SC = 14;
}

enum CmdId_Mail {
  CmdId_Mail_GetMail_CS = 11201;
  CmdId_Mail_GetMail_SC = 11202;
  CmdId_Mail_ReadMail_CS = 11203;
  CmdId_Mail_ReadMail_SC = 11204;
  CmdId_Mail_DelMail_CS = 11205;
  CmdId_Mail_DelMail_SC = 11206;
  CmdId_Mail_RcvMailAttach_CS = 11207;
  CmdId_Mail_RcvMailAttach_SC = 11208;
  CmdId_Mail_RcvAllMailAttach_CS = 11209;
  CmdId_Mail_RcvAllMailAttach_SC = 11210;
  CmdId_Mail_DelAllRcvMail_CS = 11211;
  CmdId_Mail_DelAllRcvMail_SC = 11212;
  CmdId_Mail_GetNewMail_CS = 11213;
  CmdId_Mail_GetNewMail_SC = 11214;
  CmdId_Mail_GetOneMail_CS = 11215;
  CmdId_Mail_GetOneMail_SC = 11216;
  CmdId_Mail_WriteMail_CS = 11217;
  CmdId_Mail_WriteMail_SC = 11218;
  CmdId_Mail_ReportBadMail_CS = 11219;
  CmdId_Mail_ReportBadMail_SC = 11220;
  CmdId_Mail_DelCollectMail_CS = 11221;
  CmdId_Mail_DelCollectMail_SC = 11222;
}

enum CmdId_Merge {
  CmdId_Merge_GetInitMust_CS = 15601;
  CmdId_Merge_GetInitMust_SC = 15602;
  CmdId_Merge_GetInit_CS = 15603;
  CmdId_Merge_GetInit_SC = 15604;
}

enum CmdId_Misc {
  CmdId_Misc_ReportBug_CS = 19151;
  CmdId_Misc_ReportBug_SC = 19152;
  CmdId_Misc_QueryPassStageArrange_CS = 19153;
  CmdId_Misc_QueryPassStageArrange_SC = 19154;
}

enum CmdId_Net {
  CmdId_Net_Connect_CS = 10001;
  CmdId_Net_Connect_SC = 10002;
  CmdId_Net_DisConnect_CS = 10003;
  CmdId_Net_DisConnect_SC = 10004;
  CmdId_Net_Idle_CS = 10005;
  CmdId_Net_Idle_SC = 10006;
  CmdId_Net_Exchange_SessionKey_CS = 10007;
  CmdId_Net_Exchange_SessionKey_SC = 10008;
  CmdId_Net_SetSkeyExpireTime_CS = 10009;
  CmdId_Net_SetSkeyExpireTime_SC = 10010;
  CmdId_Net_NotifyPush_CS = 10011;
  CmdId_Net_NotifyPush_SC = 10012;
  CmdId_Net_Echo_CS = 10013;
  CmdId_Net_Echo_SC = 10014;
  CmdId_Net_TestStart_CS = 10015;
  CmdId_Net_TestFrameUp_CS = 10016;
  CmdId_Net_TestFrameDown_SC = 10017;
  CmdId_Net_TestStop_CS = 10018;
  CmdId_Net_Ping_CS = 10019;
  CmdId_Net_Ping_SC = 10020;
}

enum CmdId_OriginalArena {
  CmdId_OriginalArena_GetInit_CS = 19051;
  CmdId_OriginalArena_GetInit_SC = 19052;
  CmdId_OriginalArena_RefreshEnemy_CS = 19053;
  CmdId_OriginalArena_RefreshEnemy_SC = 19054;
  CmdId_OriginalArena_GetEnemyDetail_CS = 19055;
  CmdId_OriginalArena_GetEnemyDetail_SC = 19056;
  CmdId_OriginalArena_RankList_CS = 19057;
  CmdId_OriginalArena_RankList_SC = 19058;
  CmdId_OriginalArena_TakeSeasonReward_CS = 19059;
  CmdId_OriginalArena_TakeSeasonReward_SC = 19060;
  CmdId_OriginalArena_GetArenaReport_CS = 19061;
  CmdId_OriginalArena_GetArenaReport_SC = 19062;
  CmdId_OriginalArena_BuyTicket_CS = 19063;
  CmdId_OriginalArena_BuyTicket_SC = 19064;
}

enum CmdId_Ping {
  CmdId_Ping_ReportPing_CS = 119150;
  CmdId_Ping_ReportPing_SC = 119151;
  CmdId_Ping_GetAllServerIp_CS = 119152;
  CmdId_Ping_GetAllServerIp_SC = 119153;
  CmdId_Ping_ReportPingNew_CS = 119154;
  CmdId_Ping_ReportPingNew_SC = 119155;
  CmdId_Ping_ReportPingV2_CS = 119456;
  CmdId_Ping_ReportPingV2_SC = 119457;
}

enum CmdId_Quest {
  CmdId_Quest_GetList_CS = 10501;
  CmdId_Quest_GetList_SC = 10502;
  CmdId_Quest_TakeReward_CS = 10503;
  CmdId_Quest_TakeReward_SC = 10504;
  CmdId_Quest_TakeMainGroupReward_CS = 10505;
  CmdId_Quest_TakeMainGroupReward_SC = 10506;
  CmdId_Quest_TakeActiveReward_CS = 10507;
  CmdId_Quest_TakeActiveReward_SC = 10508;
  CmdId_Quest_FinishResourceQuest_CS = 10509;
  CmdId_Quest_FinishResourceQuest_SC = 10510;
  CmdId_Quest_TakeAchieveReward_CS = 10511;
  CmdId_Quest_TakeAchieveReward_SC = 10512;
  CmdId_Quest_GetInit_CS = 10513;
  CmdId_Quest_GetInit_SC = 10514;
}

enum CmdId_Rank {
  CmdId_Rank_GetList_CS = 11301;
  CmdId_Rank_GetList_SC = 11302;
  CmdId_Rank_GetRank_CS = 11303;
  CmdId_Rank_GetRank_SC = 11304;
  CmdId_Rank_GetRole_CS = 11305;
  CmdId_Rank_GetRole_SC = 11306;
  CmdId_Rank_DrawTargetReward_CS = 11307;
  CmdId_Rank_DrawTargetReward_SC = 11308;
  CmdId_Rank_GetTargetRank_CS = 11309;
  CmdId_Rank_GetTargetRank_SC = 11310;
}

enum CmdId_Recommend {
  CmdId_Recommend_GetInit_CS = 19451;
  CmdId_Recommend_GetInit_SC = 19452;
}

enum CmdId_ReplaceArena {
  CmdId_ReplaceArena_GetInit_CS = 12401;
  CmdId_ReplaceArena_GetInit_SC = 12402;
  CmdId_ReplaceArena_RefreshEnemy_CS = 12403;
  CmdId_ReplaceArena_RefreshEnemy_SC = 12404;
  CmdId_ReplaceArena_GetEnemyDetail_CS = 12405;
  CmdId_ReplaceArena_GetEnemyDetail_SC = 12406;
  CmdId_ReplaceArena_GetRankList_CS = 12407;
  CmdId_ReplaceArena_GetRankList_SC = 12408;
  CmdId_ReplaceArena_BuyTicket_CS = 12409;
  CmdId_ReplaceArena_BuyTicket_SC = 12410;
  CmdId_ReplaceArena_SeeAfk_CS = 12411;
  CmdId_ReplaceArena_SeeAfk_SC = 12412;
  CmdId_ReplaceArena_TakeAfk_CS = 12413;
  CmdId_ReplaceArena_TakeAfk_SC = 12414;
  CmdId_ReplaceArena_GetBattleRecord_CS = 12415;
  CmdId_ReplaceArena_GetBattleRecord_SC = 12416;
}

enum CmdId_Rogue {
  CmdId_Rogue_GetData_CS = 14351;
  CmdId_Rogue_GetData_SC = 14352;
  CmdId_Rogue_UnlockTech_CS = 14353;
  CmdId_Rogue_UnlockTech_SC = 14354;
  CmdId_Rogue_TakeReward_CS = 14355;
  CmdId_Rogue_TakeReward_SC = 14356;
}

enum CmdId_Role {
  CmdId_Role_Init_CS = 10101;
  CmdId_Role_Init_SC = 10102;
  CmdId_Role_BindAccount_CS = 10103;
  CmdId_Role_BindAccount_SC = 10104;
  CmdId_Role_ServerTime_CS = 10105;
  CmdId_Role_ServerTime_SC = 10106;
  CmdId_Role_SetHead_CS = 10107;
  CmdId_Role_SetHead_SC = 10108;
  CmdId_Role_RandomName_CS = 10109;
  CmdId_Role_RandomName_SC = 10110;
  CmdId_Role_SetName_CS = 10111;
  CmdId_Role_SetName_SC = 10112;
  CmdId_Role_SetHeadFrame_CS = 10113;
  CmdId_Role_SetHeadFrame_SC = 10114;
  CmdId_Role_UpdateBindAccount_CS = 10115;
  CmdId_Role_UpdateBindAccount_SC = 10116;
  CmdId_Role_GetBindAccount_CS = 10117;
  CmdId_Role_GetBindAccount_SC = 10118;
  CmdId_Role_SeeOther_CS = 10119;
  CmdId_Role_SeeOther_SC = 10120;
  CmdId_Role_UpdateDeviceToken_CS = 10121;
  CmdId_Role_UpdateDeviceToken_SC = 10122;
  CmdId_Role_GetNotice_CS = 10123;
  CmdId_Role_GetNotice_SC = 10124;
  CmdId_Role_ReportPushClick_CS = 10125;
  CmdId_Role_ReportPushClick_SC = 10126;
  CmdId_Role_ExchangeCDKey_CS = 10127;
  CmdId_Role_ExchangeCDKey_SC = 10128;
  CmdId_Role_UnbindAccount_CS = 10129;
  CmdId_Role_UnbindAccount_SC = 10130;
  CmdId_Role_SetShowBackground_CS = 10131;
  CmdId_Role_SetShowBackground_SC = 10132;
  CmdId_Role_GetZoneList_CS = 10133;
  CmdId_Role_GetZoneList_SC = 10134;
  CmdId_Role_SetCard_CS = 10135;
  CmdId_Role_SetCard_SC = 10136;
  CmdId_Role_SetPushOption_CS = 10137;
  CmdId_Role_SetPushOption_SC = 10138;
  CmdId_Role_DisplayVip_CS = 10139;
  CmdId_Role_DisplayVip_SC = 10140;
  CmdId_Role_GetOtherProgress_CS = 10141;
  CmdId_Role_GetOtherProgress_SC = 10142;
  CmdId_Role_GetFBFace_CS = 10143;
  CmdId_Role_GetFBFace_SC = 10144;
  CmdId_Role_GetUserToken_CS = 10145;
  CmdId_Role_GetUserToken_SC = 10146;
  CmdId_Role_CheckSwitchZone_CS = 10147;
  CmdId_Role_CheckSwitchZone_SC = 10148;
  CmdId_Role_SurveyUrl_CS = 10149;
  CmdId_Role_SurveyUrl_SC = 10150;
  CmdId_Role_SetAcceptRequestFriend_CS = 10151;
  CmdId_Role_SetAcceptRequestFriend_SC = 10152;
  CmdId_Role_ReportFace_CS = 10153;
  CmdId_Role_ReportFace_SC = 10154;
  CmdId_Role_GetLuaRepair_CS = 10155;
  CmdId_Role_GetLuaRepair_SC = 10156;
  CmdId_Role_ReadElvaMessage_CS = 10157;
  CmdId_Role_ReadElvaMessage_SC = 10158;
  CmdId_Role_DisplayGender_CS = 10159;
  CmdId_Role_DisplayGender_SC = 10160;
  CmdId_Role_SetMainBackground_CS = 10161;
  CmdId_Role_SetMainBackground_SC = 10162;
  CmdId_Role_SetMainBackgroundIndex_CS = 10163;
  CmdId_Role_SetMainBackgroundIndex_SC = 10164;
  CmdId_Role_SetSignature_CS = 10165;
  CmdId_Role_SetSignature_SC = 10166;
  CmdId_Role_PushNoticeSelect_CS = 10169;
  CmdId_Role_PushNoticeSelect_SC = 10170;
  CmdId_Role_Report_CS = 10171;
  CmdId_Role_Report_SC = 10172;
  CmdId_Role_GetSurveyToken_CS = 10181;
  CmdId_Role_GetSurveyToken_SC = 10182;
  CmdId_Role_SeeBusinessCard_CS = 10185;
  CmdId_Role_SeeBusinessCard_SC = 10186;
  CmdId_Role_SetBirthDay_CS = 10187;
  CmdId_Role_SetBirthDay_SC = 10188;
  CmdId_Role_SetGender_CS = 10189;
  CmdId_Role_SetGender_SC = 10190;
  CmdId_Role_GetRoleInfoBatch_CS = 10191;
  CmdId_Role_GetRoleInfoBatch_SC = 10192;
  CmdId_Role_UploadFBFaceId_CS = 10193;
  CmdId_Role_UploadFBFaceId_SC = 10194;
  CmdId_Role_SetCountryId_CS = 10195;
  CmdId_Role_SetCountryId_SC = 10196;
  CmdId_Role_GetCirculation_CS = 10197;
  CmdId_Role_GetCirculation_SC = 10198;
  CmdId_Role_UpgradeCirculation_CS = 10199;
  CmdId_Role_UpgradeCirculation_SC = 10200;
}

enum CmdId_Room {
  CmdId_Room_Create_CS = 10800;
  CmdId_Room_Create_SC = 10801;
  CmdId_Room_Enter_CS = 10802;
  CmdId_Room_Enter_SC = 10803;
  CmdId_Room_Leave_CS = 10804;
  CmdId_Room_Leave_SC = 10805;
  CmdId_Room_Invite_CS = 10806;
  CmdId_Room_Invite_SC = 10807;
  CmdId_Room_GetInfo_CS = 10808;
  CmdId_Room_GetInfo_SC = 10809;
  CmdId_Room_Kick_CS = 10810;
  CmdId_Room_Kick_SC = 10811;
  CmdId_Room_Chat_CS = 10812;
  CmdId_Room_Chat_SC = 10813;
  CmdId_Room_ChangePos_CS = 10816;
  CmdId_Room_ChangePos_SC = 10817;
  CmdId_Room_InviteReject_CS = 10818;
  CmdId_Room_InviteReject_SC = 10819;
}

enum CmdId_Shop {
  CmdId_Shop_GetShop_CS = 10851;
  CmdId_Shop_GetShop_SC = 10852;
  CmdId_Shop_Buy_CS = 10853;
  CmdId_Shop_Buy_SC = 10854;
  CmdId_Shop_Refresh_CS = 10855;
  CmdId_Shop_Refresh_SC = 10856;
  CmdId_Shop_GetShopList_CS = 10857;
  CmdId_Shop_GetShopList_SC = 10858;
}

enum CmdId_SimRoom {
  CmdId_SimRoom_GetData_CS = 11001;
  CmdId_SimRoom_GetData_SC = 11002;
  CmdId_SimRoom_StartSim_CS = 11003;
  CmdId_SimRoom_StartSim_SC = 11004;
  CmdId_SimRoom_ChooseEvent_CS = 11005;
  CmdId_SimRoom_ChooseEvent_SC = 11006;
  CmdId_SimRoom_ChooseOption_CS = 11007;
  CmdId_SimRoom_ChooseOption_SC = 11008;
  CmdId_SimRoom_EndSim_CS = 11009;
  CmdId_SimRoom_EndSim_SC = 11010;
  CmdId_SimRoom_ResetSim_CS = 11011;
  CmdId_SimRoom_ResetSim_SC = 11012;
  CmdId_SimRoom_Mop_CS = 11013;
  CmdId_SimRoom_Mop_SC = 11014;
  CmdId_SimRoom_MopChooseBuff_CS = 11015;
  CmdId_SimRoom_MopChooseBuff_SC = 11016;
}

enum CmdId_SnsShare {
  CmdId_Sns_Share_CS = 12001;
  CmdId_Sns_Share_SC = 12002;
}

enum CmdId_SoloRaid {
  CmdId_SoloRaid_GetData_CS = 12451;
  CmdId_SoloRaid_GetData_SC = 12452;
  CmdId_SoloRaid_ChooseRaid_CS = 12453;
  CmdId_SoloRaid_ChooseRaid_SC = 12454;
  CmdId_SoloRaid_MopUp_CS = 12455;
  CmdId_SoloRaid_MopUp_SC = 12456;
  CmdId_SoloRaid_Reset_CS = 12457;
  CmdId_SoloRaid_Reset_SC = 12458;
  CmdId_SoloRaid_GetRankList_CS = 12459;
  CmdId_SoloRaid_GetRankList_SC = 12460;
  CmdId_SoloRaid_GetPlayerRecord_CS = 12461;
  CmdId_SoloRaid_GetPlayerRecord_SC = 12462;
  CmdId_SoloRaid_GetMyRank_CS = 12463;
  CmdId_SoloRaid_GetMyRank_SC = 12464;
}

enum CmdId_Stage {
  CmdId_Stage_GetList_CS = 10601;
  CmdId_Stage_GetList_SC = 10602;
  CmdId_Stage_EnterChallenge_CS = 10603;
  CmdId_Stage_EnterChallenge_SC = 10604;
  CmdId_Stage_GetDungeonChapterMop_CS = 10609;
  CmdId_Stage_GetDungeonChapterMop_SC = 10610;
  CmdId_Stage_MopUp_CS = 10611;
  CmdId_Stage_MopUp_SC = 10612;
  CmdId_Stage_GetStageTimes_CS = 10615;
  CmdId_Stage_GetStageTimes_SC = 10616;
  CmdId_Stage_GetStageDetail_CS = 10617;
  CmdId_Stage_GetStageDetail_SC = 10618;
}

enum CmdId_Store {
  CmdId_Store_IAP_Deliver_Apple_CS = 11901;
  CmdId_Store_IAP_Deliver_Apple_SC = 11902;
  CmdId_Store_IAP_Deliver_Google_CS = 11903;
  CmdId_Store_IAP_Deliver_Google_SC = 11904;
  CmdId_Store_Request_IAPBuy_CS = 11905;
  CmdId_Store_Request_IAPBuy_SC = 11906;
  CmdId_Store_Trace_IAPBuy_CS = 11907;
  CmdId_Store_Trace_IAPBuy_SC = 11908;
  CmdId_Store_IAP_Deliver_Welfare_CS = 11909;
  CmdId_Store_IAP_Deliver_Welfare_SC = 11910;
  CmdId_Store_IAP_Deliver_DMM_CS = 11911;
  CmdId_Store_IAP_Deliver_DMM_SC = 11912;
  CmdId_Store_WeGame_Session_Start_CS = 11913;
  CmdId_Store_WeGame_Session_Start_SC = 11914;
}

enum CmdId_Strategy {
  CmdId_Strategy_GetList_CS = 10251;
  CmdId_Strategy_GetList_SC = 10252;
  CmdId_Strategy_Set_CS = 10253;
  CmdId_Strategy_Set_SC = 10254;
  CmdId_Strategy_Del_CS = 10255;
  CmdId_Strategy_Del_SC = 10256;
  CmdId_Strategy_Add_CS = 10257;
  CmdId_Strategy_Add_SC = 10258;
  CmdId_Strategy_Choose_CS = 10263;
  CmdId_Strategy_Choose_SC = 10264;
}

enum CmdOriginalArenaRewardType {
  CmdOriginalArenaRewardType_Daily = 1;
  CmdOriginalArenaRewardType_Season = 2;
}

enum CmdRankType {
  CmdRankType_MainStage = 1001;
  CmdRankType_MainHardStage = 1002;
  CmdRankType_HeroCamp1 = 2001;
  CmdRankType_HeroCamp2 = 2002;
  CmdRankType_HeroCamp3 = 2003;
  CmdRankType_HeroCamp4 = 2004;
  CmdRankType_TowerStageMain = 3001;
  CmdRankType_TowerStageTribe1 = 3002;
  CmdRankType_TowerStageTribe2 = 3003;
  CmdRankType_TowerStageTribe3 = 3004;
  CmdRankType_TowerStageTribe4 = 3005;
}

enum CmdRogueRecordType {
  CmdRogueRecordType_Item = 1;
  CmdRogueRecordType_Monster = 2;
}

enum CmdSimpleDataType {
  CmdSimpleDataType_OriginalPvpDefend = 1;
  CmdSimpleDataType_TopFiveHeroPower = 2;
  CmdSimpleDataType_ReplaceArenaDefence = 3;
}

enum CollectMailConditionType {
  CollectMailConditionType_Date = 1;
  CollectMailConditionType_Stage = 2;
  CollectMailConditionType_RegDay = 3;
  CollectMailConditionType_ContinuousLoginDays = 4;
  CollectMailConditionType_RoleBirthday = 5;
  CollectMailConditionType_HeroBirthday = 6;
}

enum ConnStateChangeType {
  ConnState_Battle_Disconnect = 1;
  ConnState_Battle_ReconnectReady = 2;
}

enum CouncilHeroResultType {
  CouncilHeroResultType_Same = 1;
  CouncilHeroResultType_NotSame = 2;
  CouncilHeroResultType_Critical = 3;
  CouncilHeroResultType_None = 4;
}

enum CouncilOpinionType {
  CouncilOpinionType_Agree = 1;
  CouncilOpinionType_Neutral = 2;
  CouncilOpinionType_Disagree = 3;
}

enum eCampType {
  CampTypeUnkown = 0;
  CampTypeA = 1;
  CampTypeB = 2;
  CampTypeJudge = 5;
  CampTypeLookerA = 11;
  CampTypeLookerB = 12;
}

enum EnumDebugFlag {
  EnumDebugFlag_ShowDebug = 1;
}

enum EnumLanguage {
  EnumLanguage_En = 0;
  EnumLanguage_Cn = 1;
}

enum EquipQuality {
  EquipQuality_T1 = 1;
  EquipQuality_T2 = 2;
  EquipQuality_T3 = 3;
  EquipQuality_T4 = 4;
  EquipQuality_T5 = 5;
  EquipQuality_T6 = 6;
  EquipQuality_T7 = 7;
  EquipQuality_T8 = 8;
  EquipQuality_T9 = 9;
  EquipQuality_T10 = 10;
}

enum ErrorCode {
  Error_Idip_AccountIsNull = 1;
  Error_HaveNoRole = 1000;
  Error_Gm_Param = 1001;
  Error_Gm_NoParser = 1002;
  Error_Role_Null = 1003;
  Error_Sys_NoCmdParser = 1004;
  Error_Invalid_Config = 1005;
  Error_GUIDRepeat = 1006;
  Error_Gm_Execute = 1007;
  Error_Cmd_Execute = 1008;
  Error_TableNoData = 1009;
  Error_NoBagSpace = 1010;
  Error_Item_NotEnough = 1011;
  Error_Item_NotExist = 1012;
  Error_Item_Invalid = 1013;
  Error_ZoneIdExceedLimit = 1014;
  Error_GUIDAllocExceedLimit = 1015;
  Error_CoinNotEnough = 1016;
  Error_DiamondNotEnough = 1017;
  Error_LevelNotEnough = 1018;
  Error_BagNoSpaceSendMail = 1019;
  Error_Item_CannotSell = 1020;
  Error_Item_CannotUse = 1021;
  Error_Item_UseNoReward = 1022;
  Error_Item_InvalidCost = 1023;
  Error_NetBusy = 1024;
  Error_FightVerify = 1025;
  Error_RoleNameEmpty = 1026;
  Error_DataNoChange = 1027;
  Error_VipLevelNotEnough = 1028;
  Error_Param_Duplicate = 1029;
  Error_Role_BanLogin = 1031;
  Error_Role_BanSpeak = 1032;
  Error_Item_UseLimit = 1033;
  Error_Role_NotNewRole = 1034;
  Error_Role_HaveNotRecharge = 1035;
  Error_LevelTooBig = 1038;
  Error_Sys_CmdClosed = 1039;
  Error_WrongChannel = 1041;
  Error_CannotBindMultiple = 1042;
  Error_WrongOSType = 1045;
  Error_WrongCountry = 1046;
  Error_NoHistoryFightReport = 1047;
  Error_Data_NotChange = 1048;
  Error_Face_Same = 1049;
  Error_Face_Invalid = 1050;
  Error_Role_GenderHasSet = 1051;
  Error_IAP_ChannelRestrict = 1053;
  Error_Role_BanMail = 1055;
  Error_ReceiveShadowEliteReward = 1056;
  Error_Role_BanUploadFace = 1057;
  Error_BlackList_ForbidLogin = 1058;
  Error_BlackList_ForbidPay = 1059;
  Error_Role_NotCustomFace = 1061;
  Error_Role_FaceUploadInCD = 1062;
  Error_Role_FaceUploadClosed = 1063;
  Error_Role_CantDailyRefresh = 1064;
  Error_Zone_Updating = 1075;
  Error_Zone_MaxRoleNum = 1082;
  Error_Comm_NoCache = 1083;
  Error_Role_BanRefund = 1084;
  Error_Role_RefundOrderDealed = 1085;
  Error_Role_HasTakeReward = 1086;
  Error_InSendReward = 1087;
  Error_Push_RoleOnline = 1088;
  Error_Push_SettingNotOpen = 1089;
  Error_Push_ContentEmpty = 1090;
  Error_SelfAddOverflow = 1091;
  Error_Role_SignatureInvalidEncoding = 1092;
  Error_Role_SignatureLengthLimit = 1093;
  Error_Role_SignatureDirtyWord = 1094;
  Error_FightTypeError = 1095;
  Error_Signature_Error = 1096;
  Error_Token_Error = 1097;
  Error_Req_TooFrequent = 1098;
  Error_Role_NotRealName = 1099;
  Error_Limit_Times = 1100;
  Error_Limit_ReportLimit = 1101;
  Error_HasDirty = 1102;
  Error_Quest_HaveNoQuest = 1121;
  Error_Quest_NotFinish = 1122;
  Error_Quest_Over = 1123;
  Error_Quest_Doing = 1124;
  Error_Quest_NotDonePre = 1125;
  Error_Quest_StepOperType = 1126;
  Error_Quest_MainGroupNotFinish = 1127;
  Error_Quest_MainGroupTaken = 1128;
  Error_Quest_Lock = 1129;
  Error_Quest_CondError = 1130;
  Error_Quest_Disabled = 1131;
  Error_Quest_NoReward = 1132;
  Error_Quest_ActDayError = 1133;
  Error_Quest_ActNotEnoughFinish = 1134;
  Error_Quest_AchieveRewardTaken = 1135;
  Error_Quest_AchieveScoreNotEnough = 1136;
  Error_Quest_ConditionNotMatch = 1137;
  Error_Form_DesignHero = 1139;
  Error_Form_Empty = 1140;
  Error_Form_InvalidPreset = 1141;
  Error_Form_SameHero = 1142;
  Error_Form_HeroNumMax = 1143;
  Error_Form_NoChange = 1144;
  Error_Form_HeroCampRes = 1145;
  Error_Form_NoBattleMode = 1146;
  Error_Form_SameIdentity = 1147;
  Error_Form_CantSave = 1148;
  Error_Form_PosInvalid = 1149;
  Error_System_NotOpen = 1150;
  Error_System_Closed = 1151;
  Error_System_RoleLevelLow = 1152;
  Error_System_StageMainNotPass = 1153;
  Error_System_GuideNotPass = 1154;
  Error_Stage_TypeError = 1160;
  Error_Stage_SubTypeError = 1161;
  Error_Stage_ChapterError = 1162;
  Error_Stage_NotEnter = 1163;
  Error_Stage_NotFinish = 1164;
  Error_Stage_CantPlayAgain = 1165;
  Error_Stage_PreNotFinish = 1166;
  Error_Stage_MainNotFinish = 1167;
  Error_Stage_MapError = 1168;
  Error_Stage_CantMop = 1169;
  Error_Stage_RoundError = 1170;
  Error_Stage_UnlockTime = 1171;
  Error_Stage_TowerClose = 1172;
  Error_Stage_GoblinNoScore = 1173;
  Error_Stage_GoblinNoReward = 1174;
  Error_Stage_FightIdError = 1175;
  Error_Stage_RequiredHero = 1176;
  Error_Stage_ForbiddenHero = 1177;
  Error_Stage_StarVerifyError = 1178;
  Error_Stage_AreaFinish = 1179;
  Error_Stage_AreaWrong = 1180;
  Error_Stage_MainChapterNotFinish = 1181;
  Error_Stage_DungeonClose = 1182;
  Error_Stage_ForbiddenCareer = 1183;
  Error_Stage_DungeonBossHpError = 1184;
  Error_Stage_DungeonNotFight = 1185;
  Error_Afk_SeeInCD = 1190;
  Error_Afk_TakeInCD = 1191;
  Error_Afk_NoReward = 1192;
  Error_Afk_InstantMaxTimes = 1193;
  Error_Fight_GenerateReportFail = 1200;
  Error_Fight_ReportExpire = 1201;
  Error_Fight_InvalidReport = 1202;
  Error_Fight_NoReport = 1203;
  Error_Fight_InvalidForm = 1204;
  Error_Fight_HeroNotInForm = 1205;
  Error_Fight_VerifyCheat = 1206;
  Error_Fight_HeroDead = 1207;
  Error_Fight_CantSkip = 1208;
  Error_Fight_WorldIdError = 1209;
  Error_Fight_PowerError = 1210;
  Error_Fight_FrameMinLimit = 1211;
  Error_Fight_MaliciousCheat = 1212;
  Error_Arena_EnemyNotEnough = 1262;
  Error_Arena_RankChanged = 1263;
  Error_Mail_Role_Null = 1270;
  Error_Mail_NotExist = 1271;
  Error_Mail_NoAttach = 1272;
  Error_Mail_LengthLimited = 1273;
  Error_Mail_NeedRcvAttach = 1274;
  Error_Mail_MailAttachNotRcv = 1275;
  Error_Mail_RcvUserNotExit = 1276;
  Error_Mail_SendToMyself = 1277;
  Error_Mail_MailAttachHasRcv = 1278;
  Error_Mail_CanNotDel = 1279;
  Error_Mail_TemplateCanNotSend = 1280;
  Error_Mail_TitleEmpty = 1281;
  Error_Mail_ContentEmpty = 1282;
  Error_Mail_CannotReportSystemMail = 1283;
  Error_Mail_Invalid = 1284;
  Error_Mail_BanReceive = 1285;
  Error_Mail_Read = 1286;
  Error_Mail_TakeAllInvalid = 1287;
  Error_Name_RoleNameExist = 1290;
  Error_Name_RoleNameSame = 1291;
  Error_Name_LengthLimit = 1293;
  Error_Name_HasDirty = 1296;
  Error_Name_InvalidChar = 1297;
  Error_Name_LengthShort = 1298;
  Error_Name_IsDigit = 1299;
  Error_Chat_InCD = 1301;
  Error_Chat_Channel = 1302;
  Error_Chat_MessageEmpty = 1303;
  Error_Chat_WasInShieldedList = 1304;
  Error_Chat_NotInShieldedList = 1305;
  Error_Chat_MessageCharError = 1306;
  Error_Chat_ForbidSystemChannel = 1307;
  Error_Chat_ShieldLimit = 1308;
  Error_Chat_Frequency = 1309;
  Error_Chat_Create = 1310;
  Error_Chat_NotCreate = 1311;
  Error_Chat_Self = 1312;
  Error_Chat_Report_frequently = 1313;
  Error_Chat_NoEmoji = 1315;
  Error_Chat_LanguageInvalid = 1316;
  Error_Chat_LanguageExist = 1317;
  Error_Chat_LanguageNotExist = 1318;
  Error_Chat_RecruitChatMaxNum = 1319;
  Error_Chat_InvalidFilter = 1320;
  Error_Chat_InvalidWorldGroupKey = 1321;
  Error_Chat_NotInGroup = 1322;
  Error_Chat_MaxGroupMember = 1323;
  Error_Chat_NotGroupHost = 1324;
  Error_Chat_GroupNotExist = 1325;
  Error_Chat_GroupInviteEmpty = 1326;
  Error_Chat_InviteSelf = 1327;
  Error_MP_KeyNotInZoneList = 1370;
  Error_MP_NoCDKey = 1371;
  Error_MP_CDKeyExpired = 1372;
  Error_MP_InvalidCDKey = 1373;
  Error_MP_CDKeyExchanged = 1374;
  Error_MP_ExchangeBindLimited = 1375;
  Error_MP_ExchangeNumLimited = 1376;
  Error_MP_InvalidDivision = 1377;
  Error_MP_LimitConfigError = 1378;
  Error_MP_InDelivering = 1379;
  Error_MP_CDKeyNotOpen = 1380;
  Error_MP_CDKeyShareLimited = 1381;
  Error_MP_NotNewRole = 1382;
  Error_MP_HaveNotRecharge = 1383;
  Error_MP_LevelTooBig = 1384;
  Error_MP_ChannelMismatch = 1385;
  Error_MP_ExchangeNumLimit = 1386;
  Error_MP_TryExchangeNumLimit = 1387;
  Error_MP_GroupExchangeNumLimit = 1388;
  Error_Alliance_Null = 1400;
  Error_Alliance_NotJoin = 1401;
  Error_Alliance_HasJoin = 1402;
  Error_Alliance_MasterCannotLeave = 1403;
  Error_Alliance_NotMaster = 1404;
  Error_Alliance_NotInMemberList = 1405;
  Error_Alliance_Self = 1406;
  Error_Alliance_MaxMember = 1407;
  Error_Alliance_NotInSameAlliance = 1408;
  Error_Alliance_InvalidName = 1409;
  Error_Alliance_UnkownJoinType = 1410;
  Error_Alliance_RecommendInvalid = 1411;
  Error_Alliance_NotLeader = 1412;
  Error_Alliance_NotInApplyList = 1413;
  Error_Alliance_InvalidPost = 1414;
  Error_Alliance_MaxLeader = 1415;
  Error_Alliance_InvalidBulletin = 1416;
  Error_Alliance_InvalidRecruit = 1417;
  Error_Alliance_NotAllowApply = 1418;
  Error_Alliance_LikeTimesLimit = 1419;
  Error_Alliance_LikeRepeat = 1420;
  Error_Alliance_LevelNotEnough = 1421;
  Error_Alliance_LevelLimit = 1422;
  Error_Alliance_MaxLevel = 1423;
  Error_Alliance_MemberNotNull = 1424;
  Error_Alliance_JoinLevelLow = 1425;
  Error_Alliance_UnkownJoinLevel = 1426;
  Error_Alliance_UnkownBadge = 1427;
  Error_Alliance_BadgeLock = 1428;
  Error_Alliance_JoinCD = 1429;
  Error_Alliance_AlreadyApply = 1430;
  Error_Alliance_PostError = 1431;
  Error_Alliance_CreateError = 1432;
  Error_Alliance_DataError = 1433;
  Error_Alliance_ShopBuyLimit = 1434;
  Error_Alliance_TodaySigned = 1435;
  Error_Alliance_MaxApplyer = 1436;
  Error_Alliance_ApplyNumLimit = 1437;
  Error_Alliance_AlreadyTransferMaster = 1438;
  Error_Alliance_NotTransferMaster = 1439;
  Error_Alliance_SameName = 1440;
  Error_Alliance_MailContentError = 1480;
  Error_Alliance_MailSendLimit = 1481;
  Error_Alliance_RepeateUserInvite = 1482;
  Error_Alliance_RepeateBeInvite = 1483;
  Error_Alliance_NoBeInvite = 1484;
  Error_Alliance_Battle_DataError = 1500;
  Error_Alliance_Battle_NotOpen = 1501;
  Error_Alliance_Battle_NotBattle = 1502;
  Error_Alliance_Battle_InSettle = 1503;
  Error_Alliance_Battle_CantLeave = 1504;
  Error_Alliance_Battle_CantKick = 1505;
  Error_Alliance_Battle_CantDestroy = 1506;
  Error_Alliance_Battle_NoBoss = 1507;
  Error_Alliance_Battle_BossDead = 1508;
  Error_Alliance_Battle_RoundError = 1509;
  Error_Alliance_Battle_ChallengeTimes = 1510;
  Error_Alliance_Battle_HeroUsed = 1511;
  Error_Alliance_Battle_BossHpError = 1512;
  Error_Shop_NotOpen = 1600;
  Error_Shop_NoConfig = 1601;
  Error_Shop_Close = 1602;
  Error_Shop_CantRefresh = 1603;
  Error_Shop_RefreshMax = 1604;
  Error_Shop_InfoExpire = 1605;
  Error_Shop_NoGoods = 1606;
  Error_Shop_StockNotEnough = 1607;
  Error_Shop_LimitBought = 1608;
  Error_Shop_GoodsNotShow = 1609;
  Error_Shop_GoodsEnd = 1610;
  Error_Store_WrongItemPrice = 1650;
  Error_Store_NotOnSell = 1651;
  Error_Store_BuyNumLimit = 1652;
  Error_Store_InMonitor = 1653;
  Error_BaseStore_NotOpen = 1700;
  Error_BaseStore_NoConfig = 1701;
  Error_BaseStore_Close = 1702;
  Error_BaseStore_CantRefresh = 1703;
  Error_BaseStore_RefreshMax = 1704;
  Error_BaseStore_InfoExpire = 1705;
  Error_BaseStore_NoGoods = 1706;
  Error_BaseStore_StockNotEnough = 1707;
  Error_BaseStore_LimitBought = 1708;
  Error_BaseStore_GoodsNotShow = 1709;
  Error_BaseStore_GoodsEnd = 1710;
  Error_BaseStore_GoodsNotMatch = 1711;
  Error_BaseStore_MonthlyCardMaxDuration = 1712;
  Error_BaseStore_ChapterAlreadyBuy = 1713;
  Error_BaseStore_ChapterPreGoodsNotConfig = 1714;
  Error_BaseStore_ChapterPreGoodsNotBuy = 1715;
  Error_BaseStore_ChapterPreGoodsNotFinish = 1716;
  Error_BaseStore_GoodsNotOn = 1717;
  Error_BaseStore_ChapterNotConfig = 1718;
  Error_BaseStore_ChapterNotBuy = 1719;
  Error_BaseStore_ChapterLevelNotEnough = 1720;
  Error_BaseStore_ChapterAlreadyReward = 1721;
  Error_BaseStore_ChapterLevelNotConfig = 1722;
  Error_BaseStore_StoreIdNotMatch = 1723;
  Error_BaseStore_StoreTypeNotSupport = 1724;
  Error_ActPayStore_NotOpen = 1750;
  Error_ActPayStore_ConfigError = 1751;
  Error_ActPayStore_StoreTime = 1752;
  Error_ActPayStore_Level = 1753;
  Error_ActPayStore_MainStage = 1754;
  Error_ActPayStore_Limit = 1755;
  Error_ActPayStore_StatusNotOpen = 1756;
  Error_ActPayStore_PreGoodsNotBuy = 1757;
  Error_ActPayStore_FreeGoods = 1758;
  Error_ActPayStore_Expire = 1759;
  Error_ActPayStore_GoodsTime = 1760;
  Error_ReplaceArena_RegroupNotOpen = 2000;
  Error_ReplaceArena_NotInPlay = 2001;
  Error_ReplaceArena_Enemy_Null = 2002;
  Error_ReplaceArena_RefreshCD = 2003;
  Error_ReplaceArena_SeasonError = 2004;
  Error_ReplaceArena_GroupError = 2005;
  Error_ReplaceArena_TicketError = 2006;
  Error_ReplaceArena_TicketNotEnough = 2007;
  Error_ReplaceArena_NoEnemyDetail = 2008;
  Error_ReplaceArena_InBattle = 2009;
  Error_ReplaceArena_BattleFormError = 2010;
  Error_ReplaceArena_SeasonChange = 2011;
  Error_ReplaceArena_NotInBattle = 2012;
  Error_ReplaceArena_BattleEndException = 2013;
  Error_ReplaceArena_EnemyGroupError = 2014;
  Error_ReplaceArena_EnemyRankLow = 2015;
  Error_ReplaceArena_NoAfkReward = 2016;
  Error_ReplaceArena_SelfRankChange = 2017;
  Error_ReplaceArena_EnemyRankChange = 2018;
  Error_ReplaceArena_GradeRankNotInit = 2019;
  Error_SoloRaid_NoActivity = 2100;
  Error_SoloRaid_ActivityChange = 2101;
  Error_SoloRaid_RaidBossError = 2102;
  Error_SoloRaid_RaidLock = 2103;
  Error_SoloRaid_CurRaidError = 2104;
  Error_SoloRaid_RaidDayChange = 2105;
  Error_SoloRaid_RaidPass = 2106;
  Error_SoloRaid_RaidTimesLimit = 2107;
  Error_SoloRaid_FightTimesLimit = 2108;
  Error_SoloRaid_HeroUsed = 2109;
  Error_SoloRaid_RaidNotPass = 2110;
  Error_SoloRaid_RaidTodayNotPass = 2111;
  Error_SoloRaid_HardCantMop = 2112;
  Error_SoloRaid_NotChosen = 2113;
  Error_SoloRaid_HasChosen = 2114;
  Error_SoloRaid_ActivitySettle = 2115;
  Error_Hunting_NoActivity = 2151;
  Error_Hunting_ActivityChange = 2152;
  Error_Hunting_ActivitySettle = 2153;
  Error_Hunting_BossNotOpen = 2154;
  Error_Hunting_BossFightEnd = 2155;
  Error_Hunting_EffectNumLimit = 2156;
  Error_Hunting_BossNoData = 2157;
  Error_Hunting_BossRewardTaken = 2158;
  Error_Hunting_BossRewardNotGet = 2159;
  Error_Hunting_BossNoBuff = 2160;
  Error_Hunting_NoGroupData = 2161;
  Error_Hunting_NoSettleControl = 2162;
  Error_Hunting_SettleAlready = 2163;
  Error_Ancient_HeroLock = 2201;
  Error_Ancient_NoHeroData = 2202;
  Error_Ancient_AddEnergyMax = 2203;
  Error_Ancient_QuestRefreshMax = 2204;
  Error_Ancient_EnergyNotEnough = 2205;
  Error_OriginalArena_BotLess = 2450;
  Error_OriginalArena_Enemy_Null = 2451;
  Error_OriginalArena_Over = 2452;
  Error_OriginalArena_NotOpen = 2453;
  Error_OriginalArena_BuyNumLimit = 2454;
  Error_OriginalArena_RefreshCD = 2455;
  Error_OriginalArena_UnkownEnemy = 2456;
  Error_OriginalArena_NotPlayingTime = 2457;
  Error_OriginalArena_CantFreeRefresh = 2458;
  Error_OriginalArena_Ticket_NotEnough = 2459;
  Error_OriginalArena_FinishChallenge = 2460;
  Error_OriginalArena_RepeatInit = 2461;
  Error_Hero_NumNoEnough = 2500;
  Error_Hero_LevelTooHigh = 2501;
  Error_Hero_NotInList = 2502;
  Error_Hero_InList = 2503;
  Error_Hero_BreakError = 2504;
  Error_Hero_SpaceLimit = 2505;
  Error_Hero_PosNoEquip = 2506;
  Error_Hero_EquipPosError = 2507;
  Error_Hero_EquipTypeError = 2508;
  Error_Hero_NoEquip = 2509;
  Error_Hero_NoNeedResetLevel = 2510;
  Error_Hero_CantBreak = 2511;
  Error_Hero_BreakMax = 2512;
  Error_Hero_SkillCantLevelUp = 2513;
  Error_Hero_SkillLevelMax = 2514;
  Error_Hero_InheritCantLevel = 2515;
  Error_Hero_LevelMaxLock = 2516;
  Error_Hero_NoChange = 2517;
  Error_Hero_NotHasFashion = 2518;
  Error_Hero_FashionNotMatch = 2519;
  Error_Hero_SameFashion = 2520;
  Error_Hero_FashionNotShow = 2521;
  Error_Hero_InheritMainLock = 2522;
  Error_Hero_NoSkillResetAct = 2523;
  Error_Hero_NoResetSkill = 2524;
  Error_Hero_FashionOrigin = 2525;
  Error_Equip_SpaceLimit = 2550;
  Error_Equip_NotExist = 2551;
  Error_Equip_Installed = 2552;
  Error_Equip_MaxLevel = 2553;
  Error_Equip_ExpItemError = 2554;
  Error_Equip_Overload = 2555;
  Error_Equip_QualityNotEnough = 2556;
  Error_Equip_CantOverload = 2557;
  Error_Equip_NotInstalled = 2558;
  Error_Equip_HeroNotSameCamp = 2559;
  Error_Equip_NotMaxLevel = 2560;
  Error_Equip_NotOverload = 2561;
  Error_Equip_OverloadNotSave = 2562;
  Error_Equip_OverloadEffectEmpty = 2563;
  Error_Equip_OverloadNotChange = 2564;
  Error_Equip_OverloadAllLock = 2565;
  Error_Equip_ExpEquipSame = 2566;
  Error_Equip_OverloadAllLockLevel = 2567;
  Error_Inherit_IsMainHero = 2600;
  Error_Inherit_HeroAlreadyIn = 2601;
  Error_Inherit_HeroNotIn = 2602;
  Error_Inherit_GridLock = 2603;
  Error_Inherit_GridInCD = 2604;
  Error_Inherit_GridAlreadyUnlock = 2605;
  Error_Inherit_GridCountMax = 2606;
  Error_Inherit_GridHasHero = 2607;
  Error_Inherit_GridNotCD = 2608;
  Error_Inherit_AlreadyEvolve = 2609;
  Error_Inherit_EvolveLevelLow = 2610;
  Error_Inherit_NotEvolve = 2611;
  Error_Inherit_LevelMax = 2612;
  Error_Attract_LetterQuestCantFight = 2629;
  Error_Attract_TouchLimit = 2630;
  Error_Attract_MaxRank = 2631;
  Error_Attract_HeroNoAttract = 2632;
  Error_Attract_StoryRewardTaken = 2633;
  Error_Attract_StoryLock = 2634;
  Error_Attract_RankNotEnough = 2635;
  Error_Attract_StorySaw = 2636;
  Error_Attract_TouchHeroLimit = 2637;
  Error_Attract_CouncilLimit = 2638;
  Error_Attract_WrongIssue = 2639;
  Error_Attract_CouncilNoHero = 2640;
  Error_Attract_HeroCantCouncil = 2641;
  Error_Attract_PreStoryNotReward = 2642;
  Error_Attract_LetterNotFinish = 2643;
  Error_Attract_LetterNotUnlock = 2644;
  Error_Attract_LetterStepError = 2645;
  Error_Attract_LetterReplyNumError = 2646;
  Error_Attract_LetterReplyIdError = 2647;
  Error_Attract_LetterQuestNotFinish = 2648;
  Error_Attract_NoLetterQuest = 2649;
  Error_Gacha_TimeNotOpen = 2650;
  Error_Gacha_TimeEnd = 2651;
  Error_Gacha_TimesLimit = 2652;
  Error_Gacha_CantUseToken = 2653;
  Error_Gacha_PoolError = 2654;
  Error_Gacha_NotOpen = 2655;
  Error_Gacha_WishListUnlock = 2656;
  Error_Gacha_WishListNum = 2657;
  Error_Gacha_WishListHero = 2658;
  Error_Gacha_DailyTimesLimit = 2659;
  Error_Gacha_DiscountError = 2670;
  Error_Gacha_CheapTimesLimit = 2671;
  Error_Gacha_GuaranteeGroupError = 2672;
  Error_Gacha_FreeTimesLimit = 2673;
  Error_Gacha_StepNotOpen = 2674;
  Error_Gacha_StepSeqTaken = 2675;
  Error_Gacha_StepSeqCantTake = 2676;
  Error_Legacy_NotExist = 2700;
  Error_Legacy_HeroInstalled = 2701;
  Error_Legacy_HeroNotInstalled = 2702;
  Error_Legacy_InstallMax = 2703;
  Error_Legacy_MaxLevel = 2704;
  Error_Legacy_HeroSameLegacy = 2705;
  Error_Dispatch_DoAllLock = 2800;
  Error_Dispatch_TakeAllLock = 2801;
  Error_Dispatch_Taken = 2802;
  Error_Dispatch_LocationError = 2803;
  Error_Dispatch_Started = 2804;
  Error_Dispatch_NeedRefresh = 2805;
  Error_Dispatch_HeroError = 2806;
  Error_Dispatch_HeroOccupy = 2807;
  Error_Dispatch_MaxCount = 2808;
  Error_Dispatch_HeroCamp = 2809;
  Error_Dispatch_HeroQuality = 2810;
  Error_Dispatch_NotStart = 2811;
  Error_Dispatch_Finish = 2812;
  Error_Dispatch_NotFinish = 2813;
  Error_Explore_ClueTaken = 2814;
  Error_Explore_ClueLock = 2815;
  Error_Explore_StoryNotComplete = 2816;
  Error_Explore_StorySaw = 2818;
  Error_Explore_StoryNotSaw = 2819;
  Error_Explore_StoryTaken = 2820;
  Error_Statue_NoLevelReward = 2821;
  Error_StarRoom_ConstellaUnlock = 2822;
  Error_StarRoom_PreConstellaNotFinish = 2823;
  Error_StarRoom_ConstellaLock = 2824;
  Error_StarRoom_StarSaw = 2825;
  Error_StarRoom_PreStarNotSaw = 2826;
  Error_StarRoom_SeeStarHeroNotEnough = 2827;
  Error_CastlePlace_NoNeedUnlock = 2828;
  Error_CastlePlace_KeyPlaceLock = 2829;
  Error_CastlePlace_KeyPlaceUnLock = 2830;
  Error_CastlePlace_StoryNotWait = 2831;
  Error_CastlePlace_PreStoryNotFinish = 2832;
  Error_CastlePlace_MainlevelNotFinish = 2833;
  Error_Explore_ChapterNotComplete = 2834;
  Error_Explore_ChapterRewardTaken = 2835;
  Error_Rogue_PreStageNotFinish = 2941;
  Error_Rogue_TechUnlocked = 2942;
  Error_Rogue_PreTechLock = 2943;
  Error_Rogue_MonsterRecordWrong = 2944;
  Error_Rogue_ItemLock = 2945;
  Error_Rogue_RewardCantTake = 2946;
  Error_Rogue_ScoreVerifyMax = 2947;
  Error_Rogue_MonsterNumVerifyMax = 2948;
  Error_Rogue_HeroQualityCantFight = 2949;
  Error_Rogue_LevelChanged = 2950;
  Error_Activity_NoSuch = 3000;
  Error_Activity_Expire = 3001;
  Error_Activity_Condition = 3002;
  Error_Activity_CantTakeReward = 3003;
  Error_Activity_RewardTaken = 3004;
  Error_Activity_HideOnFinish = 3005;
  Error_Activity_WrongType = 3006;
  Error_Activity_Finished = 3007;
  Error_Activity_NoSuchConfig = 3008;
  Error_Activity_HideBeforeEnd = 3009;
  Error_Activity_ProductHasBuy = 3010;
  Error_Activity_Config = 3011;
  Error_Activity_TimeNotReach = 3012;
  Error_Activity_HasReceiveReward = 3013;
  Error_Activity_Version = 3014;
  Error_Activity_ExchangeLimit = 3015;
  Error_Activity_AlreadyOpen = 3016;
  Error_Activity_AlreadyClaimed = 3017;
  Error_Activity_NotInActTime = 3018;
  Error_Activity_StageNotFinish = 3019;
  Error_Activity_GuideNotFinish = 3020;
  Error_ActConsumeReward_NoReward = 3040;
  Error_Activity_InviteNotifyInCD = 3392;
  Error_Activity_AccountCreateTime = 3393;
  Error_Activity_NeedPassStage = 3394;
  Error_Activity_TimesLimit = 3400;
  Error_Activity_AwardUnlock = 3401;
  Error_Activity_SameSelect = 3402;
  Error_Activity_NotSelect = 3403;
  Error_Activity_ChallengeLimit = 3421;
  Error_Activity_NotFishChallenge = 3422;
  Error_ActSign_SignDayError = 3425;
  Error_ActDailyGift_SelectRefreshed = 3426;
  Error_ActDailyGift_RefreshLimit = 3427;
  Error_ActDailyGift_RefreshOver = 3428;
  Error_ActRecharge_NoFirstCharge = 3429;
  Error_ActRecharge_FirstChargeClaimed = 3430;
  Error_ActRecharge_NotEnoughBreakHeroNum = 3431;
  Error_ActRecharge_SelectItemNum = 3432;
  Error_ActRecharge_NotSelected = 3433;
  Error_ActRechargeRebate_RoleRebated = 3440;
  Error_ActRechargeRebate_WrongApp = 3441;
  Error_ActRechargeRebate_OldRoleRebated = 3442;
  Error_ActRechargeRebate_OldSdkRebated = 3443;
  Error_ActRechargeRebate_SdkRebated = 3444;
  Error_ActRechargeRebate_PlatformRebated = 3445;
  Error_ActRechargeRebate_NoCharge = 3446;
  Error_Achieve_RewardHasTaken = 4000;
  Error_Achieve_NotCurRewardLevel = 4001;
  Error_Friend_NoHeartRecieve = 4400;
  Error_Friend_NotFriend = 4401;
  Error_Friend_HasSendHeart = 4402;
  Error_Friend_NoFriendRequest = 4403;
  Error_Friend_FriendFull = 4404;
  Error_Friend_OtherFriendFull = 4405;
  Error_Friend_IsFriend = 4406;
  Error_Friend_Self = 4407;
  Error_Friend_HeartLimit = 4408;
  Error_Friend_CannotAccept = 4409;
  Error_Friend_HeartDailyLimit = 4410;
  Error_Friend_Role_Null = 4411;
  Error_Rank_NotInRank = 4589;
  Error_Rank_TargetNotReached = 4590;
  Error_Rank_TargetRewardDrawn = 4591;
  Error_IAPRefund_DeviceLimit = 4690;
  Error_IAPRefund_SmallChargeLimit = 4691;
  Error_IAPRefund_IPLimit = 4692;
  Error_Social_CantAddShield = 4750;
  Error_Social_CantDelShield = 4751;
  Error_Social_InShield = 4752;
  Error_Social_OtherInShield = 4753;
  Error_Social_RefuseStranger = 4754;
  Error_PersonalChatWeb_CacheNull = 5642;
  Error_PersonalChatWeb_Close = 5643;
  Error_PersonalChatWeb_TooFast = 5644;
  Error_PersonalChatWeb_Limit = 5645;
  Error_Match_RoleInBattle = 6200;
  Error_Match_RoleInMatch = 6201;
  Error_Match_InvalidType = 6202;
  Error_Match_StillInDriven = 6203;
  Error_Match_TeamNotSupport = 6204;
  Error_Match_StartBattleFail = 6205;
  Error_Match_StateInvalid = 6206;
  Error_Role_OperatorTooFast = 6216;
  Error_Stragegy_Limit = 6230;
  Error_Room_NotOwner = 6251;
  Error_Room_KickSelf = 6252;
  Error_Room_BeInRoom = 6253;
  Error_Room_NotExist = 6254;
  Error_Room_Full = 6255;
  Error_FightReport_Save = 6256;
  Error_Survey_NotExist = 6301;
  Error_Survey_AlreadyAnswer = 6302;
  Error_Survey_SurveyIdNotMatch = 6303;
  Error_Survey_RewardType = 6304;
  Error_Surver_NotAnswer = 6305;
  Error_Surver_AlreadyReward = 6306;
  Error_FightTest_StateInvalid = 6351;
  Error_FightTest_HeroNotEnough = 6352;
  Error_FightTest_InvalidParam = 6353;
  Error_DirtyCheck_GSdkErr = 6401;
  Error_Circulation_LevelFull = 6402;
  Error_Circulation_LevelNotEnough = 6403;
  Error_Lamia_NotExist = 6501;
  Error_Lamia_DataError = 6502;
  Error_Lamia_TableError = 6503;
  Error_Lamia_SignInAwarded = 6504;
  Error_Lamia_QuestCantAward = 6505;
  Error_Lamia_GameAlreadyFinish = 6506;
  Error_Lamia_GameHasNoAward = 6507;
  Error_Lamia_PreStageNotPass = 6508;
  Error_Lamia_StageNoTimes = 6509;
  Error_Lamia_StageNotPass = 6510;
  Error_Lamia_StageAlreadyPass = 6511;
  Error_Lamia_StageNotRepeat = 6512;
  Error_Lamia_StageTimeInvalid = 6513;
  Error_Lamia_NotOpen = 6514;
  Error_Lamia_SubActNotOpen = 6515;
  Error_Lamia_StageNotOpen = 6516;
  Error_Lamia_ExploreDataSizeError = 6517;
  Error_Lamia_CluPreStageNotPass = 6518;
  Error_Lamia_ClueAlreadyGet = 6519;
  Error_Lamia_LegacyStageNotPass = 6520;
  Error_Lamia_SubActAlreadyGet = 6521;
  Error_BalanceFightTest_TeamEmpty = 6551;
  Error_BalanceFightTest_TeamSizeWrong = 6552;
  Error_BalanceFightTest_SeasonFinished = 6553;
  Error_BalanceFightTest_RoundFinished = 6554;
  Error_BalanceFightTest_DataError = 6555;
  Error_BalanceFightTest_TableError = 6556;
  Error_AutoFightTest_TableError = 6560;
  Error_AutoFightTest_DataError = 6561;
  Error_AutoFightTest_StateError = 6562;
  Error_LegacyStage_LevelLocked = 6601;
  Error_LegacyStage_ChapterLocked = 6602;
  Error_LegacyStage_GameStepOver = 6603;
  Error_LegacyStage_GameRoundOver = 6604;
  Error_LegacyStage_GameNotStart = 6605;
  Error_LegacyStage_GameLastMonsterNotPass = 6606;
  Error_LegacyStage_GameStepEmpty = 6607;
  Error_LegacyStage_ChapterNotPass = 6608;
  Error_LegacyStage_ChapterRewardTaken = 6609;
  Error_LegacyStage_MonsterPassed = 6610;
  Error_Activity_GachaJump_OrderAwardRecived = 6621;
  Error_Activity_GachaJump_Config = 6622;
  Error_Activity_GachaJump_OrderTime = 6623;
  Error_Activity_SignInGift_CfgError = 6631;
  Error_Activity_SignInGift_BuyTimesLimit = 6632;
  Error_Activity_SignInGift_AwardEmpty = 6633;
  Error_Activity_SignInGift_BuyTimeLimit = 6634;
  Error_Act_BattlePass_AlreadyBuy = 6641;
  Error_Act_BattlePass_None = 6642;
  Error_Activity_ForbidCustomDesc = 6651;
  Error_Activity_ForbidCustomDescEmergency = 6652;
  Error_Activity_ReturnSign_CfgError = 6661;
  Error_Activity_ReturnSign_NotOpen = 6662;
  Error_Activity_TimelineJump_Error = 6671;
  Error_Activity_TimelineJump_Rewarded = 6672;
}

enum FaceType {
  FaceType_System = 0;
  FaceType_Facebook = 2;
  FaceType_WeChat = 3;
}

enum FashionType {
  FashionType_Origin = 0;
  FashionType_Normal = 1;
}

enum FightAllianceBattleSubType {
  FightAllianceBattleSubType_Battle = 1;
}

enum FightDungeonSubType {
  FightDungeonSubType_Equip = 1;
}

enum FightGoblinSubType {
  FightGoblinSubType_Skill = 1;
}

enum FightMainSubType {
  FightMainSubType_Main = 1;
  FightMainSubType_Ex = 2;
  FightMainSubType_Hard = 3;
  FightMainSubType_Branch = 4;
}

enum FightPvpSubType {
  FightMainSubType_OriginalPvp = 1;
  FightMainSubType_OriginalPvpDef = 2;
}

enum FightResult {
  FightResult_Unkown = 0;
  FightResult_Server = 1;
  FightResult_Client = 2;
  FightResult_ClientError = 3;
}

enum FightSimpleParamType {
  FightSimpleParamType_PvPSeason = 1;
}

enum FightTestStateEnum {
  FightTestResultState_Success = 1;
  FightTestResultState_Timeout = 2;
  FightTestResultState_ClientErr = 3;
}

enum FightTestSubType {
  FightTestSubType_Client = 1;
}

enum FightTestType {
  FightTestType_Nill = 0;
  FightTestType_Pvp = 1;
  FightTestType_Pve = 2;
  FightTestType_Random = 3;
}

enum FightTowerSubType {
  FightTowerSubType_Main = 1;
  FightTowerSubType_Tribe1 = 2;
  FightTowerSubType_Tribe2 = 3;
  FightTowerSubType_Tribe3 = 4;
  FightTowerSubType_Tribe4 = 5;
}

enum FightType {
  FightType_Main = 1;
  FightType_Dungeon = 2;
  FightType_Tower = 3;
  FightType_Goblin = 4;
  FightType_Lamia = 5;
  FightType_LegacyStage = 7;
  FightType_SoloRaid = 8;
  FightType_AllianceBattle = 9;
  FightType_Arena = 10;
  FightType_Rogue = 11;
  FightType_ReplaceArena = 12;
  FightType_Hunting = 13;
  FightType_Letter = 14;
  FightType_Friend = 33;
  FightType_Test = 99;
}

enum FightVerifyCheatType {
  FightVerifyCheatType_None = 0;
  FightVerifyCheatType_InRange = 1;
  FightVerifyCheatType_OutRange = 2;
  FightVerifyCheatType_FrameDiff = 3;
  FightVerifyCheatType_AllowInRange = 4;
  FightVerifyCheatType_AllowOutRange = 5;
  FightVerifyCheatType_AllowFrameDiff = 6;
}

enum FormHeroType {
  FormHeroType_Normal = 1;
  FormHeroType_Necessary = 2;
  FormHeroType_Custom = 3;
  FormHeroType_Trial = 4;
  FormHeroType_Design = 5;
}

enum FormPresetId {
  FormPresetId_Normal_Begin = 1;
  FormPresetId_Normal_End = 10;
  FormPresetId_SoloRaid_Begin = 11;
  FormPresetId_SoloRaid_End = 20;
  FormPresetId_Max = 21;
}

enum GachaDiscountType {
  GachaDiscountType_None = 0;
  GachaDiscountType_Cheap = 1;
  GachaDiscountType_Free = 2;
  GachaDiscountType_SpecialTen = 3;
}

enum GachaGuaranteeType {
  GachaGuaranteeType_Guarantee = 1;
  GachaGuaranteeType_MustGain = 2;
  GachaGuaranteeType_UpProtect = 3;
  GachaGuaranteeType_ExtraGuarantee = 4;
}

enum GachaTimesType {
  GachaTimesType_One = 1;
  GachaTimesType_Ten = 10;
}

enum GachaType {
  GachaType_Hero = 1;
}

enum GachaUnlockType {
  GachaUnlockType_StageMain = 1;
  GachaUnlockType_RoleLevel = 2;
  GachaUnlockType_Guide = 3;
}

enum GenderType {
  GenderType_NoSet = 0;
  GenderType_Male = 1;
  GenderType_Female = 2;
  GenderType_Other = 3;
}

enum GetProfileType {
  GetProfileType_Init = 1;
  GetProfileType_RefreshEnemy = 2;
}

enum GroupOperationType {
  GroupOPType_MIN = 0;
  GroupOPType_create = 1;
  GroupOPType_join = 2;
  GroupOPType_leave = 3;
  GroupOPType_setName = 4;
  GroupOPType_disband = 5;
  GroupOPType_kick = 6;
  GroupOPType_MAX = 7;
}

enum HeroRecommendDataType {
  HeroRecommendDataType_Hero = 1;
  HeroRecommendDataType_Form = 2;
}

enum HuntingBossAchieveType {
  HuntingBossAchieveType_Bigger = 1;
  HuntingBossAchieveType_Smaller = 2;
}

enum IAPDmmReceiptStatus {
  IAPDmmReceiptStatus_Unknown = 0;
  IAPDmmReceiptStatus_New = 1;
  IAPDmmReceiptStatus_Delivered = 2;
  IAPDmmReceiptStatus_Processing = 3;
  IAPDmmReceiptStatus_Failed = 4;
}

enum IAPReceiptType {
  IAPReceiptType_Apple = 1;
  IAPReceiptType_Google = 2;
  IAPReceiptType_MSDK = 3;
  IAPReceiptType_QuickSDK = 4;
  IAPReceiptType_QuickGame = 5;
  IAPReceiptType_Welfare = 6;
  IAPReceiptType_Mobapay = 7;
  IAPReceiptType_DMM = 8;
  IAPReceiptType_WeGame = 9;
  IAPReceiptType_Max = 10;
}

enum IAPStoreType {
  IAPStoreType_BaseStore = 1;
  IAPStoreType_ActPayStore = 2;
  IAPStoreType_ActBattlePass = 3;
  IAPStoreType_ActPickupGift = 4;
  IAPStoreType_ActPushGift = 5;
  IAPStoreType_ActEmergencyGift = 6;
  IAPStoreType_ActSignGift = 7;
  IAPStoreType_Max = 8;
}

enum iFightDebugType {
  FightDebugType_None = 0;
  FightDebugType_CheatUploadReport = 1;
  FightDebugType_AllUploadReport = 2;
}

enum ItemIdSegment {
  ItemIdSeg_SpecialItem_Min = 1;
  ItemIdSeg_SpecialItem_Max = 999;
  ItemIdSeg_Resource_Min = 1001;
  ItemIdSeg_Resource_Max = 9999;
  ItemIdSeg_HeroCard_Min = 20001;
  ItemIdSeg_HeroCard_Max = 29999;
  ItemIdSeg_Treasure_Min = 30001;
  ItemIdSeg_Treasure_Max = 39999;
  ItemIdSeg_Afk_Min = 40001;
  ItemIdSeg_Afk_Max = 49999;
  ItemIdSeg_Fragment_Min = 50001;
  ItemIdSeg_Fragment_Max = 59999;
  ItemIdSeg_Legacy_Min = 90001;
  ItemIdSeg_Legacy_Max = 99999;
  ItemIdSeg_StoreExchange_Min = 110001;
  ItemIdSeg_StoreExchange_Max = 110999;
  ItemIdSeg_Equip_Min = 600001;
  ItemIdSeg_Equip_Max = 699999;
  ItemIdSeg_Break_Min = 700001;
  ItemIdSeg_Break_Max = 799999;
  ItemIdSeg_Attract_Min = 800001;
  ItemIdSeg_Attract_Max = 899999;
  ItemIdSeg_LegacyItem_Min = 900001;
  ItemIdSeg_LegacyItem_Max = 900999;
  ItemIdSeg_Circulation_Min = 901001;
  ItemIdSeg_Circulation_Max = 901999;
  ItemIdSeg_Head_Min = 1300001;
  ItemIdSeg_Head_Max = 1399999;
  ItemIdSeg_HeadFrame_Min = 1400001;
  ItemIdSeg_HeadFrame_Max = 1499999;
  ItemIdSeg_ShowBackground_Min = 1500001;
  ItemIdSeg_ShowBackground_Max = 1599999;
  ItemIdSeg_MainBackground_Min = 1600001;
  ItemIdSeg_MainBackground_Max = 1699999;
  ItemIdSeg_Fashion_Min = 6000001;
  ItemIdSeg_Fashion_Max = 6999999;
}

enum ItemQuality {
  ItemQuality_N = 1;
  ItemQuality_R = 2;
  ItemQuality_SR = 3;
  ItemQuality_SSR = 4;
  ItemQuality_UR = 5;
}

enum ItemSubType {
  ItemSubType_SmallMonthCard = 1;
  ItemSubType_BigMonthCard = 2;
  ItemSubType_BattlePass = 3;
  ItemSubType_Default = 10;
  ItemSubType_EquipExp = 11;
  ItemSubType_Treasure = 30;
  ItemSubType_Selected = 31;
  ItemSubType_Random = 32;
  ItemSubType_Afk = 40;
  ItemSubType_Frag = 50;
  ItemSubType_FragRandom = 51;
  ItemSubType_HeroBreak = 70;
  ItemSubType_Legacy = 90;
  ItemSubType_Fashion = 100;
  ItemSubType_VirtualItemResource = 9901;
  ItemSubType_VirtualItemEquip = 9902;
}

enum ItemType {
  ItemType_SpecialItem = 1;
  ItemType_Resource = 10;
  ItemType_HeroCard = 20;
  ItemType_Treasure = 30;
  ItemType_Afk = 40;
  ItemType_Fragment = 50;
  ItemType_Equip = 60;
  ItemType_HeroBreak = 70;
  ItemType_Attract = 80;
  ItemType_Legacy = 90;
  ItemType_Fashion = 100;
  ItemType_StoreExchange = 110;
  ItemType_Head = 130;
  ItemType_HeadFrame = 140;
  ItemType_ShowBackground = 150;
  ItemType_MainBackground = 160;
  ItemType_ActVirtualItem = 200;
}

enum KickReasonType {
  KickReason_RepeatedLogin = 0;
  KickReason_ClientNewVersion = 1;
  KickReason_BanLogin = 2;
  KickReason_OnlyRecharge = 3;
  KickReason_Maintain = 4;
  KickReason_Addict = 5;
}

enum LamiaGameStat {
  LamiaGameStat_Doing = 0;
  LamiaGameStat_Finish = 1;
}

enum LamiaMiniGameMode {
  LamiaMiniGameMode_Normal = 1;
  LamiaMiniGameMode_Boss = 2;
  LamiaMiniGameMode_Infinite = 3;
}

enum LamiaMiniGameType {
  LamiaMiniGameType_Memory = 1;
  LamiaMiniGameType_Whacka = 2;
  LamiaMiniGameType_LegacyStage = 3;
  LamiaMiniGameType_Explore = 1001;
}

enum LamiaQuetType {
  LamiaQuestType_Invalid = 0;
  LamiaQuestType_Daily = 1;
  LamiaQuestType_Total = 2;
}

enum LamiaSubActType {
  LamiaSubActType_Normal = 11;
  LamiaSubActType_Hard = 12;
  LamiaSubActType_Challenge = 13;
  LamiaSubActType_SignIn = 14;
  LamiaSubActType_Quest = 15;
  LamiaSubActType_MiniGame = 16;
  LamiaSubActType_DailyQuest = 18;
  LamiaSubActType_GameQuest = 19;
}

enum LetterDialogueType {
  LetterDialogueType_Reply = 2;
}

enum LetterSubType {
  LetterSubType_Fight = 1;
}

enum LoginType {
  LoginType_Login = 0;
  LoginType_Reconnect = 1;
  LoginType_Zero = 2;
}

enum MailType {
  MailType_System = 0;
}

enum MainBackgroundType {
  MainBackgroundType_Empty = 0;
  MainBackgroundType_Hero = 1;
  MainBackgroundType_Item = 2;
  MainBackgroundType_Fashion = 3;
}

enum MatchInfoReason {
  EMIR_PlayerEnter = 1;
  EMIR_GetInfo = 2;
  EMIR_PlayerLeave = 3;
  EMIR_NotReady = 4;
  EMIR_LeaveRoom = 5;
  EMIR_MatchSuccess = 6;
}

enum MatchMode {
  MatchMode_PVP = 1;
  MatchMode_AI = 2;
  MatchMode_PVE = 3;
  MatchMode_Ladder = 4;
}

enum MatchState {
  MatchState_None = 0;
  MatchState_Matching = 1;
  MatchState_MatchSuccess = 2;
}

enum NoticeType {
  NoticeType_AllDialog = 1;
  NoticeType_MainDialog = 2;
}

enum OperTypeId_Battle {
  OperTypeId_Battle_Move = 1;
  OperTypeId_Battle_CastSkill = 2;
  OperTypeId_Battle_SkillUp = 4;
  OperTypeId_Battle_Sign = 5;
  OperTypeId_Battle_Quit = 7;
  OperTypeId_Battle_LevelUp = 12;
  OperTypeId_Battle_Move_Opt = 13;
  OperTypeId_Battle_OpenMatchOkUI = 50;
  OperTypeId_Battle_SelectHero = 51;
  OperTypeId_Battle_ConfirmHero = 52;
  OperTypeId_Battle_LoadingPer = 53;
  OperTypeId_Battle_ReadySelect = 54;
  OperTypeId_Battle_CancleConfirm = 59;
  OperTypeId_Battle_ConnStateChange = 62;
  OperTypeId_Battle_SelectHero_PlayPhase = 75;
  OperTypeId_Battle_ClientInfo = 80;
  OperTypeId_Battle_CommonOper = 112;
}

enum OriginalArenaRewardType {
  OriginalArenaRewardType_Daily = 1;
  OriginalArenaRewardType_Season = 2;
}

enum OSType {
  OSType_IOS = 1;
  OSType_Android = 2;
  OSType_Win = 3;
}

enum PassStageArrangeType {
  PassStageArrangeType_Invalid = 0;
  PassStageArrangeType_Recommend = 1;
  PassStageArrangeType_Friend = 2;
  PassStageArrangeType_Alliance = 3;
}

enum PassStageTimeType {
  PassStageTimeType_Invalid = 0;
  PassStageTimeType_Day = 1;
  PassStageTimeType_Week = 2;
  PassStageTimeType_Month = 3;
  PassStageTimeType_All = 4;
}

enum PingDataType {
  PingDataType_None = 0;
  PingDataType_Udp = 1;
  PingDataType_Icmp = 2;
}

enum QuestCond {
  QuestCond_LoginGameDay = 1;
  QuestCond_Login = 2;
  QuestCond_RoleLevel = 3;
  QuestCond_LoginGameDayOne = 4;
  QuestCond_JoinAlliance = 5;
  QuestCond_HeroAddBreak = 101;
  QuestCond_HeroBreakNum = 102;
  QuestCond_HeroBreakTo = 103;
  QuestCond_HeroSkillLevelUp = 104;
  QuestCond_HeroSkillLevelTo = 105;
  QuestCond_HeroLevelUp = 106;
  QuestCond_HeroLevelTo = 107;
  QuestCond_ResetHeroLevel = 108;
  QuestCond_InstallEquipCount = 121;
  QuestCond_EquipLevelUp = 122;
  QuestCond_EquipLevelTo = 123;
  QuestCond_InstallEquip = 124;
  QuestCond_EquipOverload = 125;
  QuestCond_EquipReOverload = 126;
  QuestCond_EquipReOverloadLevel = 127;
  QuestCond_HeroAttractRankNum = 131;
  QuestCond_HeroAttractTouch = 132;
  QuestCond_HeroAttractSendGift = 133;
  QuestCond_HeroAttractRankUp = 134;
  QuestCond_LegacyLevel = 150;
  QuestCond_LegacyUpgrade = 151;
  QuestCond_LegacyInstalledNum = 152;
  QuestCond_StartLegacyStage = 153;
  QuestCond_Dispatch = 160;
  QuestCond_Council = 161;
  QuestCond_DispatchTotal = 162;
  QuestCond_CouncilTotal = 163;
  QuestCond_PassRogue = 171;
  QuestCond_StartRogue = 172;
  QuestCond_RogueGetItem = 173;
  QuestCond_RogueKillMonster = 174;
  QuestCond_RogueUnlockHandbook = 175;
  QuestCond_RogueUnlockTech = 176;
  QuestCond_RoguePassTimes = 177;
  QuestCond_LetterFight = 181;
  QuestCond_LetterSubmitItem = 182;
  QuestCond_MainChapterProgress = 200;
  QuestCond_EnterArena = 201;
  QuestCond_WinArena = 202;
  QuestCond_EnterStage = 203;
  QuestCond_PassStage = 204;
  QuestCond_StagePassed = 205;
  QuestCond_GoblinMaxScore = 211;
  QuestCond_GoblinScore = 212;
  QuestCond_PassHeroCamp = 221;
  QuestCond_PassHeroStar = 222;
  QuestCond_ReplaceArena = 231;
  QuestCond_ReplaceArenaWin = 232;
  QuestCond_OriginalArenaPlayTimesDay = 240;
  QuestCond_OriginalArenaPlayTimes = 241;
  QuestCond_ReplaceArenaPlayTimesDay = 242;
  QuestCond_ReplaceArenaPlayTimes = 243;
  QuestCond_Gacha = 301;
  QuestCond_GachaHeroQuality = 302;
  QuestCond_AddHeroQuality = 303;
  QuestCond_AddHero = 304;
  QuestCond_GachaTimes = 305;
  QuestCond_InheritLevel = 401;
  QuestCond_InheritHeroNum = 402;
  QuestCond_ShopBuy = 403;
  QuestCond_SetName = 404;
  QuestCond_SubItem = 405;
  QuestCond_TakeAfkReward = 406;
  QuestCond_TakeAfkInstant = 407;
  QuestCond_FriendPoint = 408;
  QuestCond_TaskGetScore = 409;
  QuestCond_LamiaFinishQuest = 501;
  QuestCond_LamiaMiniGame = 502;
  QuestCond_LamiaMiniGameScore = 503;
  QuestCond_PassGuide = 601;
  QuestCond_Recharge = 900;
  QuestCond_RechargePrice = 901;
  QuestCond_RookieOnlineTime = 902;
  QuestCond_RookieDefeatTime = 903;
  QuestCond_VipLevel = 904;
  QuestCond_BindAccount = 905;
}

enum QuestState {
  QuestState_Doing = 1;
  QuestState_Finish = 2;
  QuestState_Over = 3;
}

enum QuestType {
  QuestType_Daily = 1;
  QuestType_Weekly = 2;
  QuestType_Main = 3;
  QuestType_Achievement = 4;
  QuestType_ChapterProgress = 5;
  QuestType_RogueAchieve = 6;
  QuestType_Resource = 99;
  QuestType_ActivityBegin = 10000;
}

enum QuestUnlockCond {
  QuestUnlockCond_RoleLevel = 1;
  QuestUnlockCond_PassStage = 2;
  QuestUnlockCond_FinishQuest = 3;
}

enum RepairStrType {
  RepairStrType_Language = 1;
  RepairStrType_Template = 2;
}

enum ReplaceArenaRankType {
  ReplaceArenaRankType_GradeRank = 1;
  ReplaceArenaRankType_ScoreRank = 2;
}

enum ReplaceArenaSubType {
  ReplaceArenaSubType_Attack_1 = 1;
  ReplaceArenaSubType_Attack_2 = 2;
  ReplaceArenaSubType_Attack_3 = 3;
  ReplaceArenaSubType_Defence_1 = 4;
  ReplaceArenaSubType_Defence_2 = 5;
  ReplaceArenaSubType_Defence_3 = 6;
}

enum ReportMessageType {
  ReportMessageType_RoleName = 6;
  ReportMessageType_AllianceName = 7;
  ReportMessageType_Profile = 10;
  ReportMessageType_Unknow = 11;
}

enum ReportReasonType {
  ReportReasonType_RoleNameIllegal = 1;
  ReportReasonType_DataAbnormal = 2;
  ReportReasonType_RoleSignatureIllegal = 3;
  ReportReasonType_Other = 4;
}

enum RogueSubFightType {
  RogueSubFightType_Fight = 1;
}

enum RogueTechEffect {
  RogueTechEffect_HeroModify = 1;
  RogueTechEffect_InitGrid = 2;
  RogueTechEffect_FightHeroNum = 3;
  RogueTechEffect_UnlockItem = 4;
  RogueTechEffect_AddProperty = 5;
  RogueTechEffect_TempBag = 6;
}

enum RolePushNoticeType {
  RolePushNoticeType_Level = 0;
  RolePushNoticeType_Mail_BeAttack = 1;
  RolePushNoticeType_Mail_Arena = 2;
  RolePushNoticeType_PushSet = 3;
}

enum RoleStatus {
  RoleStatus_Offline = 0;
  RoleStatus_Online = 1;
  RoleStatus_InMatch = 2;
  RoleStatus_InBattle = 3;
  RoleStatus_Max = 4;
}

enum RoomState {
  RoomState_Idle = 0;
  RoomState_Match = 1;
  RoomState_Battle = 2;
}

enum SdpPackDataType {
  Positive = 0;
  Negative = 1;
  Float = 2;
  Double = 3;
  String = 4;
  Vector = 5;
  Map = 6;
  StructBegin = 7;
  StructEnd = 8;
}

enum SettingPushId {
  SettingPushId_Afk = 1;
  SettingPushId_Mail = 2;
  SettingPushId_Elva = 3;
  SettingPushId_Normal = 4;
}

enum ShopGoodsConditionType {
  ShopGoodsConditionType_RoleLevel = 1;
  ShopGoodsConditionType_StageMain = 2;
  ShopGoodsConditionType_Time = 3;
  ShopGoodsConditionType_PreTime = 4;
}

enum ShopGoodsLimitType {
  ShopGoodsLimitType_None = 0;
  ShopGoodsLimitType_Daily = 1;
  ShopGoodsLimitType_Weekly = 2;
  ShopGoodsLimitType_Monthly = 3;
  ShopGoodsLimitType_Forever = 4;
}

enum ShopRefreshType {
  ShopRefreshType_None = 0;
  ShopRefreshType_Daily = 1;
  ShopRefreshType_Time = 2;
  ShopRefreshType_Weekly = 3;
  ShopRefreshType_Monthly = 4;
}

enum ShopSpecialID {
  ShopSpecialID_Base = 101;
}

enum ShopType {
  ShopType_Normal = 1;
  ShopType_Activity = 2;
}

enum SimRoomBuffRangeType {
  SimRoomBuffRangeType_All = 0;
  SimRoomBuffRangeType_Camp = 1;
  SimRoomBuffRangeType_EquipType = 2;
  SimRoomBuffRangeType_Career = 3;
}

enum SimRoomEventType {
  SimRoomEventType_Battle = 1;
  SimRoomEventType_Random = 2;
}

enum SimRoomOptionResult {
  SimRoomOptionResult_ChooseBuff = 1;
  SimRoomOptionResult_AddRandomBuff = 2;
  SimRoomOptionResult_ReplaceBuffRandom = 3;
  SimRoomOptionResult_ChangeBuffShape = 4;
  SimRoomOptionResult_ChangeBuffQuality = 5;
  SimRoomOptionResult_ChangeAllBuffShape = 6;
  SimRoomOptionResult_ChangeAllBuffQuality = 7;
  SimRoomOptionResult_RandomDeleteBuff = 8;
  SimRoomOptionResult_AddHeroHp = 9;
  SimRoomOptionResult_SubHeroHp = 10;
  SimRoomOptionResult_ReviveHero = 11;
  SimRoomOptionResult_KillHero = 12;
  SimRoomOptionResult_AddAllHeroHp = 13;
  SimRoomOptionResult_SubAllHeroHp = 14;
  SimRoomOptionResult_ReviveAllHero = 15;
}

enum SimRoomRegionType {
  SimRoomRegionType_Normal = 0;
  SimRoomRegionType_Guide = 1;
}

enum SimRoomStatus {
  SimRoomStatus_None = 0;
  SimRoomStatus_BattleEnd = 1;
  SimRoomStatus_FlowEnd = 2;
  SimRoomStatus_MopEnd = 3;
}

enum SnsShareFunc {
  SnsShareFunc_Unknown = 0;
  SnsShareFunc_GetHero = 1;
  SnsShareFunc_HeroPanel = 2;
}

enum SnsShareType {
  SnsShareType_Facebook = 1;
  SnsShareType_Twitter = 2;
  SnsShareType_Line = 3;
  SnsShareType_Naver = 4;
  SnsShareType_Any = 10;
}

enum SoloRaidMode {
  SoloRaidMode_Normal = 1;
  SoloRaidMode_Hard = 2;
}

enum SoloRaidSubType {
  SoloRaidSubType_Fight = 1;
}

enum SpecialItemId {
  SpecialItem_Exp = 1;
  SpecialItem_Welfare = 2;
  SpecialItem_Energy = 4;
  SpecialItem_VipExp = 6;
  SpecialItem_FreeVipExp = 10;
  SpecialItem_ShowDiamond = 99;
  SpecialItem_Diamond = 100;
  SpecialItem_FreeDiamond = 101;
  SpecialItem_NegDiamond = 102;
  SpecialItem_StatueExp = 998;
  SpecialItem_Coin = 999;
  SpecialItem_EquipExp_R = 1101;
  SpecialItem_EquipExp_SR = 1102;
}

enum StageChapterUnlockCondition {
  StageChapterUnlock_MainStage = 1;
  StageChapterUnlock_RoleLevel = 2;
  StageChapterUnlock_GuideStep = 3;
  StageChapterUnlock_TowerFinish = 4;
  StageChapterUnlock_MainChapter = 5;
}

enum StarEffect {
  StarEffect_AfkReward = 1;
  StarEffect_DispatchLevel = 2;
  StarEffect_DungeonExtraReward = 3;
  StarEffect_InheritUnlockGrid = 4;
}

enum StatueEffect {
  StatueEffect_UnlockAllReceive = 1;
  StatueEffect_UnlockAutoDispatch = 2;
  StatueEffect_UnlockFastDispatch = 3;
  StatueEffect_DispatchLocation = 4;
  StatueEffect_TodayAttractMaxTouch = 5;
  StatueEffect_StaminaMaxCount = 6;
  StatueEffect_ShopNormalFreeResetMaxCount = 7;
  StatueEffect_PVPFreeCount = 8;
  StatueEffect_TodayCouncilHallAttractNum = 9;
}

enum SurveyRewardStatus {
  SurveyRewardStatus_None = 0;
  SurveyRewardStatus_Answer = 1;
  SurveyRewardStatus_Reward = 2;
}

enum SurveyRewardType {
  SurveyRewardType_None = 0;
  SurveyRewardType_Mail = 1;
  SurveyRewardType_Reward = 2;
}

enum SystemType {
  SystemType_DailyTask = 1;
  SystemType_MainLevel = 2;
  SystemType_Team = 3;
  SystemType_Afk = 4;
  SystemType_Tower = 5;
  SystemType_Equip = 6;
  SystemType_Mail = 8;
  SystemType_RoleName = 9;
  SystemType_Sign = 10;
  SystemType_AutoBattle = 11;
  SystemType_DoubleSpeedBattle = 12;
  SystemType_Dungeon = 13;
  SystemType_AutoForm = 15;
  SystemType_QuitBattle = 16;
  SystemType_MainTask = 17;
  SystemType_Bag = 18;
  SystemType_HeroReset = 19;
  SystemType_Activity = 20;
  SystemType_Test = 21;
  SystemType_HeroBreak = 22;
  SystemType_HeroSkillLevelUp = 23;
  SystemType_Inherit = 24;
  SystemType_Gacha = 25;
  SystemType_Shop = 26;
  SystemType_Alliance = 27;
  SystemType_OriginalArena = 28;
  SystemType_Circulation = 30;
  SystemType_AllianceSign = 31;
  SystemType_AllianceBattle = 32;
  SystemType_Legacy = 33;
  SystemType_BloodMoon = 36;
  SystemType_Attract = 37;
  SystemType_MainExplore = 38;
  SystemType_Castle = 39;
  SystemType_CastleStar = 40;
  SystemType_CastleStatue = 41;
  SystemType_CastleLab = 42;
  SystemType_CastleCollect = 43;
  SystemType_Settings = 44;
  SystemType_Notice = 45;
  SystemType_ReplaceArena = 46;
  SystemType_LegacyRaid = 47;
  SystemType_SoloRaid = 48;
  SystemType_GachaWish = 50;
  SystemType_CastleDispatch = 51;
  SystemType_Rogue = 58;
  SystemType_CDKey = 59;
  SystemType_Hunting = 60;
  SystemType_AttractLetter = 61;
  SystemType_Ancient = 62;
  SystemType_Hero = 101;
  SystemType_HeroLevel = 102;
  SystemType_Goblin = 200;
  SystemType_Goblin1 = 201;
  SystemType_Goblin2 = 202;
  SystemType_Goblin3 = 203;
  SystemType_Goblin4 = 204;
  SystemType_Goblin5 = 205;
  SystemType_FirstChapterUI1 = 901;
  SystemType_FirstChapterUI2 = 902;
  SystemType_AutoStar = 903;
}

enum SystemUnlockCondition {
  SystemUnlockCondition_Never = 0;
  SystemUnlockCondition_Open = 1;
  SystemUnlockCondition_RoleLevel = 2;
  SystemUnlockCondition_StageMain = 3;
  SystemUnlockCondition_Guide = 4;
  SystemUnlockCondition_Task = 5;
  SystemUnlockCondition_AllianceLevel = 6;
  SystemUnlockCondition_MainChapter = 7;
  SystemUnlockCondition_Attract = 20;
  SystemUnlockCondition_HasItemNum = 21;
}

enum TemplateMailType {
  TemplateMailType_Normal = 0;
  TemplateMailType_Collect = 1;
}

enum UserTokenType {
  UserTokenType_Web = 1;
}

enum ZoneFlag {
  EM_ZoneFlag_Normal = 1;
  EM_ZoneFlag_New = 2;
  EM_ZoneFlag_Close = 3;
  EM_ZoneFlag_Audit = 4;
}

enum ZoneStatus {
  EM_ZoneStatus_Smooth = 1;
  EM_ZoneStatus_Crowd = 2;
  EM_ZoneStatus_Busy = 3;
  EM_ZoneStatus_Maintain = 4;
}

message AllianceChatInfo {
  PlayerBaseInfo stRoleBase = 1;
  SdpString sMessage = 2;
  uint32 iChatUid = 3;
  uint32 iTime = 4;
  uint32 iTemplateId = 5;
  map<SdpString, SdpString> mParam = 6;
  uint64 iFightReportId = 7;
  uint32 iFightType = 8;
  SdpString sZoneName = 9;
  SdpString sShareHero = 10;
  uint32 iFightReportZoneId = 11;
  SdpString sChatSpecificData = 12;
}

message AllianceChatSpecificData {
  PlayerBaseInfo stRoleBase = 1;
  SdpString sMessage = 2;
  uint32 iTemplateId = 3;
  map<SdpString, SdpString> mParam = 4;
  uint64 iFightReportId = 5;
  uint32 iFightType = 6;
  SdpString sZoneName = 7;
  SdpString sShareHero = 8;
  uint32 iFightReportZoneId = 9;
  SdpString sShareRoleSimpleInfo = 10;
  repeated SdpULong vArenaBattleFightReportId = 11;
  bool bSysMessage = 12;
  uint32 iMaxPassStageId = 13;
}

message AutoTestArangeResult {
  uint32 iArrangeID = 1;
  uint32 iChallengeTimes = 2;
  int64 iAttakerPower = 3;
  int64 iDefenderPower = 4;
  uint32 iWinTimes = 5;
  repeated SdpUInt vHeroID = 6;
  repeated SdpUInt vHeroPos = 7;
  repeated FightTestOneResult vResult = 8;
}

message AutoTestData {
  uint32 iStartTime = 1;
  uint32 iEndTime = 2;
  uint32 iState = 3;
  map<SdpUInt, AutoTestStageResult> mStageData = 4;
}

message AutoTestStageResult {
  uint32 iStageID = 1;
  map<SdpUInt, AutoTestArangeResult> mResult = 2;
}

message BalanceFightFinalHeroData {
  repeated SdpUInt vHeroList = 1;
  repeated BalanceFightFinalHeroSeasonTimes vHeroSeasonTimes = 2;
}

message BalanceFightFinalHeroSeasonTimes {
  uint32 iSeasonID = 1;
  map<SdpUInt, SdpUInt> mHeroTimes = 2;
}

message BalanceFightTestRound {
  uint32 iRoundID = 1;
  repeated SdpUInt vInitTeamID = 2;
  map<SdpUInt, SdpUInt> mTeamScore = 3;
  repeated FightTestOneResult vResult = 4;
}

message BalanceFightTestSeason {
  uint32 iSeasonID = 1;
  repeated BalanceFightTestRound vRounds = 2;
  map<SdpUInt, BalanceFightTestTeam> mTeams = 3;
  repeated SdpUInt vWinTeams = 4;
}

message BalanceFightTestSeasonInfo {
  uint32 iSeasonID = 1;
  repeated BalanceFightTestTeam vWinTeams = 2;
  map<SdpUInt, SdpUInt> mHeroRate = 3;
}

message BalanceFightTestSeasonReport {
  BalanceFightTestTeam stAttacker = 1;
  BalanceFightTestTeam stDefender = 2;
  uint64 iFightReportID = 3;
  bool bWin = 4;
  uint32 iState = 5;
}

message BalanceFightTestState {
  uint64 iStartTime = 1;
  uint64 iEndTime = 2;
  uint64 iFinishedTimes = 3;
  uint32 iScriptID = 4;
  uint32 iCurSeason = 5;
  uint32 iTotalSeason = 6;
  uint32 iCurRound = 7;
  uint32 iTotalRound = 8;
  uint32 eState = 9;
  uint32 iSuccessTimes = 10;
  uint32 iTimeoutTimes = 11;
  uint32 iErrorTimes = 12;
  repeated BalanceFightTestTeam vTeams = 13;
  repeated FightTestOneResult vResult = 14;
  BalanceFightFinalHeroData stFinalHeroData = 15;
}

message BalanceFightTestTeam {
  uint32 iTeamID = 1;
  uint32 iSeasonID = 2;
  repeated SdpUInt vHero = 3;
  repeated SdpUInt vPos = 4;
}

message BattleGroupInfo {
  uint32 iGroupId = 1;
  uint32 iPing = 2;
}

message BattleOperData {
  uint64 iUid = 1;
  uint32 iOperTypeId = 2;
  SdpString sOperData = 3;
  uint32 iTime = 4;
}

message BattleOperFramePack {
  repeated SdpString strOperFrames = 1;
}

message BattleOperFramePackInSelectHeroPeriod {
  repeated SdpString strOperFrames = 1;
}

message BattleOperFrames {
  uint32 iStartFrame = 1;
  SdpString strOperFrames = 2;
  uint32 iPackTime = 3;
}

message BattleOperFramesInSelectHeroPeriod {
  uint32 iStartFrame = 1;
  SdpString strOperFrames = 2;
}

message BattleOperMD5 {
  uint32 uiData = 1;
  uint32 uiMD5Hash = 2;
}

message BattleOperOneFrame {
  repeated BattleOperData vOperData = 1;
}

message BattleOperOneFrameInSelectHeroPeriod {
  repeated SdpString vOperData = 1;
}

message BattlePlayerInfo {
  uint64 iUid = 1;
  uint32 iCamp = 2;
  uint32 iPos = 3;
  SdpString sName = 4;
  bool bRobot = 5;
  uint32 iSelectHero = 6;
  uint32 iZoneId = 7;
  repeated SdpUInt vCanSelectHero = 8;
  SdpString sClientVersion = 9;
}

message BattleReportFightInfo {
  map<SdpUInt, SdpUInt> mFightValueInt = 1;
  map<SdpUInt, BattleReportFightValueVec> mFightValueVec = 2;
  map<SdpUInt, BattleReportFightValueMap> mFightValueMap = 3;
}

message BattleReportFightValueMap {
  map<SdpUInt, SdpUInt> mUInt = 1;
  map<SdpUInt, SdpString> mStr = 2;
}

message BattleReportFightValueVec {
  repeated SdpInt vInt = 1;
}

message ChatGroupInfo {
  uint64 iGroupId = 1;
  SdpString sName = 2;
  PlayerIDType stHost = 3;
  repeated PlayerIDType vMembers = 4;
  bool bIsSticky = 5;
  uint64 iMsgSeq = 6;
  uint64 iEventSeq = 7;
}

message Cmd_Act_BattlePass_BuyExp_CS {
  uint32 iActivityId = 1;
  uint32 iBuyExp = 2;
}

message Cmd_Act_BattlePass_GetLevelReward_CS {
  uint32 iActivityId = 1;
  uint32 iLevel = 2;
}

message Cmd_Act_BattlePass_GetLevelReward_SC {
  repeated CmdIDNum vReward = 1;
  map<SdpUInt, repeated CmdIDNum> mChangeReward = 2;
}

message Cmd_Act_CommonQuest_TakeDailyReward_CS {
  uint32 iActivityId = 1;
  uint32 iDay = 2;
}

message Cmd_Act_CommonQuest_TakeDailyReward_SC {
  uint32 iActivityId = 1;
  uint32 iDay = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_CommonQuest_TakeFinalReward_CS {
  uint32 iActivityId = 1;
  uint32 iScore = 2;
}

message Cmd_Act_CommonQuest_TakeFinalReward_SC {
  uint32 iActivityId = 1;
  uint32 iScore = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_ConsumeReward_TakeReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_ConsumeReward_TakeReward_SC {
  uint32 iActivityId = 1;
  repeated SdpUInt vTakenReward = 2;
  repeated CmdIDNum vShowReward = 3;
}

message Cmd_Act_DailyGiftNew_BuyFreeGift_CS {
  uint32 iActivityId = 1;
  uint32 iIndex = 2;
}

message Cmd_Act_DailyGiftNew_BuyFreeGift_SC {
  repeated CmdIDNum vItem = 1;
}

message Cmd_Act_DailyGiftNew_RefreshSelect_CS {
  uint32 iActivityId = 1;
  uint32 iIndex = 2;
}

message Cmd_Act_DayChangeZero_SC {
  repeated CmdActivityStatus vStatus = 1;
}

message Cmd_Act_EmergencyGift_Trigger_CS {
  uint32 iActivityId = 1;
  repeated SdpUInt vGiftId = 2;
}

message Cmd_Act_EmergencyGift_Trigger_SC {
  uint32 iActivityId = 1;
  repeated SdpUInt vNeedRandGiftId = 2;
  repeated CmdActEmergencyGiftProduct vNewProduct = 3;
}

message Cmd_Act_GachaJump_Order_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_GachaJump_Order_SC {
  repeated CmdIDNum sOrderReward = 1;
  bool bRecivedOrderAward = 2;
}

message Cmd_Act_GetList_CS {
  SdpString sLanguage = 1;
  SdpString sChecksum = 2;
}

message Cmd_Act_GetList_SC {
  repeated CmdActivityData vActivity = 1;
  uint32 iPushVersion = 2;
  SdpString sNewChecksum = 3;
  bool bOnlyStatusData = 4;
  repeated CmdActivityStatus vStatusData = 5;
}

message Cmd_Act_GetStatusById_CS {
  repeated SdpUInt vActivityId = 1;
}

message Cmd_Act_GetStatusById_SC {
  repeated CmdActivityStatus vStatus = 1;
}

message Cmd_Act_LevelAward_GetAward_CS {
  uint32 iActivityId = 1;
  uint32 iID = 2;
}

message Cmd_Act_LevelAward_GetAward_SC {
  uint32 iActivityId = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Act_LoginSelect_SelectReward_CS {
  uint32 iActivityId = 1;
  uint32 iSelectIndex = 2;
}

message Cmd_Act_LoginSelect_SelectReward_SC {
  uint32 iActivityId = 1;
  uint32 iSelectIndex = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_LoginSendItem_TakeReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_LoginSendItem_TakeReward_SC {
  uint32 iActivityId = 1;
  uint32 iTakeNum = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_NewbieLucky_SkillPoint_CS {
  uint32 iNum = 1;
}

message Cmd_Act_PayStore_FreeReward_CS {
  uint32 iActivityId = 1;
  uint32 iStoreId = 2;
  uint32 iGoodsId = 3;
}

message Cmd_Act_PayStore_FreeReward_SC {
  repeated CmdIDNum vReward = 1;
}

message Cmd_Act_PayStore_SelectReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_PickupGift_SetReward_CS {
  uint32 iActivityId = 1;
  uint32 iGiftId = 2;
  map<SdpUInt, SdpUInt> mGridRewardIndex = 3;
}

message Cmd_Act_Recharge_BuyFreeGift_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_Recharge_BuyFreeGift_SC {
  repeated CmdIDNum vItem = 1;
}

message Cmd_Act_Recharge_IAP_GetFreeReward_CS {
  uint32 iActivityId = 1;
  SdpString sProductId = 2;
  uint32 iProductSubId = 3;
}

message Cmd_Act_Recharge_IAP_GetFreeReward_SC {
  repeated CmdIDNum vItem = 1;
}

message Cmd_Act_Recharge_SelectGift_CS {
  uint32 iActivityId = 1;
  uint32 iCfgIndex = 2;
  uint32 iGiftIndex = 3;
  map<SdpUInt, SdpUInt> mSelectItemIndex = 4;
}

message Cmd_Act_Recharge_SelectGift_SC {
  uint32 iActivityId = 1;
  uint32 iGiftIndex = 2;
}

message Cmd_Act_ReturnSign_GetSignReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_ReturnSign_GetSignReward_SC {
  uint32 iActivityId = 1;
  uint32 iMaxAwardedDays = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_Sign_Sign_CS {
  uint32 iActivityId = 1;
  uint32 iIndex = 2;
}

message Cmd_Act_Sign_Sign_SC {
  uint32 iActivityId = 1;
  uint32 iIndex = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_SignGift_GetSignReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_SignGift_GetSignReward_SC {
  uint32 iActivityId = 1;
  uint32 iMaxAwardedDays = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_SurveyReward_GetLink_CS {
  uint32 iActivityId = 1;
  uint32 iIndexId = 2;
}

message Cmd_Act_SurveyReward_GetLink_SC {
  uint32 iActivityId = 1;
  SdpString sLink = 2;
}

message Cmd_Act_SurveyReward_GetReward_CS {
  uint32 iActivityId = 1;
  uint32 iIndexId = 2;
}

message Cmd_Act_SurveyReward_GetReward_SC {
  uint32 iActivityId = 1;
  uint32 iIndexId = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Act_TimelineJump_GetReward_CS {
  uint32 iActivityId = 1;
}

message Cmd_Act_TimelineJump_GetReward_SC {
  repeated CmdIDNum vReward = 1;
}

message Cmd_Afk_GetData_CS {
  bool bAuto = 1;
}

message Cmd_Afk_GetData_SC {
  CmdAfk stAfkData = 1;
}

message Cmd_Afk_TakeInstant_SC {
  uint32 iInstantTimes = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Afk_TakeReward_SC {
  uint32 iTakeRewardTime = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Alliance_AllianceHistory_SC {
  repeated CmdAllianceHistory vHistory = 1;
}

message Cmd_Alliance_Apply_CS {
  uint64 iAllianceId = 1;
}

message Cmd_Alliance_Apply_SC {
  uint64 iAllianceId = 1;
  uint32 iJoinType = 2;
}

message Cmd_Alliance_Battle_GetBattleData_CS {
  uint32 iActivityId = 1;
}

message Cmd_Alliance_Battle_GetBattleData_SC {
  uint32 iActivityId = 1;
  CmdAllianceBattleData stBattle = 2;
  uint32 iChallengeTimes = 3;
  repeated SdpUInt vFightHero = 4;
  uint32 iMyRank = 5;
}

message Cmd_Alliance_Battle_GetBattleHistory_CS {
  uint32 iActivityId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
}

message Cmd_Alliance_Battle_GetBattleHistory_SC {
  uint32 iActivityId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
  repeated CmdAllianceBattleHistory vHistory = 4;
}

message Cmd_Alliance_Battle_GetRankList_CS {
  uint32 iActivityId = 1;
  uint32 iBeginRank = 2;
  uint32 iEndRank = 3;
}

message Cmd_Alliance_Battle_GetRankList_SC {
  uint32 iActivityId = 1;
  repeated CmdAllianceBattleRankItem vRankList = 2;
  uint32 iMyRank = 3;
  uint64 iMyScore = 4;
  uint32 iRankSize = 5;
}

message Cmd_Alliance_CancelApply_CS {
  uint64 iAllianceId = 1;
}

message Cmd_Alliance_CancelApply_SC {
  uint64 iAllianceId = 1;
}

message Cmd_Alliance_CancelTransfer_SC {
  uint32 iTransferEffectTime = 1;
}

message Cmd_Alliance_ChangeBulletin_CS {
  SdpString sBulletin = 1;
}

message Cmd_Alliance_ChangeName_CS {
  SdpString sName = 1;
}

message Cmd_Alliance_ChangePost_CS {
  uint64 iUid = 1;
  uint32 iPost = 2;
  uint32 iZoneId = 3;
}

message Cmd_Alliance_ChangeRecruit_CS {
  SdpString sRecruit = 1;
}

message Cmd_Alliance_ChangeSetting_CS {
  repeated SdpUInt vChangeSettingsType = 1;
  uint32 iBadgeId = 2;
  uint32 iLanguageId = 3;
  uint32 iJoinType = 4;
  uint32 iJoinLevel = 5;
}

message Cmd_Alliance_Create_CS {
  SdpString sAllianceName = 1;
  uint32 iBadgeId = 2;
  uint32 iJoinType = 3;
  uint32 iJoinLevel = 4;
}

message Cmd_Alliance_Create_SC {
  uint64 iAllianceId = 1;
  CmdAllianceData stAllianceData = 2;
}

message Cmd_Alliance_GetApplyList_SC {
  repeated CmdAllianceApplyerData vApplyList = 1;
}

message Cmd_Alliance_GetDetail_CS {
  uint64 iAllianceId = 1;
}

message Cmd_Alliance_GetDetail_SC {
  CmdAllianceData stAllianceData = 1;
}

message Cmd_Alliance_GetInit_SC {
  uint64 iAllianceId = 1;
  repeated SdpULong vAllianceApplyList = 2;
  uint32 iJoinAllianceCount = 3;
  uint32 iLastLeaveAllianceTime = 4;
  bool bHaveInvite = 5;
  uint32 iLikeTimes = 6;
  repeated PlayerIDType vLikedOther = 7;
  uint32 iSignNum = 8;
  uint32 iSignTime = 9;
  uint32 iBattleTimes = 10;
}

message Cmd_Alliance_GetInviteList_SC {
  repeated CmdAllianceInviteInfo vList = 1;
}

message Cmd_Alliance_GetRecommendList_CS {
  uint32 iLanguageId = 1;
}

message Cmd_Alliance_GetRecommendList_SC {
  repeated CmdAllianceBriefData vAllianceBriefData = 1;
}

message Cmd_Alliance_GetRoleApplyList_SC {
  repeated SdpULong vAllianceId = 1;
}

message Cmd_Alliance_Invite_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Alliance_Invite_SC {
  int64 iRet = 1;
}

message Cmd_Alliance_Kick_CS {
  uint64 iBeKickUid = 1;
  uint32 iBeKickZoneId = 2;
}

message Cmd_Alliance_Like_CS {
  PlayerIDType stOther = 1;
}

message Cmd_Alliance_Like_SC {
  uint32 iLikeTimes = 1;
  repeated CmdIDNum vReward = 2;
  PlayerIDType stOther = 3;
}

message Cmd_Alliance_OperateApply_CS {
  uint64 iOperUid = 1;
  bool bAccept = 2;
  uint32 iOperZoneId = 3;
}

message Cmd_Alliance_ReplyInvite_CS {
  uint64 iAllianceId = 1;
  bool bAccept = 2;
}

message Cmd_Alliance_ReplyInvite_SC {
  uint64 iAllianceId = 1;
  bool bAccept = 2;
}

message Cmd_Alliance_Report_CS {
  uint32 iAllianceReportType = 1;
  SdpString sReason = 2;
  uint64 iAllianceId = 3;
  uint32 iReportReasonType = 4;
}

message Cmd_Alliance_Search_CS {
  SdpString sInput = 1;
  uint32 iLanguageId = 2;
  uint32 iPage = 3;
  uint32 iPagePerNum = 4;
}

message Cmd_Alliance_Search_SC {
  repeated CmdAllianceBriefData vAllianceBriefData = 1;
  uint32 iPage = 2;
  uint32 iTotal = 3;
}

message Cmd_Alliance_SendMail_CS {
  SdpString sContent = 1;
}

message Cmd_Alliance_Sign_SC {
  repeated CmdIDNum vReward = 1;
  uint32 iSignNum = 2;
  uint32 iSignTime = 3;
}

message Cmd_Alliance_Transfer_CS {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
}

message Cmd_Alliance_Transfer_SC {
  uint32 iTransferEffectTime = 1;
  PlayerIDType stNewTransferMaster = 2;
}

message Cmd_Ancient_AddEnergy_CS {
  uint32 iAddEnergy = 1;
}

message Cmd_Ancient_AddEnergy_SC {
  uint32 iAddEnergy = 1;
  uint32 iCurEnergy = 2;
}

message Cmd_Ancient_ChangeHero_CS {
  uint32 iHeroId = 1;
}

message Cmd_Ancient_ChangeHero_SC {
  uint32 iHeroId = 1;
  CmdAncientHero stHero = 2;
}

message Cmd_Ancient_GetData_SC {
  CmdAncient stAncient = 1;
}

message Cmd_Ancient_RefreshQuest_SC {
  repeated CmdQuest vQuest = 1;
}

message Cmd_Ancient_SummonHero_SC {
  uint32 iHeroId = 1;
  CmdAncientHero stHero = 2;
  uint32 iCurHero = 3;
  repeated CmdIDNum vItem = 4;
}

message Cmd_Ancient_TakeQuestAward_CS {
  repeated SdpUInt vQuestId = 1;
}

message Cmd_Ancient_TakeQuestAward_SC {
  repeated SdpUInt vQuestId = 1;
  repeated CmdIDNum vItem = 2;
}

message Cmd_Arena_FinishChallenge_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iEnemyId = 3;
  CmdFinishChallengeInfoCS stFinishChallengeInfoCS = 4;
}

message Cmd_Arena_FinishChallenge_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  CmdFinishChallengeInfoSC stFinishChallengeInfoSC = 3;
  repeated SdpUInt vResult = 4;
}

message Cmd_Arena_QuitChallenge_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  bool bRound = 3;
}

message Cmd_Arena_QuitChallenge_SC {
  bool bRound = 1;
}

message Cmd_Arena_StartChallenge_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iEnemyId = 3;
  CmdStartChallengeInfoCS stStartChallengeInfoCS = 4;
}

message Cmd_Arena_StartChallenge_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  CmdStartChallengeInfoSC stStartChallengeInfoSC = 3;
}

message Cmd_Attract_EndCouncil_CS {
  uint32 iIssue = 1;
  uint32 iOpinion = 2;
}

message Cmd_Attract_EndCouncil_SC {
  uint32 iIssue = 1;
  uint32 iOpinion = 2;
  repeated CmdCouncilHeroResult vHeroResult = 3;
}

message Cmd_Attract_GetAttract_SC {
  CmdAllAttract stAttract = 1;
  uint32 iTotalTimes = 2;
}

message Cmd_Attract_LetterSubmitItem_CS {
  uint32 iHeroId = 1;
  uint32 iLetterId = 2;
  uint32 iQuestId = 3;
}

message Cmd_Attract_LetterSubmitItem_SC {
  uint32 iHeroId = 1;
  uint32 iLetterId = 2;
  uint32 iQuestId = 3;
}

message Cmd_Attract_SeeStory_CS {
  uint32 iHeroId = 1;
  uint32 iStoryId = 2;
}

message Cmd_Attract_SeeStory_SC {
  uint32 iHeroId = 1;
  uint32 iStoryId = 2;
}

message Cmd_Attract_SendGift_CS {
  uint32 iHeroId = 1;
  repeated CmdIDNum vGift = 2;
}

message Cmd_Attract_SendGift_SC {
  uint32 iHeroId = 1;
  bool bRankChange = 2;
  uint32 iAddExp = 3;
}

message Cmd_Attract_SetCouncilHero_CS {
  repeated SdpUInt vHeroId = 1;
}

message Cmd_Attract_SetCouncilHero_SC {
  repeated SdpUInt vHeroId = 1;
}

message Cmd_Attract_SetLetter_CS {
  uint32 iHeroId = 1;
  uint32 iLetterId = 2;
  uint32 iCurStep = 3;
  repeated SdpUInt vNewReply = 4;
}

message Cmd_Attract_SetLetter_SC {
  uint32 iHeroId = 1;
  uint32 iLetterId = 2;
  CmdLetter stLetter = 3;
  repeated CmdIDNum vReward = 4;
}

message Cmd_Attract_StartCouncil_SC {
  uint32 iStartTime = 1;
}

message Cmd_Attract_TakeStoryReward_CS {
  uint32 iHeroId = 1;
  uint32 iStoryId = 2;
}

message Cmd_Attract_TakeStoryReward_SC {
  uint32 iHeroId = 1;
  uint32 iStoryId = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Attract_TouchHero_CS {
  uint32 iHeroId = 1;
  uint32 iTimes = 2;
}

message Cmd_Attract_TouchHero_SC {
  uint32 iHeroId = 1;
  uint32 iTimes = 2;
  bool bRankChange = 3;
  uint32 iTotalTimes = 4;
}

message Cmd_BaseStore_GetBaseStoreChapter_CS {
  uint32 iStoreId = 1;
  uint32 iGoodsId = 2;
}

message Cmd_BaseStore_GetBaseStoreChapter_SC {
  CmdBaseStoreChapter stChapter = 1;
}

message Cmd_BaseStore_GetBaseStoreChapterReward_CS {
  uint32 iStoreId = 1;
  uint32 iGoodsId = 2;
  uint32 iLevel = 3;
  bool bAll = 4;
}

message Cmd_BaseStore_GetBaseStoreChapterReward_SC {
  repeated CmdIDNum vFreeReward = 1;
  repeated CmdIDNum vPayReward = 2;
}

message Cmd_BaseStore_GetBaseStoreMonthlyCard_CS {
  uint32 iStoreId = 1;
  uint32 iCardId = 2;
}

message Cmd_BaseStore_GetBaseStoreMonthlyCard_SC {
  CmdBaseStoreMonthlyCard stMonthlyCard = 1;
}

message Cmd_Battle_Check_CS {
  uint64 ulIndex = 1;
  SdpString sContent = 2;
}

message Cmd_Battle_Check_SC {
  uint64 ulIndex = 1;
  SdpString sContent = 2;
}

message Cmd_Battle_Connect_CS {
  uint64 iAccountId = 1;
  uint32 iZoneId = 2;
  uint32 iReconnectNum = 3;
  SdpString sClientVersion = 4;
  uint32 iOSType = 5;
  SdpString sProxyAddr = 6;
  uint32 iEchoTimeMS = 7;
  uint64 iBattleUid = 8;
  uint32 iFrameId = 9;
  uint32 uiDoubleConParam = 10;
  bool bOneReconnect = 11;
  bool bNoReadyData = 12;
  uint32 iBattleServerID = 13;
}

message Cmd_Battle_Connect_SC {
  SdpString sAgoraToken = 1;
}

message Cmd_Battle_Echo_CS {
  uint64 lClientTime = 1;
}

message Cmd_Battle_Echo_SC {
  uint64 lClientTime = 1;
  uint64 lServerTime = 2;
}

message Cmd_Battle_GetFrameTime_SC {
  uint64 iLastFrameTime = 1;
  uint32 iLogicTime = 2;
}

message Cmd_Battle_Hash_CS {
  uint32 uiData = 1;
  SdpString sMd5 = 2;
}

message Cmd_Battle_Hash_SC {
  uint32 uiData = 1;
  SdpString sMd5 = 2;
}

message Cmd_Battle_MatchInfo_SC {
  uint32 iMatchState = 1;
  uint32 iMatchTime = 2;
  uint32 iMatchType = 3;
}

message Cmd_Battle_NewUdpFramesData_SC {
  uint32 uiStartFrame = 1;
  uint32 uiFrameIndex = 2;
  repeated BattleOperData vOpers1 = 3;
  repeated BattleOperData vOpers2 = 4;
  repeated BattleOperData vOpers3 = 5;
  repeated BattleOperData vOpers4 = 6;
}

message Cmd_Battle_Oper_CS {
  uint64 iBattleUid = 1;
  BattleOperData stOperData = 2;
  uint32 uiOperIndex = 3;
}

message Cmd_Battle_Oper_SC {
  uint64 iBattleUid = 1;
  repeated BattleOperData vOperData = 2;
  uint64 uClientReceivedMsgFrame = 3;
}

message Cmd_Battle_Ping_CS {
  uint64 iTimeStampMS = 1;
  uint64 iPingSeq = 2;
  uint64 iCurIndex = 3;
  uint64 iRoleId = 4;
  uint32 iZoneId = 5;
}

message Cmd_Battle_Ping_SC {
  uint64 iTimeStampMS = 1;
  uint64 iPingSeq = 2;
  uint64 iCurIndex = 3;
  uint64 iRecvCnt = 4;
}

message Cmd_Battle_ReconnectFailed_CS {
  uint64 iBattleUid = 1;
}

message Cmd_Battle_ReconnectInfo_SC {
  uint64 iBattleUid = 1;
  SdpString sBattleIp = 2;
  uint32 iBattlePort = 3;
  SdpString sBattleProxy = 4;
  uint32 iProxyId = 5;
  uint32 iProxyPing = 6;
  SdpString sBattleConn = 7;
  uint32 iUdpPort = 8;
  uint32 iMatchType = 9;
}

message Cmd_Battle_ReconnectReady_SC {
  uint32 iRspCode = 1;
}

message Cmd_Battle_RecvEnterBattle_CS {
  uint64 iBattleUid = 1;
}

message Cmd_Battle_ReportLogicError_SC {
  int64 iResult = 1;
}

message Cmd_Battle_ReportPing_CS {
  uint32 iPing = 1;
  uint32 iLoss = 2;
  uint32 iUpLoss = 3;
  uint32 iDownLoss = 4;
}

message Cmd_Battle_Result_CS {
  uint64 iBattleUid = 1;
  uint32 iBattleTime = 2;
  repeated PlayerBattleRecord vPlayerBattleRecord = 3;
}

message Cmd_Battle_Result_SC {
  uint64 iBattleUid = 1;
  uint32 iResult = 2;
}

message Cmd_Battle_SetUdpInitPattern_CS {
  repeated SdpUInt vPatternANormal = 1;
  repeated SdpUInt vPatternBNormal = 2;
  repeated SdpUInt vPatternALag = 3;
  repeated SdpUInt vPatternBLag = 4;
  bool bUseServerPush = 5;
}

message Cmd_Battle_SetUdpInitPattern_SC {
  repeated SdpUInt vPatternANormal = 1;
  repeated SdpUInt vPatternBNormal = 2;
  repeated SdpUInt vPatternALag = 3;
  repeated SdpUInt vPatternBLag = 4;
  bool bUseServerPush = 5;
}

message Cmd_Battle_SetUdpPattern_CS {
  repeated SdpUInt vPatternA = 1;
  repeated SdpUInt vPatternB = 2;
  bool bUseNewPack = 3;
}

message Cmd_Battle_SetUdpPattern_SC {
  repeated SdpUInt vPatternA = 1;
  repeated SdpUInt vPatternB = 2;
  bool bUseNewPack = 3;
}

message Cmd_Battle_StartMatch_CS {
  uint32 iMatchType = 1;
}

message Cmd_Battle_StartMatch_SC {
  uint32 iRet = 1;
  uint32 iPlayerNum = 2;
  uint32 iSelfElo = 3;
  uint32 iMatchType = 4;
  uint32 iMatchId = 5;
}

message Cmd_Battle_UdpFrame_Confirm_CS {
  uint32 uiFrameConfirm = 1;
}

message Cmd_Battle_UdpFrameData_CS {
  uint32 uiLastLogicTime = 1;
  int64 iTryNum = 2;
}

message Cmd_Battle_UdpFrameData_SC {
  repeated SdpString vOperFrames = 1;
}

message Cmd_Battle_UdpFrameReq_CS {
  repeated SdpInt vOperIndex = 1;
  uint32 iReqIndex = 2;
  bool bReliable = 3;
}

message Cmd_Battle_UdpFrameReq_SC {
  repeated SdpString vOperFrames = 1;
}

message Cmd_Castle_CancelDispatch_CS {
  uint32 iLocation = 1;
}

message Cmd_Castle_CancelDispatch_SC {
  uint32 iLocation = 1;
  CmdDispatchEvent stEvent = 2;
}

message Cmd_Castle_DoDispatch_CS {
  map<SdpUInt, repeated SdpUInt> mLocationHero = 1;
}

message Cmd_Castle_DoDispatch_SC {
  map<SdpUInt, CmdDispatchEvent> mEvent = 1;
}

message Cmd_Castle_DoPlaceStory_CS {
  uint32 iStoryId = 1;
  bool bSkip = 2;
}

message Cmd_Castle_DoPlaceStory_SC {
  uint32 iStoryId = 1;
  uint32 iStoryTimes = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Castle_GetDispatch_SC {
  map<SdpUInt, CmdDispatchEvent> mEvent = 1;
}

message Cmd_Castle_GetExplore_SC {
  map<SdpUInt, repeated SdpUInt> mClue = 1;
  map<SdpUInt, CmdLostStory> mStory = 2;
  repeated SdpUInt vChapterReward = 3;
}

message Cmd_Castle_GetPlace_SC {
  repeated SdpUInt vUnlockPlace = 1;
  map<SdpUInt, SdpUInt> mWaitStory = 2;
  uint32 iStoryTimes = 3;
  map<SdpUInt, SdpUInt> mFinishedStory = 4;
}

message Cmd_Castle_GetStarRoom_SC {
  map<SdpUInt, CmdConstella> mConstella = 1;
}

message Cmd_Castle_GetStatue_SC {
  uint32 iLevel = 1;
  uint32 iRewardLevel = 2;
}

message Cmd_Castle_RefreshDispatch_SC {
  map<SdpUInt, CmdDispatchEvent> mEvent = 1;
}

message Cmd_Castle_SeeStar_CS {
  uint32 iConstellaId = 1;
  uint32 iStarId = 2;
  repeated SdpUInt vHero = 3;
}

message Cmd_Castle_SeeStar_SC {
  uint32 iConstellaId = 1;
  uint32 iStarId = 2;
  repeated SdpUInt vHero = 3;
}

message Cmd_Castle_TakeChapterReward_CS {
  uint32 iChapterId = 1;
}

message Cmd_Castle_TakeChapterReward_SC {
  uint32 iChapterId = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Castle_TakeClueReward_CS {
  uint32 iChapterId = 1;
  uint32 iClueId = 2;
}

message Cmd_Castle_TakeClueReward_SC {
  uint32 iChapterId = 1;
  uint32 iClueId = 2;
  repeated CmdIDNum vReward = 3;
  CmdLostStory stRewardStory = 4;
}

message Cmd_Castle_TakeDispatchReward_CS {
  repeated SdpUInt vLocation = 1;
}

message Cmd_Castle_TakeDispatchReward_SC {
  map<SdpUInt, CmdDispatchEvent> mEvent = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Castle_TakeStatueReward_SC {
  uint32 iLevel = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Castle_TakeStoryReward_CS {
  uint32 iStoryId = 1;
}

message Cmd_Castle_TakeStoryReward_SC {
  uint32 iStoryId = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Castle_UnlockConstella_CS {
  uint32 iConstellaId = 1;
}

message Cmd_Castle_UnlockConstella_SC {
  uint32 iConstellaId = 1;
}

message Cmd_Castle_UnlockKeyPlace_CS {
  uint32 iPlaceId = 1;
}

message Cmd_Castle_UnlockKeyPlace_SC {
  uint32 iPlaceId = 1;
}

message Cmd_Chat_AddToCrossShield_CS {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
  bool bShield = 3;
}

message Cmd_Chat_AddToCrossShield_SC {
  PlayerBaseInfo stRole = 1;
  bool bShield = 2;
}

message Cmd_Chat_AddToShield_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_AddToShield_SC {
  CmdRoleSimpleInfo stRoleId = 1;
}

message Cmd_Chat_CreatePersonalChat_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_CreatePersonalChat_SC {
  CmdPersonalChatInitData stPersonalChat = 1;
}

message Cmd_Chat_CrossGroup_Create_CS {
  repeated PlayerIDType vMembers = 1;
  SdpString sLocalName = 2;
}

message Cmd_Chat_CrossGroup_Create_SC {
  GroupChatInfo stGroupInfo = 1;
}

message Cmd_Chat_CrossGroup_Leave_CS {
  uint32 iGroupId = 1;
}

message Cmd_Chat_CrossGroup_Leave_SC {
  uint32 iGroupId = 1;
}

message Cmd_Chat_DelPersonalChat_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_GetChat_CS {
  uint32 iChannel = 1;
  uint32 iIndex = 2;
  bool bRequestAllianceGiftPack = 3;
  uint64 iGroupId = 4;
  bool bAllianceFilter = 5;
  uint64 iRoomId = 6;
  PlayerIDType stToRoleId = 7;
}

message Cmd_Chat_GetChat_SC {
  uint32 iChannel = 1;
  repeated CmdChatInfo vChatInfo = 2;
  bool bRequestAllianceGiftPack = 3;
  uint64 iGroupId = 4;
  uint64 iRoomId = 5;
  repeated PlayerChatInfo vCrossChatInfo = 6;
  PlayerIDType stToRoleId = 7;
}

message Cmd_Chat_GetCrossZoneInit_SC {
  uint32 iCrossChatLanguage = 1;
  uint32 iCrossChatLanguageTime = 2;
  repeated PlayerChatInfo vChatInfo = 3;
  repeated GroupChatInfo vGroupChatInfo = 4;
  map<SdpUInt, repeated SdpULong> mZoneShieldUid = 5;
  map<SdpUInt, repeated SdpULong> mZoneFollowUid = 6;
}

message Cmd_Chat_GetCrossZoneRoleDetail_CS {
  uint32 iZoneId = 1;
  repeated SdpULong vUid = 2;
}

message Cmd_Chat_GetCrossZoneRoleDetail_SC {
  uint32 iZoneId = 1;
  repeated SdpULong vUid = 2;
  map<SdpULong, CrossChatRoleDetail> mRoleDetail = 3;
}

message Cmd_Chat_GetDirtyWords_SC {
  map<SdpString, SdpUInt> mDirtyWordChat = 1;
}

message Cmd_Chat_GetInit_SC {
  map<SdpUInt, SdpUInt> mChatTime = 1;
  repeated CmdChatInfo vChatInfo = 2;
  repeated CmdChatGroup vChatGroup = 3;
  bool bShowCrossChat = 4;
  repeated CmdPersonalChatInitData vPersonalChat = 5;
  repeated PlayerIDType vShieldRole = 6;
  bool bRefuseStranger = 7;
  repeated SdpUInt vEmojiId = 8;
}

message Cmd_Chat_GetLanguageGroup_SC {
  map<SdpUInt, CmdChatLanguage> mLanguage = 1;
}

message Cmd_Chat_GetLanguageInit_SC {
  uint32 iLanguageId = 1;
  uint64 iLangGroupId = 2;
  uint32 iLangEnterTime = 3;
}

message Cmd_Chat_GetLastChatInfo_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_GetLastChatInfo_SC {
  uint32 iNextIndex = 1;
  repeated SdpString vMessages = 2;
}

message Cmd_Chat_GetShieldList_SC {
  repeated CmdFriendInfo vShieldRole = 1;
}

message Cmd_Chat_GetTranslate_CS {
  SdpString sStr = 1;
  uint32 iLanguageId = 2;
}

message Cmd_Chat_GetTranslate_SC {
  SdpString sStr = 1;
  bool bFind = 2;
}

message Cmd_Chat_GroupDissolve_CS {
  uint64 iGroupId = 1;
}

message Cmd_Chat_GroupInvite_CS {
  uint64 iGroupId = 1;
  repeated SdpULong vUid = 2;
}

message Cmd_Chat_GroupInvite_SC {
  bool bFailed = 1;
  repeated SdpString vShieldName = 2;
  uint64 iGroupId = 3;
}

message Cmd_Chat_GroupKick_CS {
  uint64 iGroupId = 1;
  repeated SdpULong vKickUid = 2;
}

message Cmd_Chat_GroupLeave_CS {
  uint64 iGroupId = 1;
}

message Cmd_Chat_GroupSet_CS {
  uint64 iGroupId = 1;
  bool bOpenPush = 2;
}

message Cmd_Chat_GroupSetName_CS {
  uint64 iGroupId = 1;
  SdpString sName = 2;
}

message Cmd_Chat_JoinCrossZoneRoom_CS {
  uint32 iLanguageId = 1;
}

message Cmd_Chat_JoinCrossZoneRoom_SC {
  uint32 iCrossChatLanguage = 1;
  uint32 iCrossChatLanguageTime = 2;
}

message Cmd_Chat_Like_CS {
  uint64 iChatUid = 1;
  uint32 iChannelId = 2;
  uint64 iGroupId = 3;
}

message Cmd_Chat_ReadPersonalMsg_CS {
  uint32 iChatUid = 1;
  PlayerIDType stRoleId = 2;
}

message Cmd_Chat_RemoveFromCrossShield_CS {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
  bool bShield = 3;
}

message Cmd_Chat_RemoveFromCrossShield_SC {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
  bool bShield = 3;
}

message Cmd_Chat_RemoveFromShield_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_RemoveFromShield_SC {
  PlayerIDType stRoleId = 1;
}

message Cmd_Chat_ReportBadMessage_CS {
  uint32 iChannel = 1;
  uint32 iChatUid = 2;
  SdpString sReason = 3;
  uint64 iGroupId = 4;
  uint32 iZoneId = 5;
  uint32 iReportReasonType = 6;
  PlayerIDType stRoleId = 7;
}

message Cmd_Chat_ReportBadMessages_CS {
  SdpString sReason = 1;
  uint32 iReportReasonType = 2;
  PlayerIDType stRoleId = 3;
}

message Cmd_Chat_SendChat_CS {
  uint32 iChannel = 1;
  SdpString sMessage = 2;
  uint32 iTemplateId = 3;
  map<SdpString, SdpString> mParam = 4;
  uint64 iFightReportId = 5;
  uint32 iFightType = 6;
  uint64 iSharedUid = 7;
  uint64 iSharedAllianceId = 8;
  uint32 iMailId = 9;
  uint64 iAllianceGiftPackUid = 10;
  repeated CmdChatArenaBattleFightReport vArenaBattleReportId = 11;
  uint64 iGroupId = 12;
  uint32 iAllianceBuildId = 13;
  uint64 iBuildAllianceId = 14;
  uint64 iRoomId = 15;
  uint32 iSharedUidZoneId = 16;
  uint32 iHeroId = 17;
  PlayerIDType stToRoleId = 18;
  uint32 iActivityId = 19;
}

message Cmd_Chat_SendChat_SC {
  uint32 iChannel = 1;
  uint32 iTime = 2;
  uint64 iGroupId = 3;
}

message Cmd_Chat_SetRefuseStranger_CS {
  bool bRefuseStranger = 1;
}

message Cmd_Chat_SetShowCrossChat_CS {
  bool bShow = 1;
}

message Cmd_Chat_SwitchLanguage_CS {
  uint32 iLanguageId = 1;
  uint64 iLangGroupId = 2;
}

message Cmd_Chat_SwitchLanguage_SC {
  uint32 iLanguageId = 1;
  uint64 iLangGroupId = 2;
  uint32 iLangEnterTime = 3;
}

message Cmd_Chat_SyncTranslate_CS {
  SdpString sStr = 1;
  uint32 iLanguageId = 2;
  SdpString sTranslateStr = 3;
}

message Cmd_Chat_Unlike_CS {
  uint64 iChatUid = 1;
  uint32 iChannelId = 2;
  uint64 iGroupId = 3;
}

message Cmd_ClientData_GetData_SC {
  map<SdpUInt, CmdClientData> mData = 1;
}

message Cmd_ClientData_SetData_CS {
  map<SdpUInt, CmdClientData> mData = 1;
}

message Cmd_Equip_AddExp_CS {
  uint64 iEquipUid = 1;
  repeated CmdIDNum vUseItem = 2;
  repeated SdpULong vUseEquip = 3;
}

message Cmd_Equip_AddExp_SC {
  uint64 iEquipUid = 1;
  uint32 iLevel = 2;
  uint32 iExp = 3;
  repeated CmdIDNum vReturnItem = 4;
}

message Cmd_Equip_GetList_SC {
  map<SdpULong, CmdEquip> mCmdEquips = 1;
}

message Cmd_Equip_Overload_CS {
  uint64 iEquipUid = 1;
}

message Cmd_Equip_Overload_SC {
  uint64 iEquipUid = 1;
}

message Cmd_Equip_ReOverload_CS {
  uint64 iEquipUid = 1;
  bool bLevel = 2;
}

message Cmd_Equip_ReOverload_SC {
  uint64 iEquipUid = 1;
  bool bLevel = 2;
}

message Cmd_Equip_SaveReOverload_CS {
  uint64 iEquipUid = 1;
  bool bSave = 2;
}

message Cmd_Equip_SaveReOverload_SC {
  uint64 iEquipUid = 1;
  bool bSave = 2;
}

message Cmd_Equip_SetEffectLock_CS {
  uint64 iEquipUid = 1;
  uint32 iSlot = 2;
  bool bLock = 3;
}

message Cmd_Equip_SetEffectLock_SC {
  uint64 iEquipUid = 1;
  uint32 iSlot = 2;
  bool bLock = 3;
}

message Cmd_Fight_FinishChallenge_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iStageId = 3;
  CmdFinishChallengeInfoCS stFinishChallengeInfoCS = 4;
  uint32 iActivityID = 5;
  uint32 iEnemyId = 6;
  uint32 iRound = 7;
  uint32 iBossId = 8;
}

message Cmd_Fight_FinishChallenge_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iStageId = 3;
  CmdFinishChallengeInfoSC stFinishChallengeInfoSC = 4;
  uint32 iActivityID = 5;
  uint32 iScore = 6;
  map<SdpUInt, CmdFightingMonster> mFightingMonster = 7;
  repeated SdpUInt vResult = 8;
  uint32 iRound = 9;
  uint32 iBossId = 10;
}

message Cmd_Fight_QuitChallenge_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  bool bRound = 3;
}

message Cmd_Fight_QuitChallenge_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  bool bRound = 3;
}

message Cmd_Fight_StartChallenge_CS {
  CmdStartChallengeInfoCS stStartChallengeInfoCS = 1;
  uint32 iActivityID = 2;
  uint32 iEnemyId = 3;
  uint32 iRound = 4;
  uint32 iBossId = 5;
}

message Cmd_Fight_StartChallenge_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iStageId = 3;
  CmdStartChallengeInfoSC stStartChallengeInfoSC = 4;
  uint32 iActivityID = 5;
  uint32 iEnemyId = 6;
  uint32 iRound = 7;
  uint32 iBossId = 8;
}

message Cmd_Fight_VerifyReplay_CS {
  CmdFinishChallengeInfoCS stFinishChallengeInfoCS = 1;
  CmdFightVerifyInput stVerifyInput = 2;
}

message Cmd_Fight_VerifyReplay_SC {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
  uint32 iScore = 3;
  CmdFinishChallengeInfoSC stFinishChallengeInfoSC = 4;
}

message Cmd_Form_GetForm_CS {
  uint32 iFightType = 1;
  uint32 iFightSubType = 2;
}

message Cmd_Form_GetForm_SC {
  CmdForm stForm = 1;
}

message Cmd_Form_GetMultiForm_CS {
  uint32 iType = 1;
  repeated SdpUInt vSubType = 2;
}

message Cmd_Form_GetMultiForm_SC {
  uint32 iType = 1;
  map<SdpUInt, CmdForm> mSubTypeForm = 2;
}

message Cmd_Form_GetPreset_SC {
  map<SdpUInt, CmdFormPreset> mPreset = 1;
}

message Cmd_Form_SetForm_CS {
  uint32 iType = 1;
  uint32 iSubType = 2;
  repeated CmdFormHero vHero = 3;
}

message Cmd_Form_SetForm_SC {
  uint32 iType = 1;
  uint32 iSubType = 2;
  CmdForm stForm = 3;
}

message Cmd_Form_SetFormCard_CS {
  uint32 iType = 1;
  uint32 iSubType = 2;
  repeated SdpUInt vHeroID = 3;
}

message Cmd_Form_SetFormCard_SC {
  uint32 iType = 1;
  uint32 iSubType = 2;
  repeated SdpUInt vHeroID = 3;
}

message Cmd_Form_SetFormStar_CS {
  uint32 iType = 1;
  uint32 iSubType = 2;
  repeated SdpUInt vStarUp = 3;
}

message Cmd_Form_SetFormStar_SC {
  uint32 iType = 1;
  uint32 iSubType = 2;
  repeated SdpUInt vStarUp = 3;
}

message Cmd_Form_SetMutexForm_CS {
  uint32 iType = 1;
  map<SdpUInt, CmdForm> mSubTypeForm = 2;
}

message Cmd_Form_SetMutexForm_SC {
  uint32 iType = 1;
  map<SdpUInt, CmdForm> mSubTypeForm = 2;
}

message Cmd_Form_SetPreset_CS {
  uint32 iPresetId = 1;
  repeated SdpUInt vHeroId = 2;
}

message Cmd_Form_SetPreset_SC {
  uint32 iPresetId = 1;
  CmdFormPreset stPreset = 2;
}

message Cmd_Friend_AddFriend_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_AddFriendBatch_CS {
  repeated PlayerIDType vRoleId = 1;
}

message Cmd_Friend_AddFriendBatch_SC {
  repeated PlayerIDType vAddRoleId = 1;
}

message Cmd_Friend_ConfirmAllFriendRequest_SC {
  uint32 iAddNum = 1;
}

message Cmd_Friend_ConfirmFriendRequest_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_DelFriend_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_DelFriendBatch_CS {
  repeated PlayerIDType vRoleId = 1;
}

message Cmd_Friend_DelFriendRequest_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_FinishChallenge_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_FinishChallenge_SC {
  CmdFinishChallengeInfoSC stFinishChallengeInfoSC = 1;
  CmdFightReport stFightReport = 2;
  PlayerIDType stRoleId = 3;
}

message Cmd_Friend_GatherAndSendAllHeart_SC {
  uint32 iDailyTakeHeartNum = 1;
  repeated PlayerIDType vFriendHeartRecieveUntake = 2;
  repeated PlayerIDType vFriendHeartRecieveTake = 3;
}

message Cmd_Friend_GatherHeart_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_GetInit_SC {
  repeated CmdFriendInfo vFriend = 1;
  repeated CmdFriendInfo vFriendRequest = 2;
  uint32 iDailyTakeHeartNum = 3;
  repeated PlayerIDType vFriendHeartSend = 4;
  repeated PlayerIDType vFriendHeartRecieveUntake = 5;
  repeated PlayerIDType vFriendHeartRecieveTake = 6;
}

message Cmd_Friend_GetRecommend_SC {
  repeated CmdFriendInfo vRecommendFriend = 1;
}

message Cmd_Friend_SearchRole_CS {
  uint64 iRoleId = 1;
}

message Cmd_Friend_SearchRole_SC {
  repeated CmdFriendInfo vRole = 1;
}

message Cmd_Friend_SendHeart_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_SendHeart_SC {
  PlayerIDType stRoleId = 1;
}

message Cmd_Friend_StartChallenge_CS {
  PlayerIDType stRoleId = 1;
}

message Cmd_Gacha_DoGacha_CS {
  uint32 iGachaId = 1;
  uint32 iTimesType = 2;
  bool bUseCost = 3;
  uint32 iDiscountType = 4;
}

message Cmd_Gacha_DoGacha_SC {
  uint32 iGachaId = 1;
  uint32 iTimesType = 2;
  uint32 iGachaTimes = 3;
  repeated CmdIDNum vGachaItem = 4;
  repeated CmdIDNum vRealItem = 5;
  repeated CmdIDNum vScoreItem = 6;
  uint32 iDailyTimes = 7;
  uint32 iDiscountType = 8;
  uint32 iCheapTimes = 9;
  uint32 iFreeTimes = 10;
  uint32 iFreeTimesTen = 11;
}

message Cmd_Gacha_GetGacha_CS {
  repeated SdpUInt vGachaId = 1;
}

message Cmd_Gacha_GetGacha_SC {
  map<SdpUInt, CmdGachaPool> mGachaPool = 1;
}

message Cmd_Gacha_GetRecord_CS {
  uint32 iGachaId = 1;
  uint32 iBegin = 2;
  uint32 iEnd = 3;
}

message Cmd_Gacha_GetRecord_SC {
  uint32 iGachaId = 1;
  uint32 iBegin = 2;
  uint32 iEnd = 3;
  uint32 iTotal = 4;
  repeated CmdGachaRecord vRecord = 5;
}

message Cmd_Gacha_GetWishList_CS {
  uint32 iGachaId = 1;
}

message Cmd_Gacha_GetWishList_SC {
  uint32 iGachaId = 1;
  repeated SdpUInt vHeroIdList = 2;
}

message Cmd_Gacha_SetWishList_CS {
  uint32 iGachaId = 1;
  repeated SdpUInt vHeroIdList = 2;
}

message Cmd_Gacha_SetWishList_SC {
  uint32 iGachaId = 1;
  repeated SdpUInt vHeroIdList = 2;
}

message Cmd_Gacha_TakeStepSeq_CS {
  uint32 iGachaId = 1;
  repeated SdpUInt vSeq = 2;
}

message Cmd_Gacha_TakeStepSeq_SC {
  uint32 iGachaId = 1;
  repeated SdpUInt vSeq = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Guide_GetGuide_SC {
  map<SdpUInt, SdpUInt> mGuideData = 1;
}

message Cmd_Guide_SetGuide_CS {
  uint32 iGuideId = 1;
  uint32 iGuideStep = 2;
}

message Cmd_Guide_SetGuide_SC {
  uint32 iGuideId = 1;
  uint32 iGuideStep = 2;
}

message Cmd_Hero_Break_CS {
  uint32 iHeroId = 1;
}

message Cmd_Hero_Break_SC {
  uint32 iHeroId = 1;
  uint32 iBreak = 2;
}

message Cmd_Hero_GetList_SC {
  repeated CmdHeroData vHeroList = 1;
  map<SdpUInt, SdpUInt> mHasFashion = 2;
}

message Cmd_Hero_InstallEquip_CS {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
  uint64 iEquipUid = 3;
}

message Cmd_Hero_InstallEquip_SC {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
  uint64 iEquipUid = 3;
}

message Cmd_Hero_InstallEquipBatch_CS {
  uint32 iHeroId = 1;
  map<SdpUInt, SdpULong> mEquip = 2;
}

message Cmd_Hero_InstallEquipBatch_SC {
  uint32 iHeroId = 1;
  map<SdpUInt, SdpULong> mEquip = 2;
}

message Cmd_Hero_LevelUp_CS {
  uint32 iHeroId = 1;
  uint32 iNum = 2;
}

message Cmd_Hero_ResetLevel_CS {
  uint32 iHeroId = 1;
}

message Cmd_Hero_ResetLevel_SC {
  uint32 iHeroId = 1;
  uint32 iLevel = 2;
  repeated CmdIDNum vItem = 3;
}

message Cmd_Hero_SetFashion_CS {
  uint32 iHeroId = 1;
  uint32 iFashionId = 2;
}

message Cmd_Hero_SetFashion_SC {
  uint32 iHeroId = 1;
  uint32 iFashionId = 2;
}

message Cmd_Hero_SetHeroLove_CS {
  uint32 iHeroId = 1;
  bool bLove = 2;
}

message Cmd_Hero_SetHeroLove_SC {
  uint32 iHeroId = 1;
  bool bLove = 2;
}

message Cmd_Hero_SkillLevelUp_CS {
  uint32 iHeroId = 1;
  uint32 iSkillId = 2;
}

message Cmd_Hero_SkillLevelUp_SC {
  uint32 iHeroId = 1;
  uint32 iSkillId = 2;
  uint32 iLevel = 3;
}

message Cmd_Hero_SkillReset_CS {
  uint32 iHeroId = 1;
}

message Cmd_Hero_SkillReset_SC {
  uint32 iHeroId = 1;
  repeated CmdIDNum vItem = 2;
}

message Cmd_Hero_SwapEquip_CS {
  uint32 iSrcHeroId = 1;
  uint32 iDstHeroId = 2;
  uint32 iPos = 3;
}

message Cmd_Hero_UninstallAllEquip_CS {
  uint32 iHeroId = 1;
}

message Cmd_Hero_UninstallEquip_CS {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
}

message Cmd_Hunting_ChooseBuff_CS {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated SdpUInt vBuff = 3;
}

message Cmd_Hunting_ChooseBuff_SC {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated SdpUInt vBuff = 3;
}

message Cmd_Hunting_GetData_CS {
  uint32 iActivityId = 1;
}

message Cmd_Hunting_GetData_SC {
  uint32 iActivityId = 1;
  CmdHunting stHunting = 2;
}

message Cmd_Hunting_GetMyRank_CS {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
}

message Cmd_Hunting_GetMyRank_SC {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  uint32 iMyRank = 3;
  uint32 iRankSize = 4;
}

message Cmd_Hunting_GetPlayerRecord_CS {
  PlayerIDType stTargetId = 1;
  uint32 iActivityId = 2;
  uint32 iBossId = 3;
}

message Cmd_Hunting_GetPlayerRecord_SC {
  PlayerIDType stTargetId = 1;
  uint32 iActivityId = 2;
  uint32 iBossId = 3;
  CmdHuntingBossRecord stRecord = 4;
}

message Cmd_Hunting_GetRankList_CS {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  uint32 iBeginRank = 3;
  uint32 iEndRank = 4;
}

message Cmd_Hunting_GetRankList_SC {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated CmdHuntingRankItem vRankList = 3;
  uint32 iMyRank = 4;
  uint64 iMyValue = 5;
  uint32 iRankSize = 6;
}

message Cmd_Hunting_TakeBossReward_CS {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated SdpUInt vTakeReward = 3;
}

message Cmd_Hunting_TakeBossReward_SC {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated SdpUInt vTaken = 3;
  repeated CmdIDNum vItem = 4;
}

message Cmd_Inherit_AddHero_CS {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
}

message Cmd_Inherit_AddHero_SC {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
  CmdInheritGrid stGrid = 3;
}

message Cmd_Inherit_DelHero_CS {
  uint32 iPos = 1;
}

message Cmd_Inherit_DelHero_SC {
  uint32 iPos = 1;
  uint32 iHeroId = 2;
  CmdInheritGrid stGrid = 3;
}

message Cmd_Inherit_Evolve_SC {
  bool bEvolve = 1;
}

message Cmd_Inherit_GetData_SC {
  uint32 iLevel = 1;
  repeated SdpUInt vMainHero = 2;
  repeated CmdInheritGrid vGrid = 3;
  bool bEvolve = 4;
}

message Cmd_Inherit_LevelUp_CS {
  uint32 iNum = 1;
}

message Cmd_Inherit_LevelUp_SC {
  uint32 iOldLevel = 1;
  uint32 iNewLevel = 2;
}

message Cmd_Inherit_ResetGrid_CS {
  uint32 iPos = 1;
}

message Cmd_Inherit_ResetGrid_SC {
  uint32 iPos = 1;
  CmdInheritGrid stGrid = 2;
}

message Cmd_Inherit_UnlockGrid_SC {
  uint32 iPos = 1;
  CmdInheritGrid stGrid = 2;
}

message Cmd_Item_Buy_CS {
  uint32 iBaseId = 1;
  uint32 iNum = 2;
}

message Cmd_Item_GetList_SC {
  repeated CmdItemData vItemList = 1;
  uint32 iBagLimit = 2;
  map<SdpUInt, SdpUInt> mUniqueItem = 3;
}

message Cmd_Item_Sell_CS {
  uint64 iItemUid = 1;
  uint32 iNum = 2;
}

message Cmd_Item_Sell_SC {
  repeated CmdIDNum vItem = 1;
}

message Cmd_Item_SellBatch_CS {
  map<SdpULong, SdpUInt> mItemBatch = 1;
}

message Cmd_Item_SellBatch_SC {
  repeated CmdIDNum vItem = 1;
}

message Cmd_Item_Use_CS {
  uint32 iItemBaseId = 1;
  uint32 iNum = 2;
  ItemUseData stItemUseData = 3;
}

message Cmd_Item_Use_SC {
  repeated CmdIDNum vItem = 1;
  map<SdpUInt, repeated CmdIDNum> mChangeReward = 2;
}

message Cmd_Lamia_DailyQuest_GetAward_CS {
  uint32 iActId = 1;
  repeated SdpUInt vQuestId = 2;
}

message Cmd_Lamia_DailyQuest_GetAward_SC {
  uint32 iActId = 1;
  repeated CmdIDNum vAward = 2;
  repeated CmdQuest vQuest = 3;
  uint32 iDaiyQuestActive = 4;
}

message Cmd_Lamia_GameQuest_GetAllAward_CS {
  uint32 iActId = 1;
}

message Cmd_Lamia_GameQuest_GetAllAward_SC {
  uint32 iActId = 1;
  repeated CmdIDNum vAward = 2;
  repeated CmdQuest vQuest = 3;
}

message Cmd_Lamia_GameQuest_GetAward_CS {
  uint32 iActId = 1;
  uint32 iQuestId = 2;
}

message Cmd_Lamia_GameQuest_GetAward_SC {
  uint32 iActId = 1;
  repeated CmdIDNum vAward = 2;
  CmdQuest stQuest = 3;
}

message Cmd_Lamia_GetClueAward_CS {
  uint32 iActId = 1;
  uint32 iClueID = 2;
}

message Cmd_Lamia_GetClueAward_SC {
  uint32 iActId = 1;
  repeated SdpUInt vAwardedClue = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Lamia_GetExploreData_CS {
  uint32 iActId = 1;
}

message Cmd_Lamia_GetExploreData_SC {
  repeated CmdActExploreUnitData vExplore = 1;
}

message Cmd_Lamia_GetList_SC {
  repeated LamiaData vList = 1;
}

message Cmd_Lamia_GetSubActAward_CS {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
}

message Cmd_Lamia_GetSubActAward_SC {
  uint32 iActId = 1;
  repeated SdpUInt vAwardedSubAct = 2;
  repeated CmdIDNum vRewards = 3;
}

message Cmd_Lamia_MiniGame_Finish_CS {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
  uint32 iGameId = 3;
  uint32 iScore = 4;
}

message Cmd_Lamia_MiniGame_Finish_SC {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
  uint32 iGameId = 3;
  uint32 iGameStat = 4;
  repeated CmdIDNum vAward = 5;
}

message Cmd_Lamia_MiniGame_GetAllAward_CS {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
}

message Cmd_Lamia_MiniGame_GetAllAward_SC {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
  repeated CmdIDNum vAward = 3;
  uint32 iMaxAwardedGame = 4;
}

message Cmd_Lamia_Quest_GetAllAward_CS {
  uint32 iActId = 1;
}

message Cmd_Lamia_Quest_GetAllAward_SC {
  uint32 iActId = 1;
  repeated CmdIDNum vAward = 2;
  repeated CmdQuest vQuest = 3;
}

message Cmd_Lamia_Quest_GetAward_CS {
  uint32 iActId = 1;
  uint32 iQuestId = 2;
}

message Cmd_Lamia_Quest_GetAward_SC {
  uint32 iActId = 1;
  repeated CmdIDNum vAward = 2;
  CmdQuest stQuest = 3;
}

message Cmd_Lamia_SetExploreData_CS {
  uint32 iActId = 1;
  repeated CmdActExploreUnitData vExplore = 2;
}

message Cmd_Lamia_SignIn_GetAward_CS {
  uint32 iActId = 1;
}

message Cmd_Lamia_SignIn_GetAward_SC {
  uint32 iActId = 1;
  uint32 iAwardedMaxDays = 2;
  repeated CmdIDNum vAward = 3;
}

message Cmd_Lamia_Stage_Sweep_CS {
  uint32 iActId = 1;
  uint32 iStageId = 2;
  uint32 iTimes = 3;
  repeated SdpUInt vHeroList = 4;
}

message Cmd_Lamia_Stage_Sweep_SC {
  uint32 iActId = 1;
  uint32 iStageId = 2;
  repeated CmdIDNum vAward = 3;
  repeated CmdIDNum vExtraAward = 4;
  uint32 iPassedTimesDaily = 5;
}

message Cmd_Legacy_GetList_SC {
  map<SdpUInt, CmdLegacy> mCmdLegacy = 1;
}

message Cmd_Legacy_Install_CS {
  uint32 iHeroId = 1;
  uint32 iLegacyId = 2;
}

message Cmd_Legacy_Install_SC {
  uint32 iHeroId = 1;
  uint32 iLegacyId = 2;
}

message Cmd_Legacy_InstallBatch_CS {
  repeated SdpUInt vHeroId = 1;
  uint32 iLegacyId = 2;
}

message Cmd_Legacy_InstallBatch_SC {
  repeated SdpUInt vHeroId = 1;
  uint32 iLegacyId = 2;
}

message Cmd_Legacy_Swap_CS {
  uint32 iSrcHeroId = 1;
  uint32 iDstHeroId = 2;
}

message Cmd_Legacy_Swap_SC {
  uint32 iSrcHeroId = 1;
  uint32 iDstHeroId = 2;
}

message Cmd_Legacy_Uninstall_CS {
  uint32 iHeroId = 1;
}

message Cmd_Legacy_Uninstall_SC {
  uint32 iHeroId = 1;
  uint32 iLegacyId = 2;
}

message Cmd_Legacy_Upgrade_CS {
  uint32 iLegacyId = 1;
}

message Cmd_Legacy_Upgrade_SC {
  uint32 iLegacyId = 1;
}

message Cmd_LegacyStage_GameEndRound_CS {
  uint32 iLevelId = 1;
}

message Cmd_LegacyStage_GameLoad_CS {
  uint32 iLevelId = 1;
}

message Cmd_LegacyStage_GameLoad_SC {
  repeated CmdLegacyStageGameRound vRound = 1;
}

message Cmd_LegacyStage_GameOperate_CS {
  uint32 iLevelId = 1;
  repeated CmdLegacyStageGameStep vStep = 2;
}

message Cmd_LegacyStage_GamePass_CS {
  uint32 iLevelId = 1;
  uint32 iWarningNum = 2;
}

message Cmd_LegacyStage_GamePass_SC {
  repeated CmdIDNum vReward = 1;
  CmdLegacyStageLevel stLevel = 2;
}

message Cmd_LegacyStage_GameReset_CS {
  uint32 iLevelId = 1;
}

message Cmd_LegacyStage_GameReset_SC {
  uint32 iLevelId = 1;
}

message Cmd_LegacyStage_GameRollback_CS {
  uint32 iLevelId = 1;
  uint32 iRoundNum = 2;
  uint32 iStepNum = 3;
}

message Cmd_LegacyStage_GetInit_SC {
  map<SdpUInt, CmdLegacyStageChapter> mChapter = 1;
  map<SdpUInt, CmdLegacyStageLevel> mLevel = 2;
  repeated SdpUInt vGameLevelId = 3;
}

message Cmd_LegacyStage_TakeChapterReward_CS {
  uint32 iChapterId = 1;
}

message Cmd_LegacyStage_TakeChapterReward_SC {
  repeated CmdIDNum vReward = 1;
  uint32 iChapterId = 2;
}

message Cmd_Login_Auth_CS {
  SdpString sAccountName = 1;
  SdpString sAuthKey = 2;
  SdpString sClientVersion = 3;
  SdpString sChannel = 4;
  SdpString sOSLanguage = 5;
  uint32 iOSType = 6;
  map<SdpString, SdpString> mMiscData = 7;
  uint32 iLocalZoneId = 8;
  uint32 iRegionId = 9;
  map<SdpString, SdpString> mDeviceInfo = 10;
  uint32 iPrivacyId = 11;
  SdpString sIDFAAccountName = 12;
  bool bSimulator = 13;
  SdpString sSimulatorUid = 14;
  SdpString sSimulatorBrand = 15;
  SdpString sOaId = 16;
  SdpString sDrmId = 17;
}

message Cmd_Login_Auth_SC {
  uint64 iAccountId = 1;
  SdpString sSessionKey = 2;
  ZoneInfo stZone = 3;
  repeated CmdAccountInfo vAccountInfo = 4;
  SdpString sExecuteLua = 5;
  SdpString sUserIP = 6;
  SdpString sAccountName = 7;
  uint64 iServerTimeMS = 8;
  int64 iTimeGmtOff = 9;
  uint32 iNextFreshTime = 10;
  bool bNewAccount = 11;
  uint32 iThirdRealNameAuth = 12;
  SdpString sCountry = 13;
  bool bGDPRCountry = 14;
  map<SdpString, SdpString> mLuaCodeRepair = 15;
  SdpString sFBName = 16;
  SdpString sFBFaceId = 17;
  SdpString sState = 18;
  uint32 iPrivacyId = 19;
  bool bShowAge = 20;
  repeated SdpUInt vDeleteZoneId = 21;
  uint32 iDelTime = 22;
  bool bInWhiteList = 23;
  uint32 iMaxLuaCodeRepairID = 24;
  map<SdpString, SdpString> mMiscData = 25;
}

message Cmd_Login_CheckSwitchZone_CS {
  uint32 iZoneId = 1;
  uint64 iAccountId = 2;
  SdpString sSessionKey = 3;
}

message Cmd_Login_CheckSwitchZone_SC {
  bool bCanSwitch = 1;
  repeated SdpUInt vDeleteZoneId = 2;
  uint32 iDelTime = 3;
}

message Cmd_Login_CheckUpgrade_CS {
  uint64 iAccountId = 1;
  SdpString sSessionKey = 2;
  SdpString sClientVersion = 3;
  uint32 iZoneId = 4;
  SdpString sChannel = 5;
}

message Cmd_Login_CheckUpgrade_SC {
  uint32 iZoneId = 1;
  SdpString sConnServer = 2;
  SdpString sClientVersion = 3;
  SdpString sForceVersion = 4;
  SdpString sOptionalVersion = 5;
  SdpString sResPatchVersion = 6;
  SdpString sResAllVersion = 7;
  SdpString sCdnVersion = 8;
  repeated SdpString vProxyConnServer = 9;
  uint32 iNetTestTimeOutMS = 10;
  SdpString sFaceCdnHost = 11;
  SdpString sFaceUploadHost = 12;
  SdpString sApkUpdateAddr = 13;
  SdpString sActivityPictureAddr = 14;
  repeated SdpString vCdnList = 15;
  repeated SdpString vEchoServer = 16;
  bool bMiniPatchOpen = 17;
  uint32 iMiniPatchVersion = 18;
  SdpString sMiniPatchPath = 19;
  bool bMiniPatchBackground = 20;
  bool bMiniPatchRestart = 21;
}

message Cmd_Login_GetBulletin_CS {
  uint32 iCurrId = 1;
  bool bHasAudit = 2;
  uint32 iLanguageId = 3;
  uint32 iZoneId = 4;
  uint32 iOSType = 5;
  SdpString sChannel = 6;
  SdpString sCountry = 7;
  SdpString sClientVersion = 8;
  uint32 iCurrUpdateId = 9;
  SdpString sZoneVersion = 10;
  uint32 iCurrMaintainId = 11;
  uint64 iAccountId = 12;
}

message Cmd_Login_GetBulletin_SC {
  repeated CmdBulletinInfo vInfo = 1;
  repeated CmdBulletinInfo vUpdateInfo = 2;
  repeated CmdBulletinInfo vMaintainInfo = 3;
}

message Cmd_Login_GetZone_CS {
  uint64 iAccountId = 1;
  SdpString sSessionKey = 2;
  SdpString sClientVersion = 3;
  SdpString sChannel = 4;
}

message Cmd_Login_GetZone_SC {
  repeated ZoneInfo vZoneList = 1;
  repeated RoleInfo vRoleList = 2;
}

message Cmd_Login_Register_CS {
  SdpString sAccount = 1;
  SdpString sPasswd = 2;
}

message Cmd_Login_UpdateDeviceToken_CS {
  uint64 iAccountId = 1;
  SdpString sSessionKey = 2;
  SdpString sDeviceToken = 3;
  SdpString sRegistrationId = 4;
}

message Cmd_Mail_DelAllRcvMail_SC {
  repeated SdpUInt vMailId = 1;
}

message Cmd_Mail_DelCollectMail_CS {
  uint32 iMailId = 1;
}

message Cmd_Mail_DelCollectMail_SC {
  uint32 iMailId = 1;
}

message Cmd_Mail_DelMail_CS {
  repeated SdpUInt vMailId = 1;
}

message Cmd_Mail_DelMail_SC {
  repeated SdpUInt vMailId = 1;
}

message Cmd_Mail_GetMail_SC {
  repeated MailData vMail = 1;
  repeated MailData vCollectMail = 2;
}

message Cmd_Mail_GetNewMail_SC {
  repeated MailData vMail = 1;
}

message Cmd_Mail_GetOneMail_CS {
  uint32 iMailId = 1;
}

message Cmd_Mail_GetOneMail_SC {
  MailData stMailData = 1;
}

message Cmd_Mail_RcvAllMailAttach_SC {
  repeated MailData vMail = 1;
  repeated SdpUInt vDelMailId = 2;
  repeated SdpUInt vCollectId = 3;
}

message Cmd_Mail_RcvMailAttach_CS {
  uint32 iMailId = 1;
}

message Cmd_Mail_RcvMailAttach_SC {
  uint32 iMailId = 1;
  bool bDel = 2;
  uint32 iRcvAttachTime = 3;
  repeated CmdIDNum vReward = 4;
  uint32 iOpenTime = 5;
  uint32 iDelTime = 6;
  bool bCollect = 7;
}

message Cmd_Mail_ReadMail_CS {
  uint32 iMailId = 1;
}

message Cmd_Mail_ReadMail_SC {
  uint32 iMailId = 1;
  uint32 iOpenTime = 2;
  uint32 iDelTime = 3;
  bool bCollect = 4;
}

message Cmd_Mail_ReportBadMail_CS {
  uint32 iMailId = 1;
  SdpString sReason = 2;
}

message Cmd_Mail_WriteMail_CS {
  SdpString sToUser = 1;
  SdpString sTitle = 2;
  SdpString sContent = 3;
  uint64 iToUserId = 4;
  uint32 iTemplateId = 5;
  map<SdpString, SdpString> mParam = 6;
  bool bEmergent = 7;
}

message Cmd_Mail_WriteMail_SC {
  bool bWriteOK = 1;
}

message Cmd_Merge_GetInit_CS {
  Cmd_Role_GetOtherProgress_CS stOtherProgress = 1;
}

message Cmd_Merge_GetInit_SC {
  Cmd_Role_GetOtherProgress_SC stOtherProgress = 1;
}

message Cmd_Merge_GetInitMust_SC {
  Cmd_Role_GetNotice_SC stNotice = 1;
  Cmd_Item_GetList_SC stItem = 2;
  Cmd_Hero_GetList_SC stHero = 3;
  map<SdpUInt, Cmd_Quest_GetList_SC> mQuest = 4;
  map<SdpUInt, Cmd_Stage_GetList_SC> mStage = 5;
  Cmd_ClientData_GetData_SC stClientData = 6;
  Cmd_Equip_GetList_SC stEquip = 7;
  Cmd_Form_GetPreset_SC stFormPreset = 8;
  Cmd_Guide_GetGuide_SC stGuide = 9;
  Cmd_Inherit_GetData_SC stInherit = 10;
  Cmd_Push_FightingStage stFighting = 11;
  Cmd_Attract_GetAttract_SC stAttract = 12;
  Cmd_Quest_GetInit_SC stQuestInit = 13;
  Cmd_Castle_GetStarRoom_SC stStarRoom = 14;
  Cmd_Ancient_GetData_SC stAncient = 15;
}

message Cmd_Misc_QueryPassStageArrange_CS {
  uint32 iStageType = 1;
  uint32 iStageID = 2;
  uint32 iArrangeType = 3;
  uint32 iTimeType = 4;
  bool bOrderAsc = 5;
}

message Cmd_Misc_QueryPassStageArrange_SC {
  repeated CmdRoleArrange vRoleArrange = 1;
}

message Cmd_Misc_ReportBug_CS {
  uint32 iChooseType = 1;
  SdpString sInputContent = 2;
  uint32 iPlayType = 3;
  uint32 iStageID = 4;
  uint64 iFightReportID = 5;
  SdpString sClientVersion = 6;
}

message Cmd_Misc_ReportBug_SC {
  uint32 iResult = 1;
}

message Cmd_Net_Connect_CS {
  uint64 iAccountId = 1;
  SdpString sSessionKey = 2;
  uint32 iZoneId = 3;
  uint32 iReconnectNum = 4;
  SdpString sClientVersion = 5;
  uint32 iActivityPushVersion = 6;
  uint32 iOSType = 7;
  SdpString sProxyAddr = 8;
  uint32 iEchoTimeMS = 9;
  SdpString sClientIp = 10;
  SdpString sChannel = 11;
  SdpString sDeviceId = 12;
}

message Cmd_Net_Connect_SC {
  SdpString sNewSessionKey = 1;
  uint32 iExchangeInterval = 2;
}

message Cmd_Net_Echo_CS {
  uint64 iTimeStampMS = 1;
}

message Cmd_Net_Echo_SC {
  uint64 iTimeStampMS = 1;
}

message Cmd_Net_Exchange_SessionKey_SC {
  SdpString sNewSessionKey = 1;
}

message Cmd_Net_NotifyPush_CS {
  uint32 iPushSeqId = 1;
}

message Cmd_Net_Ping_CS {
  uint64 iTimeStampMS = 1;
  uint64 iPingSeq = 2;
  uint64 iCurIndex = 3;
  uint64 iRoleId = 4;
  uint32 iZoneId = 5;
}

message Cmd_Net_Ping_SC {
  uint64 iTimeStampMS = 1;
  uint64 iPingSeq = 2;
  uint64 iCurIndex = 3;
  uint64 iRecvCnt = 4;
}

message Cmd_Net_SetSkeyExpireTime_CS {
  uint32 iExpireTime = 1;
}

message Cmd_Net_TestFrameDown_SC {
  uint32 iFrameId = 1;
  repeated SdpString vData = 2;
}

message Cmd_Net_TestFrameUp_CS {
  uint32 iFrameId = 1;
  SdpString sData = 2;
}

message Cmd_Notify_BattlePlayerInfo {
  repeated BattlePlayerInfo vPlayer = 1;
  uint32 iPVPType = 2;
  BattleExParam stExParam = 3;
}

message Cmd_Notify_BattleStartFailed {
  uint64 iBattleUid = 1;
}

message Cmd_Notify_EndPlay {
  int64 iWinCamp = 1;
}

message Cmd_Notify_MD5Failed {
  uint64 iUid = 1;
}

message Cmd_Notify_RCPlayerInfo {
  repeated BattlePlayerInfo vPlayer = 1;
  uint32 iPVPType = 2;
  BattleExParam stExParam = 3;
  uint32 iRandSeed = 4;
}

message Cmd_Notify_Reconnect {
  uint32 iStep = 1;
  uint32 iFrameNum = 2;
  uint32 iRandSeed = 3;
  uint32 iPVPType = 4;
}

message Cmd_Notify_StartLoading {
  repeated BattlePlayerInfo vPlayer = 1;
  BattleExParam stExParam = 2;
}

message Cmd_Notify_StartPlay {
  uint32 iRandSeed = 1;
  uint32 iEnvironment = 2;
  BattleExParam stExParam = 3;
}

message Cmd_Notify_StartSelect {
  repeated BattlePlayerInfo vPlayer = 1;
  uint32 iPVPType = 2;
  uint32 iMapID = 3;
  uint32 iTime = 4;
  BattleExParam stExParam = 5;
  uint32 iSelectHeroTime = 6;
  uint32 iFinalReadyTime = 7;
}

message Cmd_Notify_WaitReady {
  uint32 iLeftTime = 1;
  uint32 iPVPType = 2;
}

message Cmd_OriginalArena_BuyTicket_SC {
  uint32 iTicketBuyCount = 1;
}

message Cmd_OriginalArena_GetArenaReport_SC {
  repeated CmdOriginalArenaFightRecord vRecord = 1;
}

message Cmd_OriginalArena_GetEnemyDetail_CS {
  uint32 iEnemyId = 1;
}

message Cmd_OriginalArena_GetEnemyDetail_SC {
  CmdOriginalArenaEnemyDetail stEnemyDetail = 1;
}

message Cmd_OriginalArena_GetInit_SC {
  CmdOriginalArenaMineInfo stMine = 1;
  map<SdpUInt, CmdOriginalArenaEnemy> mEnemy = 2;
}

message Cmd_OriginalArena_RankList_CS {
  uint32 iBeginRank = 1;
  uint32 iEndRank = 2;
}

message Cmd_OriginalArena_RankList_SC {
  repeated CmdOriginalArenaRankItem vRankList = 1;
  uint32 iMyRank = 2;
  uint32 iMyScore = 3;
  uint32 iMyPower = 4;
}

message Cmd_OriginalArena_RefreshEnemy_CS {
  bool bFreeRefresh = 1;
}

message Cmd_OriginalArena_RefreshEnemy_SC {
  map<SdpUInt, CmdOriginalArenaEnemy> mEnemy = 1;
  uint32 iLastRefreshTime = 2;
}

message Cmd_OriginalArena_TakeSeasonReward_SC {
  repeated CmdIDNum vRewards = 1;
}

message Cmd_Ping_GetAllServerIp_SC {
  repeated ServerGroupInfo vSvrList = 1;
}

message Cmd_Ping_ReportPing_CS {
  map<SdpString, PingData> mPingData = 1;
  map<SdpString, SdpUInt> mBattlePing = 2;
  PlugReport stPlugReport = 3;
}

message Cmd_Ping_ReportPingNew_CS {
  map<SdpString, PingData> mPingData = 1;
}

message Cmd_Ping_ReportPingV2_CS {
  map<SdpString, PingData> mPingData = 1;
  map<SdpString, SdpUInt> mBattlePing = 2;
  PlugReport stPlugReport = 3;
}

message Cmd_Push_Activity_Change {
  uint32 iActivityId = 1;
  CmdActivityData stActivityData = 2;
  uint32 iPushVersion = 3;
}

message Cmd_Push_Activity_ChangeBatch {
  map<SdpUInt, CmdActivityData> mActivityData = 1;
  uint32 iPushVersion = 2;
}

message Cmd_Push_Activity_Remove {
  uint32 iActivityId = 1;
  uint32 iPushVersion = 2;
}

message Cmd_Push_Activity_RemoveBatch {
  repeated SdpUInt vActivityId = 1;
  uint32 iPushVersion = 2;
}

message Cmd_Push_Activity_Status {
  uint32 iActivityId = 1;
  SdpString sStatusDataSdp = 2;
  uint32 iPushVersion = 3;
}

message Cmd_Push_AddictTime {
  uint32 iOnlineTime = 1;
  uint32 iIncomePercent = 2;
}

message Cmd_Push_AddSameHero {
  uint32 iHeroId = 1;
  uint32 iBaseId = 2;
  CmdIDNum stItem = 3;
}

message Cmd_Push_AfkLevel {
  uint32 iAfkLevel = 1;
  uint32 iAfkExp = 2;
}

message Cmd_Push_Alliance_AddApplyMember {
  CmdAllianceApplyerData stRoleData = 1;
}

message Cmd_Push_Alliance_ApplyListClear {
  repeated CmdAllianceApplyerData vApplyList = 1;
}

message Cmd_Push_Alliance_Battle_Boss {
  uint32 iActivityId = 1;
  uint32 iRound = 2;
  uint32 iBossId = 3;
  uint64 iDamage = 4;
  uint64 iRealDamage = 5;
  uint64 iBossHp = 6;
  bool bKill = 7;
  uint32 iChallengeTimes = 8;
}

message Cmd_Push_Alliance_BeInvite {
  uint64 iAllianceId = 1;
  PlayerIDType stFromRole = 2;
  uint32 iPost = 3;
  uint32 iInviteTime = 4;
}

message Cmd_Push_Alliance_BulletinChange {
  SdpString sBulletin = 1;
}

message Cmd_Push_Alliance_DelApplyMember {
  PlayerIDType stRoleId = 1;
  bool bHaveNewApply = 2;
}

message Cmd_Push_Alliance_DelRoleApply {
  uint64 iAllianceId = 1;
}

message Cmd_Push_Alliance_Destroy {
  uint64 iAllianceId = 1;
}

message Cmd_Push_Alliance_Levelup {
  uint32 iCurrLevel = 1;
}

message Cmd_Push_Alliance_MemberJoin {
  CmdAllianceMemberData stMemberData = 1;
  uint64 iAllianceId = 2;
  SdpString sAllianceName = 3;
}

message Cmd_Push_Alliance_MemberLeave {
  PlayerIDType stRoleId = 1;
  uint64 iAllianceId = 2;
  bool bKick = 3;
}

message Cmd_Push_Alliance_PostChange {
  PlayerIDType stRoleId = 1;
  uint32 iPost = 2;
}

message Cmd_Push_Alliance_SetDevelopment {
  uint32 iCurrDevelopment = 1;
}

message Cmd_Push_Alliance_SetMemberActive {
  PlayerIDType stRoleId = 1;
  uint32 iAllianceActive = 2;
  uint32 iActive = 3;
}

message Cmd_Push_Alliance_SettingChange {
  repeated SdpUInt vChangeSettingsType = 1;
  SdpString sName = 2;
  uint32 iBadgeId = 3;
  uint32 iJoinType = 4;
  uint32 iJoinLevel = 5;
  uint32 iLanguageId = 6;
  SdpString sRecruit = 7;
  SdpString sBulletin = 8;
}

message Cmd_Push_Alliance_SetTotalActive {
  uint32 iTotalActive = 1;
}

message Cmd_Push_Alliance_Transfer {
  PlayerIDType stOldMaster = 1;
  PlayerIDType stNewMaster = 2;
  bool bAuto = 3;
  uint32 iOldMasterPost = 4;
}

message Cmd_Push_AllianceBattle_NewRound {
  uint32 iActivityId = 1;
  uint32 iBattleId = 2;
  uint32 iRound = 3;
}

message Cmd_Push_AllianceMemberOffline {
  PlayerIDType stRoleId = 1;
}

message Cmd_Push_AllianceMemberOnline {
  PlayerIDType stRoleId = 1;
}

message Cmd_Push_Ancient_Quest {
  repeated CmdQuest vQuest = 1;
}

message Cmd_Push_BaseStoreChapter {
  CmdBaseStoreChapter stChapter = 1;
}

message Cmd_Push_BaseStoreChapterReward {
  repeated CmdIDNum vFreeReward = 1;
  repeated CmdIDNum vPayReward = 2;
}

message Cmd_Push_BaseStoreMonthlyCard {
  CmdBaseStoreMonthlyCard stMonthlyCard = 1;
}

message Cmd_Push_BaseStoreMonthlyCardReward {
  repeated Cmd_Push_BaseStoreMonthlyCardRewardData vMonthlyCardReward = 1;
}

message Cmd_Push_BaseStoreMonthlyCardRewardData {
  uint32 iCardId = 1;
  repeated CmdIDNum vReward = 2;
  uint32 iExpireTime = 3;
}

message Cmd_Push_BeginMultiFightTest {
  CmdMultiFightTestInfo stMultiFightTestInfo = 1;
  CmdFightVerifyInput stInput = 2;
}

message Cmd_Push_Castle_AddDispatch {
  map<SdpUInt, CmdDispatchEvent> mEvent = 1;
}

message Cmd_Push_Castle_AddPlaceStory {
  map<SdpUInt, SdpUInt> mAddStory = 1;
}

message Cmd_Push_Castle_StatueLevel {
  uint32 iOldLevel = 1;
  uint32 iNewLevel = 2;
}

message Cmd_Push_Chat {
  CmdChatInfo stChatInfo = 1;
}

message Cmd_Push_Chat_CreateNewPersonalChat {
  CmdPersonalChatInitData stPersonalChat = 1;
}

message Cmd_Push_Chat_DelPersonalChat {
  PlayerIDType stRoleId = 1;
}

message Cmd_Push_Chat_GroupAllMsg {
  uint32 iGroupId = 1;
  uint32 iMsgSeq = 2;
  uint32 iEventSeq = 3;
  repeated SdpString vMsg = 4;
  repeated SdpString vEvent = 5;
}

message Cmd_Push_Chat_PersonalAllMsg {
  repeated SdpString vMsg = 1;
}

message Cmd_Push_ChatChange {
  CmdChatInfo stChatInfo = 1;
}

message Cmd_Push_ChatGroupLeave {
  uint64 iGroupId = 1;
  repeated SdpULong vUid = 2;
}

message Cmd_Push_ChatGroupNew {
  CmdChatGroup stGroup = 1;
}

message Cmd_Push_ChatGroupNewMember {
  uint64 iGroupId = 1;
  repeated CmdRoleSimpleInfo vNewMember = 2;
}

message Cmd_Push_ChatGroupRemove {
  uint64 iGroupId = 1;
}

message Cmd_Push_ChatGroupSetName {
  uint64 iGroupId = 1;
  SdpString sName = 2;
}

message Cmd_Push_CrossChatGroup_Dismiss {
  uint64 iGroupId = 1;
}

message Cmd_Push_CrossChatGroup_Join {
  GroupChatInfo stGroupInfo = 1;
}

message Cmd_Push_CrossChatGroup_Leave {
  uint64 iGroupId = 1;
  PlayerIDType stPlayer = 2;
}

message Cmd_Push_DailyRefresh {
  bool bWeekChange = 1;
}

message Cmd_Push_DelEquip {
  repeated SdpULong vEquipUid = 1;
}

message Cmd_Push_DelHero {
  repeated SdpUInt vHeroId = 1;
}

message Cmd_Push_DelNotice {
  repeated SdpUInt vDel = 1;
}

message Cmd_Push_DungeonChapterMop {
  uint32 iTimes = 1;
  map<SdpUInt, SdpUInt> mRotationLevelSubType = 2;
}

message Cmd_Push_EnterBattle {
  uint32 iRet = 1;
  uint64 iBattleUid = 2;
  SdpString sBattleIp = 3;
  uint32 iBattlePort = 4;
  SdpString sBattleProxy = 5;
  uint32 iProxyId = 6;
  uint32 iProxyPing = 7;
  SdpString sBattleConn = 8;
  uint32 iBattleServerId = 9;
  uint32 iMatchType = 10;
}

message Cmd_Push_EnterMatch {
  uint32 iMatchType = 1;
}

message Cmd_Push_EquipList {
  repeated CmdEquip vEquipList = 1;
}

message Cmd_Push_Error {
  map<SdpString, SdpString> mParam = 1;
}

message Cmd_Push_FightingStage {
  uint32 iStageType = 1;
  uint32 iSubType = 2;
  uint32 iStageId = 3;
  uint32 iCurArea = 4;
  CmdFightPassthrough stPassthrough = 5;
  repeated SdpUInt vFinishArea = 6;
}

message Cmd_Push_FormPower {
  map<SdpUInt, SdpUInt> mPresetPower = 1;
  map<SdpUInt, XDictionary<SdpUInt, SdpUInt>> mFormPower = 2;
}

message Cmd_Push_Friend_AddFriend {
  CmdFriendInfo stFriendInfo = 1;
  uint32 iCurFriendNum = 2;
}

message Cmd_Push_Friend_AddFriendRequest {
  CmdFriendInfo stRequestInfo = 1;
}

message Cmd_Push_Friend_DelFriend {
  uint64 iRoleUid = 1;
  PlayerIDType stRoleId = 2;
}

message Cmd_Push_Friend_RecieveHeart {
  uint64 iRoleUid = 1;
  PlayerIDType stRoleId = 2;
}

message Cmd_Push_FriendOffline {
  uint64 iRoleUid = 1;
  PlayerIDType stRoleId = 2;
}

message Cmd_Push_FriendOnline {
  uint64 iRoleUid = 1;
  PlayerIDType stRoleId = 2;
}

message Cmd_Push_GetEmoji {
  repeated SdpUInt vEmojiId = 1;
}

message Cmd_Push_HasNewFace {
  repeated SdpUInt vNewFace = 1;
  repeated SdpUInt vAllFace = 2;
}

message Cmd_Push_Hero_AddFashion {
  uint32 iFashionId = 1;
  bool bSame = 2;
}

message Cmd_Push_HeroAttract {
  CmdHeroAttract stHeroAttract = 1;
}

message Cmd_Push_HeroList {
  repeated CmdHeroData vHeroData = 1;
}

message Cmd_Push_Hunting_Boss {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  uint64 iDamage = 3;
  uint64 iCurDamage = 4;
  CmdHuntingBoss stBoss = 5;
}

message Cmd_Push_Hunting_RankUpdate {
  uint32 iActivityId = 1;
  uint32 iGroupId = 2;
  uint32 iBossId = 3;
  uint32 iDamage = 4;
  uint32 iNewRank = 5;
  uint32 iRankSize = 6;
}

message Cmd_Push_IAPDelivery {
  SdpString sProductId = 1;
  uint32 iLastTotalRecharge = 2;
  uint32 iCurrentTotalRecharge = 3;
  repeated CmdIDNum vItem = 4;
  uint32 iSubProductId = 5;
  uint32 iReceiptType = 6;
}

message Cmd_Push_IAPMonitor {
  SdpString sProductId = 1;
  CmdStoreIAPMonitor stIAPMonitor = 2;
}

message Cmd_Push_InheritGrid {
  map<SdpUInt, CmdInheritGrid> mGrid = 1;
}

message Cmd_Push_InheritLevel {
  uint32 iLevel = 1;
  repeated SdpUInt vMainHero = 2;
  bool bEvolve = 3;
}

message Cmd_Push_JoinAllianceCount {
  uint32 iJoinAllianceCount = 1;
  uint32 iLastLeaveAllianceTime = 2;
}

message Cmd_Push_KickPlayer {
  uint32 iReason = 1;
}

message Cmd_Push_Lamia_Quest {
  uint32 iActId = 1;
  repeated CmdQuest vQuest = 2;
}

message Cmd_Push_Lamia_Stage {
  uint32 iActId = 1;
  uint32 iSubActId = 2;
  LamiaStage stStage = 3;
}

message Cmd_Push_LegacyData {
  CmdLegacy stLegacy = 1;
}

message Cmd_Push_LegacyStage {
  repeated SdpUInt vGameLevelId = 1;
}

message Cmd_Push_Letter_Quest {
  repeated CmdQuest vQuest = 1;
}

message Cmd_Push_NewActivityPickupGift {
  uint32 iActivityId = 1;
  uint32 iGiftId = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_Push_NewGift {
  uint32 iActivityID = 1;
  uint32 iGroupIndex = 2;
  repeated SdpUInt vGiftIndex = 3;
  uint32 iExpireTime = 4;
  uint32 iSubProductID = 5;
  uint32 iStoreType = 6;
  uint32 iTriggerParam = 7;
  uint32 iTotalRecharge = 8;
}

message Cmd_Push_NewMailNotify {
  uint32 iMailId = 1;
  uint32 iType = 2;
  uint32 iTemplateId = 3;
  SdpString sTitle = 4;
  map<SdpString, SdpString> mTitleParam = 5;
}

message Cmd_Push_NewRankTarget {
  uint32 iRankType = 1;
  uint32 iTargetId = 2;
}

message Cmd_Push_Notice {
  repeated CmdNoticeData vNoticeData = 1;
}

message Cmd_Push_Notify_AddGroupInfo {
  ChatGroupInfo stGroupInfo = 1;
}

message Cmd_Push_Notify_AllianceChat {
  AllianceChatInfo stChatInfo = 1;
}

message Cmd_Push_Notify_AllianceConfirm {
  uint64 iAllianceId = 1;
}

message Cmd_Push_Notify_Chat {
  PlayerChatInfo stChatInfo = 1;
  uint32 iChatLanguage = 2;
  uint32 iChatTime = 3;
}

message Cmd_Push_Notify_FBFace {
  SdpString sFBFace = 1;
}

message Cmd_Push_Notify_GroupEvent {
  uint64 iGroupId = 1;
  uint32 iEventTime = 2;
  uint32 iEventType = 3;
  PlayerIDType stAskerId = 4;
  repeated PlayerIDType vChangeMembers = 5;
  SdpString sParam1 = 6;
  uint64 iSeq = 7;
}

message Cmd_Push_Notify_HuntingRankReward {
  SdpString sRewardData = 1;
}

message Cmd_Push_Notify_OriginalArenaReward {
  uint32 iType = 1;
  uint32 iSeasonId = 2;
  uint32 iGroupId = 3;
  repeated CmdOriginalArenaRewardItem vRewardItem = 4;
  uint32 iCurDay = 5;
}

message Cmd_Push_Notify_PersonalChat {
  PersonalChatInfo stChatInfo = 1;
  PlayerIDType stFromRoleId = 2;
}

message Cmd_Push_Notify_SoloRaidReward {
  SdpString sRewardData = 1;
}

message Cmd_Push_NotifyAllianceMail {
  SdpString sContent = 1;
  SdpString sSenderName = 2;
  PlayerIDType stSender = 3;
  bool bSys = 4;
  uint32 iTemplateId = 5;
  map<SdpString, SdpString> mTemplateParam = 6;
  repeated CmdIDNum vItems = 7;
}

message Cmd_Push_OriginalArenaMineInfo {
  uint32 iSeasonId = 1;
  uint32 iGroupId = 2;
  uint32 iRank = 3;
  uint32 iScore = 4;
  uint32 iOldRank = 5;
  uint32 iOldScore = 6;
  uint32 iTicketFreeCount = 7;
}

message Cmd_Push_PassStage {
  uint32 iStageType = 1;
  uint32 iStageSubType = 2;
  uint32 iStageId = 3;
  uint32 iFirstFinishTime = 4;
  uint32 iFinishNum = 5;
  uint32 iLastPassStageId = 6;
  uint32 iScore = 7;
  uint32 iTopScore = 8;
  uint32 iDamage = 9;
  uint32 iTopDamage = 10;
}

message Cmd_Push_Quest_AchieveScore {
  uint32 iScore = 1;
  uint32 iAddScore = 2;
  uint32 iQuestType = 3;
}

message Cmd_Push_ReplaceArena_BattleEndUpdate {
  uint32 iRet = 1;
  uint32 iRank = 2;
  uint32 iOldRank = 3;
  repeated SdpUInt vResult = 4;
  uint32 iFreeFightTimes = 5;
  PlayerIDType stEnemyId = 6;
  CmdReplaceArenaAfk stAfk = 7;
  uint32 iReplaceArenaPlaySeason = 8;
}

message Cmd_Push_ReplaceArena_NotifySeasonReward {
  uint32 iSeasonId = 1;
  uint32 iGroupId = 2;
  repeated CmdReplaceArenaSeasonReward vReward = 3;
}

message Cmd_Push_ReplaceArena_RankChange {
  uint32 iRank = 1;
  uint32 iOldRank = 2;
  PlayerIDType stEnemyId = 3;
  bool bWin = 4;
  CmdReplaceArenaAfk stAfk = 5;
}

message Cmd_Push_Rogue_FinishChallenge {
  uint32 iStageId = 1;
  uint32 iLevelId = 2;
  CmdRogueStage stStage = 3;
  uint32 iCurStage = 4;
  repeated SdpUInt vNewHandbook = 5;
  uint32 iScore = 6;
  uint32 iRewardLevel = 7;
  uint32 iDailyReward = 8;
  bool bPass = 9;
  bool bFirstPass = 10;
}

message Cmd_Push_RoomChat {
  SdpString sSenderName = 1;
  SdpString sMessage = 2;
}

message Cmd_Push_RoomDiscard {
  uint64 iRoomId = 1;
}

message Cmd_Push_RoomEnter {
  PlayerIDType stPlayer = 1;
  MTTDProto.RoomInfo stRoom = 2;
}

message Cmd_Push_RoomInvite {
  uint32 iMatchType = 1;
  SdpString sName = 2;
  uint64 iRoomId = 3;
  uint32 iRet = 4;
}

message Cmd_Push_RoomInviteResult {
  uint32 iRet = 1;
  SdpString sName = 2;
}

message Cmd_Push_RoomKick {
  uint64 iRoomId = 1;
  PlayerIDType stPlayer = 2;
}

message Cmd_Push_RoomLeave {
  PlayerIDType stPlayer = 1;
  MTTDProto.RoomInfo stRoom = 2;
  SdpString sLeaveName = 3;
}

message Cmd_Push_SetAllianceMailSendNum {
  uint32 iMailSendNum = 1;
}

message Cmd_Push_SetHeroData {
  CmdHeroData stCmdHeroData = 1;
}

message Cmd_Push_SetItem {
  repeated CmdItemData vItem = 1;
}

message Cmd_Push_SetLevel {
  uint32 iLevel = 1;
  repeated CmdIDNum vItem = 2;
}

message Cmd_Push_SetQuestDataBatch {
  repeated CmdQuest vCmdQuestInfo = 1;
  uint32 iMainGroup = 2;
}

message Cmd_Push_SetSpecialItem {
  uint32 iID = 1;
  uint32 iNum = 2;
}

message Cmd_Push_SetUniqueItem {
  uint32 iItemId = 1;
  uint32 iExpireTime = 2;
  bool bDelete = 3;
}

message Cmd_Push_SoloRaid_CurRaid {
  CmdSoloRaidChallenge stCurRaid = 1;
}

message Cmd_Push_SoloRaid_FinishRaid {
  CmdSoloRaid stSoloRaid = 1;
  bool bPass = 2;
  bool bFirstPass = 3;
  repeated CmdIDNum vReward = 4;
  uint32 iNormalTimes = 5;
  uint32 iHardTimes = 6;
}

message Cmd_Push_SoloRaid_RankUpdate {
  uint32 iActivityId = 1;
  uint64 iDamage = 2;
  uint32 iOldRank = 3;
  uint32 iNewRank = 4;
  uint32 iRankSize = 5;
  uint32 iRaidId = 6;
}

message Cmd_Push_StageTimes {
  uint32 iType = 1;
  uint32 iSubType = 2;
  uint32 iTimes = 3;
}

message Cmd_Push_SurveyStatus {
  uint32 iActivityId = 1;
  uint32 iIndexId = 2;
  uint32 iStatus = 3;
}

message Cmd_Push_SystemOpen {
  repeated SdpUInt vSystemId = 1;
}

message Cmd_Push_TotalRecharge {
  uint32 iTotalRecharge = 1;
  uint32 iDailyRMBRecharge = 2;
  uint32 iTodayRechargeNum = 3;
}

message Cmd_Push_TotalRechargeDiamond {
  uint32 iTotalRechargeDiamond = 1;
}

message Cmd_Push_UploadFlog {
  uint32 iLogLevel = 1;
}

message Cmd_Push_Vip {
  uint32 iVipLevel = 1;
  uint32 iVipExp = 2;
  uint32 iTotalVipLevel = 3;
  uint32 iFreeVipExp = 4;
}

message Cmd_Push_Warning {
  int64 iErrorCode = 1;
}

message Cmd_Quest_FinishResourceQuest_CS {
  uint32 iQuestId = 1;
}

message Cmd_Quest_FinishResourceQuest_SC {
  uint32 iQuestId = 1;
}

message Cmd_Quest_GetInit_SC {
  uint32 iMainGroup = 1;
  repeated SdpUInt vOverMainGroup = 2;
  uint32 iAchieveScore = 3;
  repeated SdpUInt vTakenAchieveReward = 4;
  uint32 iRogueAchieveScore = 5;
  repeated SdpUInt vTakenRogueAchieveReward = 6;
}

message Cmd_Quest_GetList_CS {
  uint32 iQuestType = 1;
}

message Cmd_Quest_GetList_SC {
  uint32 iQuestType = 1;
  repeated CmdQuest vQuest = 2;
  repeated SdpUInt vOver = 3;
  uint32 iTakenActiveReward = 4;
}

message Cmd_Quest_TakeAchieveReward_CS {
  uint32 iRewardId = 1;
  repeated SdpUInt vQuestId = 2;
  uint32 iQuestType = 3;
}

message Cmd_Quest_TakeAchieveReward_SC {
  uint32 iRewardId = 1;
  repeated CmdIDNum vReward = 2;
  uint32 iQuestType = 3;
}

message Cmd_Quest_TakeActiveReward_CS {
  uint32 iQuestType = 1;
}

message Cmd_Quest_TakeActiveReward_SC {
  uint32 iQuestType = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Quest_TakeMainGroupReward_SC {
  uint32 iNewMainGroup = 1;
  repeated CmdIDNum vReward = 2;
  uint32 iOldMainGroup = 3;
}

message Cmd_Quest_TakeReward_CS {
  uint32 iQuestType = 1;
  repeated SdpUInt vQuestId = 2;
}

message Cmd_Quest_TakeReward_SC {
  uint32 iQuestType = 1;
  repeated SdpUInt vQuestId = 2;
  repeated CmdIDNum vReward = 3;
  repeated CmdIDNum vActiveReward = 4;
}

message Cmd_Rank_DrawTargetReward_CS {
  uint32 iRankType = 1;
  repeated SdpUInt vTargetId = 2;
}

message Cmd_Rank_DrawTargetReward_SC {
  repeated CmdIDNum vReward = 1;
  map<SdpUInt, repeated SdpUInt> mvDrawnTargetReward = 2;
}

message Cmd_Rank_GetList_SC {
  map<SdpUInt, CmdRankRoleItem> mRankTopRole = 1;
  map<SdpUInt, repeated SdpUInt> mvDrawnTargetReward = 2;
  map<SdpUInt, SdpUInt> mCollectRankNum = 3;
  map<SdpUInt, XDictionary<SdpUInt, CmdRankRoleItem>> mmTargetRankTopRole = 4;
}

message Cmd_Rank_GetRank_CS {
  uint32 iRankType = 1;
}

message Cmd_Rank_GetRank_SC {
  repeated CmdRankRoleItem vRankRole = 1;
  uint32 iSelfValue = 2;
}

message Cmd_Rank_GetRole_CS {
  uint32 iRankType = 1;
  uint64 iRoleId = 2;
}

message Cmd_Rank_GetRole_SC {
  uint32 iPower = 1;
  repeated CmdHeroBriefData vHero = 2;
}

message Cmd_Rank_GetTargetRank_CS {
  uint32 iRankType = 1;
  uint32 iTargetId = 2;
}

message Cmd_Rank_GetTargetRank_SC {
  repeated CmdRankRoleItem vRankRole = 1;
}

message Cmd_Recommend_GetInit_SC {
  repeated CmdRecommendHero vHero = 1;
  map<SdpUInt, CmdRecommendFormFlow> mFlow = 2;
  uint32 iNextRefreshTime = 3;
}

message Cmd_ReplaceArena_GetBattleRecord_SC {
  repeated CmdReplaceArenaBattleRecord vBattleRecord = 1;
}

message Cmd_ReplaceArena_GetEnemyDetail_CS {
  uint32 iEnemyIndex = 1;
}

message Cmd_ReplaceArena_GetEnemyDetail_SC {
  CmdReplaceArenaEnemyDetail stEnemyDetail = 1;
}

message Cmd_ReplaceArena_GetInit_SC {
  CmdReplaceArenaMineInfo stMine = 1;
  map<SdpUInt, CmdReplaceArenaRankItem> mEnemy = 2;
  CmdReplaceArenaAfk stAfk = 3;
}

message Cmd_ReplaceArena_GetRankList_CS {
  uint32 iRankType = 1;
  uint32 iBeginRank = 2;
  uint32 iEndRank = 3;
}

message Cmd_ReplaceArena_GetRankList_SC {
  uint32 iRankType = 1;
  repeated CmdReplaceArenaRankItem vRankList = 2;
  uint32 iMyRank = 3;
  uint32 iMyScore = 4;
}

message Cmd_ReplaceArena_RefreshEnemy_SC {
  uint32 iLastRefreshTime = 1;
  map<SdpUInt, CmdReplaceArenaRankItem> mEnemy = 2;
}

message Cmd_ReplaceArena_SeeAfk_SC {
  CmdReplaceArenaAfk stAfk = 1;
}

message Cmd_ReplaceArena_TakeAfk_SC {
  CmdReplaceArenaAfk stAfk = 1;
  repeated CmdIDNum vReward = 2;
}

message Cmd_Rogue_GetData_SC {
  CmdRogue stRogue = 1;
}

message Cmd_Rogue_TakeReward_SC {
  uint32 iTakenReward = 1;
  repeated CmdIDNum vReward = 2;
  repeated CmdIDNum vActivityReward = 3;
}

message Cmd_Rogue_UnlockTech_CS {
  uint32 iTechId = 1;
}

message Cmd_Rogue_UnlockTech_SC {
  uint32 iTechId = 1;
  uint32 iUnlockTime = 2;
}

message Cmd_Role_BindAccount_CS {
  SdpString sAccountName = 1;
  SdpString sAuthKey = 2;
}

message Cmd_Role_BindAccount_SC {
  CmdAccountInfo stAccountInfo = 1;
}

message Cmd_Role_CheckSwitchZone_CS {
  uint32 iZoneId = 1;
}

message Cmd_Role_CheckSwitchZone_SC {
  bool bCanSwitch = 1;
  repeated SdpUInt vDeleteZoneId = 2;
  uint32 iDelTime = 3;
}

message Cmd_Role_DisplayGender_CS {
  bool bDisplay = 1;
}

message Cmd_Role_DisplayVip_CS {
  bool bDisplay = 1;
}

message Cmd_Role_DisplayVip_SC {
  bool bDisplay = 1;
}

message Cmd_Role_ExchangeCDKey_CS {
  SdpString sCDKey = 1;
}

message Cmd_Role_GetBindAccount_CS {
  SdpString sAccountName = 1;
  SdpString sAuthKey = 2;
}

message Cmd_Role_GetBindAccount_SC {
  uint64 iAccountId = 1;
  repeated CmdAccountInfo vAccountInfo = 2;
  repeated RoleInfo vRoleList = 3;
  repeated ZoneInfo vZoneList = 4;
}

message Cmd_Role_GetCirculation_SC {
  map<SdpUInt, CmdCirculationItem> mCirculationItem = 1;
}

message Cmd_Role_GetFBFace_SC {
  SdpString sFBFace = 1;
  SdpString sFBId = 2;
}

message Cmd_Role_GetLuaRepair_CS {
  uint32 iCurMaxRepairID = 1;
}

message Cmd_Role_GetLuaRepair_SC {
  map<SdpUInt, SdpUInt> mLuaIDSeverity = 1;
}

message Cmd_Role_GetNotice_SC {
  repeated CmdNoticeData vNoticeData = 1;
}

message Cmd_Role_GetOtherProgress_CS {
  uint32 iNeedNum = 1;
}

message Cmd_Role_GetOtherProgress_SC {
  repeated CmdRoleSimpleInfo vOthers = 1;
}

message Cmd_Role_GetRoleInfoBatch_CS {
  repeated PlayerIDType vRoleId = 1;
}

message Cmd_Role_GetRoleInfoBatch_SC {
  repeated CmdRoleSimpleInfo vRoleSimpleInfo = 1;
}

message Cmd_Role_GetSurveyToken_SC {
  SdpString sToken = 1;
}

message Cmd_Role_GetUserToken_CS {
  uint32 iTokenType = 1;
  SdpString sModule = 2;
  SdpString sCallBackId = 3;
}

message Cmd_Role_GetUserToken_SC {
  uint32 iTokenType = 1;
  SdpString sModule = 2;
  SdpString sCallBackId = 3;
  SdpString sUserToken = 4;
}

message Cmd_Role_GetZoneList_SC {
  repeated ZoneInfo vZoneList = 1;
  repeated RoleInfo vRoleList = 2;
  SdpString sErrMsg = 3;
}

message Cmd_Role_Init_CS {
  SdpString sChannel = 1;
  SdpString sDevice = 2;
  SdpString sLuaCommMD5 = 3;
  uint32 iOSType = 4;
  uint32 iAccType = 5;
  SdpString sAccount = 6;
  SdpString sOperator = 7;
  SdpString sNetType = 8;
  SdpString sOSLanguage = 9;
  SdpString sClientVersion = 10;
  uint32 iLanguageId = 11;
  SdpString sUserIp = 12;
  SdpString sIDFA = 13;
  SdpString sCokUid = 14;
  SdpString sDeviceId = 15;
  SdpString sGAID = 16;
  SdpString sCertificateSha1 = 17;
  SdpString sCertificateSubject = 18;
  SdpString sPackageId = 19;
  SdpString sOSCountry = 20;
  uint32 iThirdRealNameAuth = 21;
  uint32 iClientCpuHz = 22;
  uint32 iClientMemory = 23;
  SdpString sClientOsVersion = 24;
  SdpString sInitFBName = 25;
  SdpString sInitFBFaceId = 26;
  SdpString sState = 27;
  bool bInWhiteList = 28;
  bool bSimulator = 29;
  SdpString sSimulatorUid = 30;
  SdpString sSimulatorBrand = 31;
  bool bWholePackage = 32;
  SdpString sOaId = 33;
  SdpString sDrmId = 34;
  SdpString sAndroidId = 35;
  SdpString sIDFV = 36;
  SdpString sAreaId = 37;
  SdpString sTagId = 38;
}

message Cmd_Role_Init_SC {
  uint64 iUid = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  uint32 iDebugFlag = 4;
  uint32 iArenaCoin = 5;
  uint32 iLastArenaBeAttacked = 6;
  uint64 iAllianceId = 7;
  uint32 iJoinAllianceTime = 8;
  uint32 iAllianceLevel = 9;
  SdpString sAllianceName = 10;
  uint32 iVipLevel = 11;
  uint32 iVipExp = 12;
  uint32 iCountryId = 13;
  CmdServerConfigData stServerConfigData = 14;
  bool bLuaCommMD5Mismatch = 15;
  uint32 iLastSetNameTime = 16;
  bool bDisplayVip = 17;
  uint32 iPublishTime = 18;
  uint32 iRoleRegTime = 19;
  uint32 iLastLoginTime = 20;
  uint32 iThisLoginTime = 21;
  uint32 iTotalRecharge = 22;
  uint32 iTotalRechargeDiamond = 23;
  map<SdpUInt, SdpUInt> mPushOption = 24;
  repeated CmdRepairStr vRepairStr = 25;
  bool bOnlyCanRecharge = 26;
  SdpString sFacePath = 27;
  map<SdpString, SdpString> mLuaCodeRepair = 28;
  bool bNewRole = 29;
  map<SdpUInt, SdpUInt> mSpecialItem = 30;
  uint32 iGender = 31;
  uint32 iBirthMonth = 32;
  uint32 iBirthDay = 33;
  bool bHasEvlaMessage = 34;
  bool bDisplayGender = 35;
  bool bClaimedBindAccountReward = 36;
  bool bHasSetRoleName = 37;
  uint32 iNextWatchAdTime = 38;
  bool bHasWelfare = 39;
  bool bArenaAwardRed = 40;
  SdpString sFBFaceId = 41;
  uint32 iSetCountryTime = 42;
  uint32 iTotalVipLevel = 43;
  uint32 iFreeVipExp = 44;
  uint32 iTotalLoginDays = 45;
  uint32 iTodayRechargeNum = 46;
  SdpString sCreateRoleCountry = 47;
  uint32 iDeepLinkType = 48;
  uint32 iGroupId = 49;
  uint32 iDistrictId = 50;
  bool bTestServer = 51;
  bool bAcceptFriend = 52;
  uint32 iCreateRoleLanguageId = 53;
  SdpString sLoginRoleCountry = 54;
  uint32 iMaxLuaCodeRepairID = 55;
  uint32 iHeadId = 56;
  uint32 iHeadFrameId = 57;
  uint32 iHeadFrameExpireTime = 58;
  uint32 iShowBackgroundId = 59;
  repeated CmdMainBackground vMainBackground = 60;
  uint32 iMainBackgroundIndex = 61;
  SdpString sSignature = 62;
  map<SdpUShort, SdpUShort> mABTest = 63;
  uint32 iShowBackgroundExpireTime = 64;
}

message Cmd_Role_PushNoticeSelect_CS {
  uint32 iNoticeType = 1;
  uint32 iSelect = 2;
}

message Cmd_Role_RandomName_SC {
  repeated SdpString vName = 1;
}

message Cmd_Role_Report_CS {
  uint32 iType = 1;
  uint64 iTargetUid = 2;
  uint32 iZoneId = 3;
  repeated SdpUInt iReportReasonType = 4;
  SdpString sReason = 5;
}

message Cmd_Role_ReportFace_CS {
  uint64 iUid = 1;
}

message Cmd_Role_ReportPushClick_CS {
  SdpString sPushTaskId = 1;
}

message Cmd_Role_SeeBusinessCard_CS {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
}

message Cmd_Role_SeeBusinessCard_SC {
  CmdRoleBusinessCard stRoleBusinessCard = 1;
}

message Cmd_Role_SeeOther_CS {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
}

message Cmd_Role_SeeOther_SC {
  CmdRoleSimpleInfo stRoleSimpleInfo = 1;
}

message Cmd_Role_ServerTime_SC {
  uint64 iServerTimeMS = 1;
  int64 iTimeGmtOff = 2;
  uint32 iNextFreshTime = 3;
}

message Cmd_Role_SetAcceptRequestFriend_CS {
  bool bAccept = 1;
}

message Cmd_Role_SetAcceptRequestFriend_SC {
  bool bAccept = 1;
}

message Cmd_Role_SetBirthDay_CS {
  uint32 iMonth = 1;
  uint32 iDay = 2;
}

message Cmd_Role_SetCard_CS {
  uint32 iHeadId = 1;
  uint32 iHeadFrameId = 2;
  uint32 iShowBackgroundId = 3;
}

message Cmd_Role_SetCard_SC {
  uint32 iHeadId = 1;
  uint32 iHeadFrameId = 2;
  uint32 iShowBackgroundId = 3;
}

message Cmd_Role_SetCountryId_CS {
  uint32 iCountryId = 1;
}

message Cmd_Role_SetCountryId_SC {
  uint32 iCountryId = 1;
  uint32 iSetCountryTime = 2;
}

message Cmd_Role_SetGender_CS {
  uint32 iGender = 1;
}

message Cmd_Role_SetHead_CS {
  uint32 iHeadId = 1;
}

message Cmd_Role_SetHead_SC {
  uint32 iHeadId = 1;
}

message Cmd_Role_SetHeadFrame_CS {
  uint32 iHeadFrameId = 1;
}

message Cmd_Role_SetHeadFrame_SC {
  uint32 iHeadFrameId = 1;
}

message Cmd_Role_SetMainBackground_CS {
  repeated CmdMainBackground vMainBackground = 1;
}

message Cmd_Role_SetMainBackground_SC {
  repeated CmdMainBackground vMainBackground = 1;
  uint32 iIndex = 2;
}

message Cmd_Role_SetMainBackgroundIndex_CS {
  uint32 iIndex = 1;
}

message Cmd_Role_SetMainBackgroundIndex_SC {
  uint32 iIndex = 1;
}

message Cmd_Role_SetName_CS {
  SdpString sName = 1;
  bool bCheckNameOnly = 2;
}

message Cmd_Role_SetName_SC {
  bool bCheckNameOnly = 1;
  SdpString sName = 2;
  uint32 iLastSetNameTime = 3;
}

message Cmd_Role_SetPushOption_CS {
  map<SdpUInt, SdpUInt> mPushOption = 1;
}

message Cmd_Role_SetShowBackground_CS {
  uint32 iShowBackgroundId = 1;
}

message Cmd_Role_SetShowBackground_SC {
  uint32 iShowBackgroundId = 1;
}

message Cmd_Role_SetSignature_CS {
  SdpString sSignature = 1;
}

message Cmd_Role_SetSignature_SC {
  SdpString sSignature = 1;
}

message Cmd_Role_SurveyUrl_CS {
  SdpString sUrl = 1;
}

message Cmd_Role_SurveyUrl_SC {
  SdpString sUrl = 1;
}

message Cmd_Role_UnbindAccount_CS {
  SdpString sAccountName = 1;
  SdpString sAuthKey = 2;
}

message Cmd_Role_UpdateBindAccount_CS {
  SdpString sAccountName = 1;
  SdpString sAuthKey = 2;
}

message Cmd_Role_UpdateDeviceToken_CS {
  SdpString sDeviceToken = 1;
  SdpString sRegistrationId = 2;
}

message Cmd_Role_UpgradeCirculation_CS {
  uint32 iTypeID = 1;
  uint32 iItemNum = 2;
}

message Cmd_Role_UpgradeCirculation_SC {
  CmdCirculationItem stCirculationItem = 1;
}

message Cmd_Role_UploadFBFaceId_CS {
  SdpString sFBFaceId = 1;
}

message Cmd_Role_UploadFBFaceId_SC {
  SdpString sFBFaceId = 1;
}

message Cmd_Room_ChangePos_CS {
  uint32 iNewPos = 1;
}

message Cmd_Room_ChangePos_SC {
  uint32 iNewPos = 1;
  RoomPlayerInfo stPlayer = 2;
}

message Cmd_Room_Chat_CS {
  SdpString sMessage = 1;
}

message Cmd_Room_Chat_SC {
  SdpString sMessage = 1;
  SdpString sSenderName = 2;
}

message Cmd_Room_Create_CS {
  uint32 iMatchType = 1;
}

message Cmd_Room_Create_SC {
  MTTDProto.RoomInfo stRoom = 1;
}

message Cmd_Room_Enter_CS {
  uint64 iRoomId = 1;
  uint32 iMatchType = 2;
}

message Cmd_Room_Enter_SC {
  uint32 iRet = 1;
  MTTDProto.RoomInfo stRoom = 2;
}

message Cmd_Room_GetInfo_SC {
  MTTDProto.RoomInfo stRoom = 1;
}

message Cmd_Room_Invite_CS {
  PlayerIDType stPlayer = 1;
}

message Cmd_Room_Invite_SC {
  uint32 iRet = 1;
}

message Cmd_Room_InviteReject_CS {
  uint64 iRoomId = 1;
  PlayerIDType stPlayer = 2;
}

message Cmd_Room_Kick_CS {
  PlayerIDType stPlayer = 1;
}

message Cmd_Room_Kick_SC {
  uint32 iRet = 1;
  MTTDProto.RoomInfo stRoom = 2;
}

message Cmd_Room_Leave_SC {
  uint32 iRet = 1;
}

message Cmd_Shop_Buy_CS {
  uint32 iShopId = 1;
  uint32 iGroupId = 2;
  uint32 iGoodsId = 3;
  uint32 iNum = 4;
}

message Cmd_Shop_Buy_SC {
  uint32 iShopId = 1;
  uint32 iGroupId = 2;
  uint32 iGoodsId = 3;
  uint32 iNum = 4;
  repeated CmdIDNum vReward = 5;
  uint32 iStockBought = 6;
  uint32 iLimitBought = 7;
  map<SdpUInt, repeated CmdIDNum> mChangeReward = 8;
}

message Cmd_Shop_GetShop_CS {
  uint32 iShopId = 1;
}

message Cmd_Shop_GetShop_SC {
  CmdShop stShop = 1;
}

message Cmd_Shop_GetShopList_CS {
  repeated SdpUInt vShopId = 1;
}

message Cmd_Shop_GetShopList_SC {
  repeated CmdShop vShopList = 1;
}

message Cmd_Shop_Refresh_CS {
  uint32 iShopId = 1;
}

message Cmd_Shop_Refresh_SC {
  CmdShop stShop = 1;
}

message Cmd_SimRoom_ChooseEvent_CS {
  uint32 iEventId = 1;
}

message Cmd_SimRoom_ChooseEvent_SC {
  uint32 iEventId = 1;
  repeated CmdSimBuff vChooseBuff = 2;
}

message Cmd_SimRoom_ChooseOption_CS {
  uint32 iEventId = 1;
  uint32 iOption = 2;
  bool bNotChoose = 3;
  uint32 iChooseIndex = 4;
  uint32 iReplaceIndex = 5;
}

message Cmd_SimRoom_ChooseOption_SC {
  uint32 iEventId = 1;
  uint32 iOption = 2;
  bool bNotChoose = 3;
  uint32 iChooseIndex = 4;
  uint32 iReplaceIndex = 5;
  CmdSimBuff stNewBuff = 6;
  CmdSimDoing stDoingSim = 7;
}

message Cmd_SimRoom_EndSim_CS {
  bool bNotChoose = 1;
  uint32 iChooseIndex = 2;
  uint32 iReplaceIndex = 3;
}

message Cmd_SimRoom_EndSim_SC {
  bool bNotChoose = 1;
  uint32 iChooseIndex = 2;
  uint32 iReplaceIndex = 3;
  CmdSimRoom stSimRoom = 4;
}

message Cmd_SimRoom_GetData_SC {
  CmdSimRoom stSimRoom = 1;
}

message Cmd_SimRoom_Mop_SC {
  CmdSimRoom stSimRoom = 1;
  map<SdpUInt, repeated CmdIDNum> mRegionReward = 2;
  map<SdpUInt, repeated CmdIDNum> mRegionActReward = 3;
}

message Cmd_SimRoom_MopChooseBuff_CS {
  repeated SdpUInt vChooseIndex = 1;
}

message Cmd_SimRoom_MopChooseBuff_SC {
  CmdSimDoing stDoingSim = 1;
}

message Cmd_SimRoom_ResetSim_CS {
  bool bNotChoose = 1;
  uint32 iChooseIndex = 2;
  uint32 iReplaceIndex = 3;
}

message Cmd_SimRoom_ResetSim_SC {
  bool bNotChoose = 1;
  uint32 iChooseIndex = 2;
  uint32 iReplaceIndex = 3;
  CmdSimDoing stDoingSim = 4;
}

message Cmd_SimRoom_StartSim_CS {
  uint32 iRegionId = 1;
  bool bContinue = 2;
}

message Cmd_SimRoom_StartSim_SC {
  uint32 iRegionId = 1;
  bool bContinue = 2;
  CmdSimDoing stDoingSim = 3;
}

message Cmd_Sns_Share_CS {
  uint32 iSnsType = 1;
  uint32 iSnsFunc = 2;
  CmdShareParams stParams = 3;
  uint32 iActivityId = 4;
}

message Cmd_Sns_Share_SC {
  repeated CmdIDNum vReward = 1;
}

message Cmd_SoloRaid_ChooseRaid_CS {
  uint32 iRaidId = 1;
}

message Cmd_SoloRaid_ChooseRaid_SC {
  uint32 iRaidId = 1;
  CmdSoloRaidChallenge stCurRaid = 2;
}

message Cmd_SoloRaid_GetData_SC {
  CmdSoloRaid stSoloRaid = 1;
  uint32 iNormalTimes = 2;
  uint32 iHardTimes = 3;
}

message Cmd_SoloRaid_GetMyRank_SC {
  uint32 iMyRank = 1;
  uint32 iRankSize = 2;
}

message Cmd_SoloRaid_GetPlayerRecord_CS {
  PlayerIDType stTargetId = 1;
}

message Cmd_SoloRaid_GetPlayerRecord_SC {
  PlayerIDType stTargetId = 1;
  CmdSoloRaidRecord stRecord = 2;
}

message Cmd_SoloRaid_GetRankList_CS {
  uint32 iBeginRank = 1;
  uint32 iEndRank = 2;
}

message Cmd_SoloRaid_GetRankList_SC {
  repeated CmdSoloRaidRankItem vRankList = 1;
  uint32 iMyRank = 2;
  uint64 iMyScore = 3;
  uint32 iRankSize = 4;
}

message Cmd_SoloRaid_MopUp_CS {
  uint32 iRaidId = 1;
}

message Cmd_SoloRaid_MopUp_SC {
  uint32 iRaidId = 1;
  uint32 iFightTimes = 2;
  repeated CmdIDNum vReward = 3;
}

message Cmd_SoloRaid_Reset_SC {
  uint32 iRaidId = 1;
  CmdSoloRaidChallenge stCurRaid = 2;
}

message Cmd_Stage_EnterChallenge_CS {
  uint32 iStageType = 1;
  uint32 iStageId = 2;
}

message Cmd_Stage_EnterChallenge_SC {
  uint32 iStageType = 1;
  uint32 iStageId = 2;
}

message Cmd_Stage_GetDungeonChapterMop_SC {
  uint32 iTimes = 1;
  map<SdpUInt, SdpUInt> mRotationLevelSubType = 2;
}

message Cmd_Stage_GetList_CS {
  uint32 iStageType = 1;
}

message Cmd_Stage_GetList_SC {
  uint32 iStageType = 1;
  map<SdpUInt, CmdSubStageData> mSubStage = 2;
}

message Cmd_Stage_GetStageDetail_CS {
  uint32 iType = 1;
  repeated SdpUInt vStageId = 2;
}

message Cmd_Stage_GetStageDetail_SC {
  uint32 iType = 1;
  map<SdpUInt, CmdStageDetail> mStageDetail = 2;
}

message Cmd_Stage_GetStageTimes_CS {
  uint32 iType = 1;
  repeated SdpUInt vSubType = 2;
}

message Cmd_Stage_GetStageTimes_SC {
  uint32 iType = 1;
  map<SdpUInt, SdpUInt> mTimes = 2;
}

message Cmd_Stage_MopUp_CS {
  uint32 iStageType = 1;
  uint32 iStageId = 2;
  uint32 iMopTimes = 3;
}

message Cmd_Stage_MopUp_SC {
  uint32 iStageType = 1;
  uint32 iStageId = 2;
  uint32 iMopTimes = 3;
  repeated CmdIDNum vReward = 4;
  repeated CmdIDNum vExtraReward = 5;
}

message Cmd_Store_IAP_Deliver_Apple_CS {
  SdpString sReceipt = 1;
  uint32 iZoneId = 2;
  uint64 iUid = 3;
  SdpString sTraceProductId = 4;
  SdpString sTraceFlowId = 5;
  SdpString sReportPrice = 6;
  uint32 iProductSubId = 7;
}

message Cmd_Store_IAP_Deliver_Apple_SC {
  bool bDuplicate = 1;
}

message Cmd_Store_IAP_Deliver_DMM_CS {
  SdpString sPurchaseToken = 1;
  SdpString sOrderId = 2;
  SdpString sProductId = 3;
  SdpString iPrice = 4;
  uint64 iPriceAmountMicros = 5;
  SdpString sPriceCurrencyCode = 6;
  uint32 iQuantity = 7;
  uint32 iPurchaseTime = 8;
  uint32 iPurchaseState = 9;
  SdpString sInAppPurchaseData = 10;
  SdpString sInAppDataSignature = 11;
  uint32 iZoneId = 12;
  uint64 iUid = 13;
}

message Cmd_Store_IAP_Deliver_DMM_SC {
  SdpString sPurchaseToken = 1;
  SdpString sOrderId = 2;
  SdpString sProductId = 3;
  uint32 iReceiptStatus = 4;
}

message Cmd_Store_IAP_Deliver_Google_CS {
  int64 iResponseCode = 1;
  SdpString sPurchaseData = 2;
  SdpString sSignature = 3;
  uint32 iZoneId = 4;
  uint64 iUid = 5;
  SdpString sTraceProductId = 6;
  SdpString sTraceFlowId = 7;
  SdpString sReportPrice = 8;
}

message Cmd_Store_IAP_Deliver_Google_SC {
  bool bDuplicate = 1;
}

message Cmd_Store_IAP_Deliver_Welfare_CS {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iStoreType = 3;
  SdpString sStoreParam = 4;
}

message Cmd_Store_Request_IAPBuy_CS {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iReceiptType = 3;
  uint32 iStoreType = 4;
  SdpString sStoreParam = 5;
}

message Cmd_Store_Request_IAPBuy_SC {
  SdpString sTraceFlowId = 1;
  bool bWarnPay = 2;
}

message Cmd_Store_Trace_IAPBuy_CS {
  SdpString sProductId = 1;
  uint32 iReceiptType = 2;
  SdpString sFlowId = 3;
  SdpString sStatus = 4;
  SdpString sReportPrice = 5;
}

message Cmd_Store_WeGame_Session_Start_CS {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iStoreType = 3;
  SdpString sStoreParam = 4;
  SdpString sRailId = 5;
  uint32 iNeedAultLimit = 6;
}

message Cmd_Store_WeGame_Session_Start_SC {
  SdpString sRailOrderId = 1;
  SdpString sRailGameId = 2;
  SdpString sRailId = 3;
}

message Cmd_Strategy_Add_CS {
  uint32 iIndex = 1;
}

message Cmd_Strategy_Add_SC {
  uint32 iIndex = 1;
}

message Cmd_Strategy_Choose_CS {
  uint32 iIndex = 1;
}

message Cmd_Strategy_Choose_SC {
  uint32 iIndex = 1;
}

message Cmd_Strategy_Del_CS {
  uint32 iIndex = 1;
}

message Cmd_Strategy_Del_SC {
  uint32 iIndex = 1;
}

message Cmd_Strategy_GetList_SC {
  repeated CmdStrategy vStrategy = 1;
  uint32 iChooseIndex = 2;
}

message Cmd_Strategy_Set_CS {
  uint32 iIndex = 1;
  CmdStrategy stStrategy = 2;
}

message Cmd_Strategy_Set_SC {
  uint32 iIndex = 1;
  CmdStrategy stStrategy = 2;
}

message CmdAccountInfo {
  SdpString sAccountName = 1;
  map<SdpString, SdpString> mData = 2;
}

message CmdActBattlePass_Status {
  uint32 iCurLevel = 1;
  uint32 iCurExp = 2;
  repeated SdpUInt vDrawStatus = 3;
  repeated SdpUInt vQuestId = 4;
  uint32 iBuyStatus = 5;
}

message CmdActBattlePassBuyParam {
  uint32 iActivityId = 1;
}

message CmdActCfgABTest {
  CmdActCommonCfgABTest stCommonCfg = 1;
}

message CmdActCfgABTestABTest {
  uint32 iABTestID = 1;
  uint32 iABTestType = 2;
  uint32 iABTestPercentForB = 3;
  uint32 iABTestPercentForC = 4;
}

message CmdActCfgABTestABTestConfig {
  map<SdpUInt, CmdActCfgABTestABTest> mABTest = 1;
}

message CmdActCfgActivityEntrance {
  CmdActClientCfgActivityEntrance stClientCfg = 1;
}

message CmdActCfgActivityEntranceActListCfg {
  uint32 iSubActId = 1;
  SdpString sJumpParam = 2;
  uint32 iWeight = 3;
  SdpString sSubActTitle = 4;
  SdpString sSubActDesc = 5;
  SdpString sSubActPic = 6;
}

message CmdActCfgAllianceBattle {
  CmdActCommonCfgAllianceBattle stCommonCfg = 1;
}

message CmdActCfgBattlePass {
  CmdActClientCfgBattlePass stClientCfg = 1;
  CmdActCommonCfgBattlePass stCommonCfg = 2;
}

message CmdActCfgBattlePassLevelCfg {
  uint32 iLevel = 1;
  repeated CmdIDNum vFreeReward = 2;
  repeated CmdIDNum vPaidReward = 3;
}

message CmdActCfgCensor {
  CmdActCommonCfgCensor stCommonCfg = 1;
}

message CmdActCfgCommonQuest {
  SdpString sHelpTips = 1;
  uint32 mailTemplate = 2;
  map<SdpUInt, CmdActCfgCommonQuestQuest> mQuest = 3;
  map<SdpUInt, CmdActCfgCommonQuestDailyReward> mDailyReward = 4;
  map<SdpUInt, repeated CmdIDNum> mFinalReward = 5;
  SdpString sTitleWordColor = 6;
  SdpString sSubtitleWordColor = 7;
  SdpString sBgPic = 8;
  SdpString sAtmosphericAnimation = 9;
  SdpString sSignInFloorPlan = 10;
  uint32 iUiType = 11;
}

message CmdActCfgCommonQuestDailyReward {
  uint32 iOpenDay = 1;
  uint32 iNeedScore = 2;
  repeated CmdIDNum vReward = 3;
}

message CmdActCfgCommonQuestQuest {
  uint32 iId = 1;
  uint32 iObjectiveType = 2;
  SdpString sObjectiveData = 3;
  uint32 iObjectiveCount = 4;
  uint32 iScore = 5;
  repeated CmdIDNum vReward = 6;
  uint32 iOpenDay = 7;
  uint32 iJump = 8;
  SdpString sName = 9;
}

message CmdActCfgCommunityEntrance {
  CmdActClientCfgCommunityEntrance stClientCfg = 1;
}

message CmdActCfgCommunityEntranceCommunityCfg {
  SdpString iCommunityType = 1;
  SdpString sJumpContent = 2;
  SdpString sJumpUrl = 3;
  uint32 iWeight = 4;
  SdpString sJumpPic = 5;
  SdpString sButtonName = 6;
}

message CmdActCfgConsumeReward {
  CmdActCommonCfgConsumeReward stCommonCfg = 1;
}

message CmdActCfgConsumeRewardPointReward {
  uint32 iNeedPoint = 1;
  repeated CmdIDNum vReward = 2;
  uint32 bFinal = 3;
}

message CmdActCfgConsumeRewardProducts {
  SdpString sProductId = 1;
  uint32 iPoint = 2;
}

message CmdActCfgEmergencyGift {
  CmdActCommonCfgEmergencyGift stCommonCfg = 1;
}

message CmdActCfgEmergencyGiftGift {
  uint32 iGiftID = 1;
  SdpString sProductId = 2;
  repeated CmdIDNum stItem = 3;
  SdpString iPushStyle = 4;
  uint32 iDiscount = 5;
  uint32 iGiftDuration = 6;
  uint32 iTriggerRate = 7;
  uint32 iMaxTriggerCount = 8;
  uint32 sConditionRegTimeBegin = 9;
  uint32 sConditionRegTimeEnd = 10;
  SdpString sConditionPassStage = 11;
  SdpString sConditionPayAmountRMB = 12;
  SdpString sConditionPayAmount = 13;
  SdpString iProductNameId = 14;
  SdpString sProductDesc = 15;
}

message CmdActCfgFightDebug {
  CmdActCommonCfgFightDebug stCommonCfg = 1;
}

message CmdActCfgForbidCustomDescManager {
  CmdActCommonCfgForbidCustomDescManager stCommonCfg = 1;
}

message CmdActCfgForbidCustomDescManagerForbidCustomDesc {
  uint32 id = 1;
  SdpString begin_time = 2;
  SdpString end_time = 3;
  SdpString comment = 4;
}

message CmdActCfgForbidCustomDescManagerForbidCustomDescEmergency {
  uint32 id = 1;
  uint32 begin_time = 2;
  uint32 end_time = 3;
  SdpString comment = 4;
}

message CmdActCfgFullBurstDay {
  CmdActCommonCfgFullBurstDay stCommonCfg = 1;
}

message CmdActCfgGachaFree {
  CmdActCommonCfgGachaFree stCommonCfg = 1;
}

message CmdActCfgGachaJump {
  CmdActClientCfgGachaJump stClientCfg = 1;
  CmdActCommonCfgGachaJump stCommonCfg = 2;
}

message CmdActCfgGameNotice {
  CmdActClientCfgGameNotice stClientCfg = 1;
}

message CmdActCfgGameNoticeContentConfig {
  uint32 iType = 1;
  SdpString sContent = 2;
  uint32 iJumpType = 3;
  SdpString sJumpParam = 4;
  uint32 iContentSize = 5;
  uint32 iContentColor = 6;
  uint32 iEmptyLine = 7;
  SdpString sTextContent = 8;
  uint32 iOffsetX = 9;
  uint32 iOffsetY = 10;
}

message CmdActCfgHunting {
  CmdActCommonCfgHunting stCommonCfg = 1;
}

message CmdActCfgHuntingAllBoss {
  uint32 iBossId = 1;
  SdpString sDate = 2;
}

message CmdActCfgHuntingTimeManager {
  uint32 iIndex = 1;
  repeated SdpUInt vBoss = 2;
  uint32 iStartTime = 3;
  uint32 iFightEndTime = 4;
  uint32 iEndTime = 5;
}

message CmdActCfgLamiaTimeManager {
  CmdActCommonCfgLamiaTimeManager stCommonCfg = 1;
}

message CmdActCfgLamiaTimeManagerActivitySubCfg {
  uint32 iSubActId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
}

message CmdActCfgLamiaTimeManagerActLamiaLevelCfg {
  uint32 iLevelId = 1;
  uint32 iOpenTime = 2;
}

message CmdActCfgLamiaTimeManagerGachaCfg {
  uint32 iLevelId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
}

message CmdActCfgLamiaTimeManagerMiniGameCfg {
  uint32 iGameId = 1;
  uint32 iOpenTime = 2;
}

message CmdActCfgLamiaTimeManagerShopCfg {
  uint32 iShopId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
}

message CmdActCfgLamiaTimeManagerShopGoodsCfg {
  uint32 iGroupId = 1;
  uint32 iGoodsId = 2;
  uint32 iConditionTime = 3;
  uint32 iShowTime = 4;
  uint32 iEndTime = 5;
}

message CmdActCfgLevelAward {
  map<SdpUInt, CmdActCfgLevelAwardQuest> mQuest = 1;
  CmdActClientCfgLevelAward stClientCfg = 2;
}

message CmdActCfgLevelAwardHeroConfig {
  uint32 iHeroId = 1;
  SdpString vUseQuestId = 2;
  SdpString sUnlockDesc = 3;
  SdpString sJumpContent = 4;
  uint32 iJumpType = 5;
  SdpString sJumpParam = 6;
  uint32 iOrder = 7;
  SdpString sOutsideDesc = 8;
  SdpString sInsideDesc = 9;
}

message CmdActCfgLevelAwardMultiHeroConfig {
  repeated CmdActCfgLevelAwardHeroConfig vHeroConfig = 1;
}

message CmdActCfgLevelAwardOneHeroConfig {
  uint32 iHeroId = 1;
}

message CmdActCfgLevelAwardQuest {
  uint32 iId = 1;
  uint32 iObjectiveType = 2;
  SdpString sObjectiveData = 3;
  uint32 iObjectiveCount = 4;
  repeated CmdIDNum vReward = 5;
  uint32 iJump = 6;
  SdpString sName = 7;
}

message CmdActCfgLoginSelect {
  uint32 iNeedLogin = 1;
  SdpString sHelpTips = 2;
  SdpString sColor = 3;
  map<SdpUInt, CmdActCfgLoginSelectSelectReward> mSelectReward = 4;
  SdpString sTitleWordColor = 5;
  SdpString sSubtitleWordColor = 6;
  SdpString sBgPic = 7;
  SdpString sAtmosphericAnimation = 8;
}

message CmdActCfgLoginSelectSelectReward {
  uint32 iIndex = 1;
  SdpString sReward = 2;
  SdpString sRewardPicture = 3;
  SdpString sRewardDesc = 4;
}

message CmdActCfgLoginSendItem {
  CmdActClientCfgLoginSendItem stClientCfg = 1;
  CmdActCommonCfgLoginSendItem stCommonCfg = 2;
}

message CmdActCfgModuleControl {
  map<SdpString, SdpString> mCommParam = 1;
  CmdActClientCfgModuleControl stClientCfg = 2;
}

message CmdActCfgModuleControlWatermark {
  uint32 iType = 1;
  SdpString sContent = 2;
  uint32 iPos = 3;
  uint32 iOffset = 4;
  uint32 iSize = 5;
}

message CmdActCfgOnePicAct {
  CmdActClientCfgOnePicAct stClientCfg = 1;
}

message CmdActCfgPayStore {
  CmdActCommonCfgPayStore stCommonCfg = 1;
}

message CmdActCfgPayStoreGoods {
  uint32 iGoodsId = 1;
  uint32 iMinLevel = 2;
  uint32 iMaxLevel = 3;
  uint32 iMinMainStage = 4;
  uint32 iMaxMainStage = 5;
  SdpString sProductId = 6;
  uint32 iProductSubId = 7;
  uint32 iLimitNum = 8;
  uint32 iPreGoodsId = 9;
  repeated CmdIDNum vReward = 10;
  repeated CmdIDNum vRewardExt = 11;
  SdpString sGoodsName = 12;
  SdpString sGoodsDesc = 13;
  SdpString sGoodsPic = 14;
  uint32 iDiscount = 15;
  uint32 iShowOrder = 16;
  uint32 iRecommend = 17;
  uint32 iLaunchTime = 18;
  uint32 iRemovalTime = 19;
}

message CmdActCfgPayStoreGoodsConfig {
  map<SdpUInt, CmdActCfgPayStoreGoods> mGoods = 1;
}

message CmdActCfgPayStoreStore {
  uint32 iStoreId = 1;
  uint32 iStoreType = 2;
  uint32 iRefreshType = 3;
  uint32 iRefreshTime = 4;
  SdpString sStoreName = 5;
  SdpString sStoreDesc = 6;
  SdpString sStorePic = 7;
  uint32 iWindowID = 8;
  SdpString sWindowName = 9;
  uint32 iShowOrder = 10;
  uint32 iStoreStatus = 11;
  uint32 iStoreBeginTime = 12;
  uint32 iStoreEndTime = 13;
  uint32 iMinLevel = 14;
  uint32 iMaxLevel = 15;
  uint32 iMinMainStage = 16;
  uint32 iMaxMainStage = 17;
  uint32 iFirstDouble = 18;
  CmdActCfgPayStoreGoodsConfig stGoodsConfig = 19;
  uint32 iShowType = 20;
  SdpString sColorType = 21;
  uint32 iShowSingleTab = 22;
  CmdActCfgPayStoreUpInterfaceResourceConfig stUpInterfaceResourceConfig = 23;
}

message CmdActCfgPayStoreUpInterfaceResourceConfig {
  SdpString sGiftBackground = 1;
  SdpString sGiftPackBasePlate = 2;
  SdpString sPurchasePriceTextColor = 3;
  SdpString sSoldOutPic = 4;
  SdpString sSoldOutTextColor = 5;
  SdpString sGiftPackNameTextColor = 6;
  SdpString sStockTextColor = 7;
  SdpString sValueForMoneyBaseImage = 8;
  SdpString sValueForMoneyMask = 9;
  SdpString sValueForMoneyTextColor = 10;
}

message CmdActCfgPickupGift {
  CmdActCommonCfgPickupGift stCommonCfg = 1;
}

message CmdActCfgPickupGiftGiftList {
  uint32 iGiftId = 1;
  SdpString sProductId = 2;
  uint32 iProductSubId = 3;
  uint32 iBuyLimit = 4;
  SdpString sIcon = 5;
  SdpString sGiftName = 6;
  SdpString sGiftDesc = 7;
  uint32 iOrder = 8;
  uint32 iDiscount = 9;
  CmdActCfgPickupGiftGrids stGrids = 10;
}

message CmdActCfgPickupGiftGrids {
  map<SdpUInt, repeated CmdIDNum> mGridCfg = 1;
}

message CmdActCfgPushGift {
  CmdActCommonCfgPushGift stCommonCfg = 1;
}

message CmdActCfgPushGiftGoods {
  uint32 iGiftIndex = 1;
  SdpString sProductID = 2;
  repeated CmdIDNum sGiftItems = 3;
  uint32 iGiftDiscount = 4;
  SdpString sGiftName = 5;
  SdpString sGiftStr = 6;
  uint32 iShow = 7;
}

message CmdActCfgPushGiftPay {
  uint32 iID = 1;
  uint32 iMinCharge = 2;
  uint32 iMaxCharge = 3;
  uint32 iGiftIndex1 = 4;
  uint32 iGiftIndex2 = 5;
  uint32 iGiftIndex3 = 6;
}

message CmdActCfgPushGiftPayConfig {
  map<SdpUInt, CmdActCfgPushGiftPay> mPay = 1;
  CmdActCfgPushGiftRfmConfig stRfmConfig = 2;
}

message CmdActCfgPushGiftPrice {
  uint32 iID = 1;
  uint32 iType = 2;
  repeated CmdIDNum sVal = 3;
  uint32 iWeight = 4;
}

message CmdActCfgPushGiftPushGoodsConfig {
  map<SdpUInt, CmdActCfgPushGiftGoods> mGoods = 1;
}

message CmdActCfgPushGiftPushGroup {
  uint32 iGroupIndex = 1;
  uint32 iTriggerType = 2;
  repeated SdpUInt vTriggerParam = 3;
  SdpString sIcon = 4;
  uint32 iTimeDuration = 5;
  SdpString iTitle = 6;
  CmdActCfgPushGiftPushGoodsConfig stPushGoodsConfig = 7;
}

message CmdActCfgPushGiftPushMax {
  uint32 iID = 1;
  uint32 iMaxPayPrice = 2;
  uint32 iMaxPushIndex = 3;
}

message CmdActCfgPushGiftPushRfm {
  uint32 iID = 1;
  uint32 iMinScore = 2;
  uint32 iMaxScore = 3;
  repeated SdpUInt vGiftIndex = 4;
}

message CmdActCfgPushGiftRfmConfig {
  SdpString sUidLast = 1;
  SdpString sUidList = 2;
  map<SdpUInt, CmdActCfgPushGiftPrice> mPrice = 3;
  map<SdpUInt, CmdActCfgPushGiftPushMax> mPushMax = 4;
  map<SdpUInt, CmdActCfgPushGiftPushRfm> mPushRfm = 5;
}

message CmdActCfgRechargeBack {
  CmdActClientCfgRechargeBack stClientCfg = 1;
}

message CmdActCfgRechargeBackMessage {
  SdpString sItemTitile = 1;
  SdpString sDesc = 2;
}

message CmdActCfgRechargeRebate {
  CmdActCommonCfgRechargeRebate stCommonCfg = 1;
}

message CmdActCfgRefund {
  CmdActCommonCfgRefund stCommonCfg = 1;
}

message CmdActCfgRefundRefundGoods {
  uint32 iIndex = 1;
  SdpString sProductId = 2;
  uint32 iSubProductId = 3;
  uint32 iDiamond = 4;
}

message CmdActCfgReturnSign {
  CmdActCommonCfgReturnSign stCommonCfg = 1;
}

message CmdActCfgSign {
  uint32 iUiType = 1;
  uint32 bSeasonAct = 2;
  uint32 iSeasonNum = 3;
  SdpString sCVChannel = 4;
  uint32 iHeroBaseId = 5;
  SdpString sArtTips = 6;
  SdpString sHelpTips = 7;
  SdpString sPic = 8;
  SdpString sColor = 9;
  map<SdpUInt, CmdActCfgSignShareReward> mShareReward = 10;
  uint32 iShareBeginTime = 11;
  uint32 iShareEndTime = 12;
  map<SdpUInt, CmdActCfgSignReward> mReward = 13;
  uint32 bResourceCanIn = 14;
  SdpString sTitleWordColor = 15;
  SdpString sSubtitleWordColor = 16;
  SdpString sBgPic = 17;
  map<SdpUInt, CmdActCfgSignHeroChannelCfg> mHeroChannelCfg = 18;
  SdpString sAtmosphericAnimation = 19;
  SdpString sSignInFloorPlan = 20;
  uint32 iRestrictStageType = 21;
  uint32 iRestrictStageId = 22;
  uint32 iRestrictGuideId = 23;
  uint32 iAvatarId = 24;
  uint32 iNotifyTime = 25;
}

message CmdActCfgSignGift {
  CmdActClientCfgSignGift stClientCfg = 1;
  CmdActCommonCfgSignGift stCommonCfg = 2;
}

message CmdActCfgSignHeroChannelCfg {
  uint32 iIndex = 1;
  SdpString sChannel = 2;
  SdpString sHeroVerticalDrawing = 3;
  SdpString sHeroCampIcon = 4;
}

message CmdActCfgSignReward {
  uint32 iIndex = 1;
  SdpString sReward = 2;
  uint32 bSpecialReward = 3;
  SdpString sRewardPicture = 4;
  SdpString sRewardDesc = 5;
  uint32 bShowCount = 6;
}

message CmdActCfgSignShareReward {
  uint32 iIndex = 1;
  repeated CmdIDNum sReward = 2;
  SdpString sRewardPicture = 3;
}

message CmdActCfgSoloRaid {
  CmdActCommonCfgSoloRaid stCommonCfg = 1;
}

message CmdActCfgSurveyReward {
  CmdActCommonCfgSurveyReward stCommonCfg = 1;
}

message CmdActCfgSurveyRewardReward {
  uint32 iId = 1;
  uint32 iDefaultLangId = 2;
  CmdActCfgSurveyRewardSurvey mSurvey = 3;
  repeated CmdIDNum sReward = 4;
  uint32 iRewardType = 5;
  SdpString sMailTitle = 6;
  SdpString sMailContent = 7;
}

message CmdActCfgSurveyRewardSurvey {
  map<SdpUInt, CmdActCfgSurveyRewardSurveyIds> mSurveyIds = 1;
}

message CmdActCfgSurveyRewardSurveyIds {
  uint32 iLangId = 1;
  SdpString sSurveyId = 2;
  SdpString sSystemNo = 3;
  SdpString sConditionNo = 4;
}

message CmdActCfgSystemSwitch {
  CmdActCommonCfgSystemSwitch stCommonCfg = 1;
}

message CmdActCfgSystemSwitchSystemCfg {
  uint32 iSystemId = 1;
  repeated SdpUInt vConditionType = 2;
  repeated SdpUInt vConditionData = 3;
  repeated SdpUInt vClientMessage = 4;
  uint32 iForceClose = 5;
  SdpString sComment = 6;
}

message CmdActCfgTimelineJump {
  CmdActClientCfgTimelineJump stClientCfg = 1;
  CmdActCommonCfgTimelineJump stCommonCfg = 2;
}

message CmdActCfgTvProjection {
  CmdActClientCfgTvProjection stClientCfg = 1;
}

message CmdActCfgTvProjectionTvProjectionCfg {
  SdpString iJumpType = 1;
  SdpString sJumpParam = 2;
  uint32 iWeight = 3;
  SdpString sPic = 4;
  uint32 iStartTime = 5;
  uint32 iEndTime = 6;
  uint32 iNeedStageId = 7;
  uint32 iNeedLevel = 8;
}

message CmdActCfgUpTimeManager {
  CmdActClientCfgUpTimeManager stClientCfg = 1;
}

message CmdActCfgUpTimeManagerBackground {
  uint32 iBackgroundId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgUpTimeManagerFashion {
  uint32 iFashionId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgUpTimeManagerHeadFrame {
  uint32 iHeadFrameId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgUpTimeManagerHero {
  uint32 iHeroId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgUpTimeManagerPlayerHead {
  uint32 iPlayerHeadId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgUpTimeManagerRogueItem {
  uint32 iRogueItemId = 1;
  uint32 iUnlockTime = 2;
  uint32 iShield = 3;
}

message CmdActCfgVoucherControl {
  CmdActCommonCfgVoucherControl stCommonCfg = 1;
}

message CmdActCfgVoucherControlControlCfg {
  SdpString sChannel = 1;
  repeated SdpString vCountry = 2;
  uint32 iControlType = 3;
  SdpString sSpecialJumpLink = 4;
}

message CmdActCfgWelfareShow {
  CmdActClientCfgWelfareShow stClientCfg = 1;
}

message CmdActCfgWelfareShowSystem {
  SdpString sContent = 1;
  uint32 iJumpType = 2;
  SdpString sJumpParam = 3;
  SdpString sDate = 4;
}

message CmdActClientCfgActivityEntrance {
  repeated CmdActCfgActivityEntranceActListCfg vActListCfg = 1;
}

message CmdActClientCfgBattlePass {
  SdpString sName = 1;
  uint32 iRoleId = 2;
  uint32 iAvatarId = 3;
  uint32 iUIType = 4;
  uint32 iTitleType = 5;
  SdpString sPurchaseInterfacePrefabName = 6;
  SdpString sPurchaseInterfaceLowTierName = 7;
  SdpString sPurchaseInterfaceHighTierName = 8;
  SdpString sTitle = 9;
  SdpString sBackgroundPic = 10;
  SdpString sBackgroundPicMask = 11;
  uint32 iActivityRulesPopupId = 12;
  SdpString sBuyBackgroundPic = 13;
  SdpString sBuyBackgroundPicMask = 14;
}

message CmdActClientCfgCommunityEntrance {
  repeated CmdActCfgCommunityEntranceCommunityCfg vCommunityCfg = 1;
}

message CmdActClientCfgFlogReportModuleControl {
  uint32 iOpenReport = 1;
  uint32 iReportButtonControl = 2;
  uint32 iLogLevel = 3;
}

message CmdActClientCfgGachaJump {
  uint32 iJumpId = 1;
  SdpString sSpineName = 2;
  SdpString sSubPanelName = 3;
  uint32 iHasSpine = 4;
  SdpString sSpineAnimSting = 5;
  SdpString sSlideshow = 6;
  SdpString sSlideshowTitle = 7;
  uint32 iHeroId = 8;
}

message CmdActClientCfgGameNotice {
  uint32 iNoticeType = 1;
  uint32 iShowWeight = 2;
  uint32 iNeedChargeMoney = 3;
  SdpString sTitle = 4;
  repeated CmdActCfgGameNoticeContentConfig vContentConfig = 5;
  SdpString sJumpContent = 6;
  uint32 iJumpTypeLast = 7;
  SdpString sJumpParamLast = 8;
  uint32 iHideTime = 9;
  SdpString sClientVersion = 10;
  uint32 iQuestId = 11;
}

message CmdActClientCfgLevelAward {
  uint32 iShowType = 1;
  CmdActCfgLevelAwardOneHeroConfig stOneHeroConfig = 2;
  CmdActCfgLevelAwardMultiHeroConfig stMultiHeroConfig = 3;
  uint32 iRedQuestId = 4;
}

message CmdActClientCfgLoginSendItem {
  SdpString sJumpContent = 1;
  uint32 iJumpType = 2;
  SdpString sJumpParam = 3;
}

message CmdActClientCfgLogReportPercentModuleControl {
  SdpString sLogName = 1;
  uint32 iLogPercent = 2;
  uint32 iLogOffset = 3;
  SdpString sExcludeUid = 4;
}

message CmdActClientCfgModuleControl {
  repeated CmdActClientCfgLogReportPercentModuleControl vLogReportPercent = 1;
  CmdActClientCfgFlogReportModuleControl stFlogReport = 2;
  map<SdpUInt, CmdActCfgModuleControlWatermark> mWatermark = 3;
  bool bCloseRogueJumpImprove = 4;
  repeated SdpUInt vCloseFightCheatType = 5;
}

message CmdActClientCfgOnePicAct {
  SdpString sBGPicPath = 1;
  SdpString sSubPicPath = 2;
  int64 iSubPicPosX = 3;
  int64 iSubPicPosY = 4;
  SdpString sJumpContent = 5;
  uint32 iJumpType = 6;
  SdpString sJumpParam = 7;
  uint32 iWeight = 8;
}

message CmdActClientCfgRechargeBack {
  SdpString sTitle = 1;
  repeated CmdActCfgRechargeBackMessage sMessage = 2;
}

message CmdActClientCfgSignGift {
  SdpString sProductName = 1;
  SdpString sRule = 2;
}

message CmdActClientCfgTimelineJump {
  SdpString sTimelineName = 1;
}

message CmdActClientCfgTvProjection {
  repeated CmdActCfgTvProjectionTvProjectionCfg sTvProjectionCfg = 1;
}

message CmdActClientCfgUpTimeManager {
  map<SdpUInt, CmdActCfgUpTimeManagerHero> mHero = 1;
  map<SdpUInt, CmdActCfgUpTimeManagerBackground> mBackground = 2;
  map<SdpUInt, CmdActCfgUpTimeManagerPlayerHead> mPlayerHead = 3;
  map<SdpUInt, CmdActCfgUpTimeManagerHeadFrame> mHeadFrame = 4;
  map<SdpUInt, CmdActCfgUpTimeManagerFashion> mFashion = 5;
  map<SdpUInt, CmdActCfgUpTimeManagerRogueItem> mRogueItem = 6;
}

message CmdActClientCfgWelfareShow {
  repeated CmdActCfgWelfareShowSystem vSystem = 1;
  uint32 iNeedGuideId = 2;
}

message CmdActCommonCfgABTest {
  CmdActCfgABTestABTestConfig stABTestConfig = 1;
}

message CmdActCommonCfgAllianceBattle {
  uint32 iBattleId = 1;
  uint32 iSettleTime = 2;
}

message CmdActCommonCfgBattlePass {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iItemBaseId = 3;
  repeated SdpUInt vDailyQuest = 4;
  uint32 iCostPerExp = 5;
  uint32 iUpLevelExp = 6;
  uint32 iSendRewardMailId = 7;
  uint32 iNormalCostRatio = 8;
  uint32 iAdvancedCostRatio = 9;
  SdpString sAdvancedProductId = 10;
  uint32 iAdvancedProductSubId = 11;
  SdpString sAdvancedDifferenceProductId = 12;
  uint32 iAdvancedDifferenceProductSubId = 13;
  repeated CmdIDNum vAdvancedExtraReward = 14;
  uint32 iAdvancedExtraLevel = 15;
  map<SdpUInt, CmdActCfgBattlePassLevelCfg> mLevelCfg = 16;
}

message CmdActCommonCfgCensor {
  uint32 bCensor = 1;
}

message CmdActCommonCfgConsumeReward {
  uint32 iPointItem = 1;
  uint32 iResendMail = 2;
  uint32 iPopId = 3;
  map<SdpUInt, CmdActCfgConsumeRewardPointReward> mPointReward = 4;
  map<SdpString, CmdActCfgConsumeRewardProducts> mProducts = 5;
}

message CmdActCommonCfgEmergencyGift {
  map<SdpUInt, CmdActCfgEmergencyGiftGift> mGift = 1;
  repeated SdpUInt vProductSubIdLimit = 2;
}

message CmdActCommonCfgFightDebug {
  uint32 iFightDebugType = 1;
  SdpString sReportLink = 2;
  SdpString sReportAccount = 3;
  SdpString sReportPassword = 4;
  uint32 iFightDebugSizeLimit = 5;
}

message CmdActCommonCfgForbidCustomDescManager {
  map<SdpUInt, CmdActCfgForbidCustomDescManagerForbidCustomDesc> mForbidCustomDesc = 1;
  map<SdpUInt, CmdActCfgForbidCustomDescManagerForbidCustomDescEmergency> mForbidCustomDescEmergency = 2;
}

message CmdActCommonCfgFullBurstDay {
  SdpString vOpenDay = 1;
}

message CmdActCommonCfgGachaFree {
  uint32 iGachaId = 1;
  uint32 iDailyFreeTimesTen = 2;
}

message CmdActCommonCfgGachaJump {
  repeated CmdIDNum sOrderReward = 1;
  uint32 sOrderBeginTime = 2;
  uint32 sOrderEndTime = 3;
  uint32 iUiType = 4;
}

message CmdActCommonCfgHunting {
  repeated CmdActCfgHuntingAllBoss vAllBoss = 1;
  uint32 iRewardTime = 2;
  map<SdpUInt, CmdActCfgHuntingTimeManager> mTimeManager = 3;
}

message CmdActCommonCfgLamiaTimeManager {
  uint32 iLamiaId = 1;
  uint32 iDisable = 2;
  uint32 iOpenTime = 3;
  uint32 iChangeTime = 4;
  uint32 iCloseTime = 5;
  map<SdpUInt, CmdActCfgLamiaTimeManagerActivitySubCfg> mActivitySubCfg = 6;
  map<SdpUInt, CmdActCfgLamiaTimeManagerActLamiaLevelCfg> mActLamiaLevelCfg = 7;
  map<SdpUInt, CmdActCfgLamiaTimeManagerGachaCfg> mGachaCfg = 8;
  map<SdpUInt, CmdActCfgLamiaTimeManagerShopCfg> mShopCfg = 9;
  map<SdpUInt, CmdActCfgLamiaTimeManagerShopGoodsCfg> mShopGoodsCfg = 10;
  map<SdpUInt, CmdActCfgLamiaTimeManagerMiniGameCfg> mMiniGameCfg = 11;
}

message CmdActCommonCfgLoginSendItem {
  uint32 iItemId = 1;
  uint32 iItemNum = 2;
}

message CmdActCommonCfgPayStore {
  map<SdpUInt, CmdActCfgPayStoreStore> mStore = 1;
}

message CmdActCommonCfgPickupGift {
  map<SdpUInt, CmdActCfgPickupGiftGiftList> mGiftList = 1;
}

message CmdActCommonCfgPushGift {
  uint32 iPayStoreActivityID = 1;
  uint32 iPushInterval = 2;
  uint32 iTotalPushCountDaily = 3;
  repeated SdpUInt vProductSubIdLimit = 4;
  uint32 iDuration = 5;
  uint32 iPushType = 6;
  map<SdpUInt, CmdActCfgPushGiftPushGroup> mPushGroup = 7;
  CmdActCfgPushGiftPayConfig stPayConfig = 8;
}

message CmdActCommonCfgRechargeRebate {
  uint32 iWelfareRatio = 1;
  repeated SdpUInt vWelfareApp = 2;
}

message CmdActCommonCfgRefund {
  uint32 iBanRefund = 1;
  uint32 iBanTemplateId = 2;
  uint32 iDelayBanTime = 3;
  uint32 iRefundDay = 4;
  uint32 iRefundTimes = 5;
  uint32 iRefundCondition = 6;
  uint32 iNegativeDiamond = 7;
  uint32 iNegativeDiamondTemplateId = 8;
  map<SdpUInt, SdpUInt> mBan = 9;
  map<SdpUInt, CmdActCfgRefundRefundGoods> mRefundGoods = 10;
}

message CmdActCommonCfgReturnSign {
  uint32 iActiveDay = 1;
  uint32 iCloseDay = 2;
  uint32 iCDDay = 3;
  uint32 iResendMailTemplateId = 4;
  map<SdpUInt, repeated CmdIDNum> mReward = 5;
}

message CmdActCommonCfgSignGift {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iProductValue = 3;
  uint32 iForbidBuyHourBeforEnd = 4;
  map<SdpUInt, repeated CmdIDNum> mReward = 5;
}

message CmdActCommonCfgSoloRaid {
  uint32 iBossId = 1;
  uint32 iSettleTime = 2;
}

message CmdActCommonCfgSurveyReward {
  map<SdpUInt, CmdActCfgSurveyRewardReward> mReward = 1;
}

message CmdActCommonCfgSystemSwitch {
  map<SdpUInt, CmdActCfgSystemSwitchSystemCfg> mSystemCfg = 1;
}

message CmdActCommonCfgTimelineJump {
  repeated CmdIDNum vReward = 1;
}

message CmdActCommonCfgVoucherControl {
  SdpString sJumpLink = 1;
  repeated CmdActCfgVoucherControlControlCfg vControlCfg = 2;
}

message CmdActCommonQuest_Status {
  uint32 iActivityId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
  repeated SdpUInt vTakenDailyReward = 4;
  repeated SdpUInt vTakenFinalReward = 5;
  repeated CmdQuest vQuest = 6;
  repeated SdpUInt vOver = 7;
}

message CmdActConsumeReward_Status {
  repeated SdpUInt vTakenReward = 1;
  uint32 iPoint = 2;
}

message CmdActDailyGiftNew_Status {
  map<SdpUInt, CmdDailyGiftNewProduct> mProducts = 1;
  repeated CmdDailyGiftNewProduct vSelectGift = 2;
  uint32 iRefreshTimes = 3;
}

message CmdActEmergencyGift_Status {
  uint32 iActivityId = 1;
  repeated SdpUInt vNeedRandGiftId = 2;
  repeated CmdActEmergencyGiftProduct vProductInfo = 3;
}

message CmdActEmergencyGiftBuyParam {
  uint32 iActivityId = 1;
  SdpString sExtraData = 2;
}

message CmdActEmergencyGiftProduct {
  uint32 iGiftID = 1;
  SdpString sProductId = 2;
  uint32 iSubProductId = 3;
  uint32 iTriggerTime = 4;
  uint32 iBuyTimes = 5;
}

message CmdActExploreUnitData {
  int64 iID = 1;
  int64 iState = 2;
  float fPosX = 3;
  float fPosY = 4;
  float fPosZ = 5;
  float fRotation = 6;
  map<SdpString, SdpInt> mCounters = 7;
  int64 iCfgID = 8;
}

message CmdActGachaJump_Status {
  bool bRecivedOrderAward = 1;
}

message CmdActivityData {
  uint32 iActivityId = 1;
  uint32 iActivityType = 2;
  SdpString sTitle = 3;
  SdpString sBriefDesc = 4;
  SdpString sDetailDesc = 5;
  SdpString sIcon = 6;
  SdpString sJumpURL = 7;
  SdpString sJumpUI = 8;
  bool bIsTop = 9;
  bool bIsMajor = 10;
  uint32 iBeginTime = 11;
  uint32 iEndTime = 12;
  uint32 iShowTimeBegin = 13;
  uint32 iShowTimeEnd = 14;
  uint32 iMinLevel = 15;
  uint32 iMaxLevel = 16;
  bool bShowInList = 17;
  bool bHideJumpButton = 18;
  SdpString sDetailPic = 19;
  uint32 iJumpType = 20;
  SdpString sStatusDataSdp = 21;
  uint32 iCornerMarkType = 22;
  SdpString sDesignerRemark = 23;
  bool bShowOnLogin = 24;
  map<SdpString, SdpString> mMultiLanguage = 25;
  uint32 iActivityCategory = 26;
  bool bIsRecommend = 27;
  uint32 iRecommendDays = 28;
  uint32 iActivityPriority = 29;
  map<SdpString, SdpString> mDownloadPicture = 30;
  map<SdpUInt, SdpUInt> mRelativeActivityId = 31;
  SdpString sLoginAdvertisementParamLua = 32;
  CmdActivityMainCityIcon stMainCityIcon = 33;
  uint32 iActivityPicPos = 34;
  SdpString sActivityPic = 35;
  uint32 iMarkType = 36;
  bool bShowTimer = 37;
  bool bShowReddot = 38;
  uint32 iEntry = 39;
  CmdActivityShopParam stShopParam = 40;
  SdpString sBriefDescImg = 41;
  map<SdpString, CmdSubTitile> mSubTitle = 42;
  SdpString sBriefDescImgLua = 43;
  SdpString sActBanner = 44;
  uint32 iActivitySpecialPriority = 45;
  uint32 iStageMin = 46;
  uint32 iStageMax = 47;
  SdpString sBuildingUi = 48;
  uint32 iPriority = 49;
  SdpString sBuildingAction = 50;
  SdpString sBuildingEdge = 51;
  uint32 iShowReddotNew = 52;
  uint32 iMainClassId = 53;
  SdpString sBuildingUnlockTxt = 54;
  SdpString sPageTitle = 55;
  uint32 iRegDayBegin = 56;
  uint32 iRegDayEnd = 57;
  SdpString sBuildingLinkCover = 58;
  SdpString sSdpConfig = 59;
  map<SdpString, SdpString> mCfgMultiLanguage = 60;
  map<SdpString, SdpString> mDownloadPictureCDN = 61;
  SdpString sJumpParam = 62;
  repeated SdpUInt vLanguageId = 63;
}

message CmdActivityMainCityIcon {
  SdpString sIcon = 1;
  SdpString sName = 2;
  uint32 iPrior = 3;
  uint32 iDisplayType = 4;
  bool bEffect = 5;
  uint32 iPosType = 6;
}

message CmdActivityRankInfo {
  uint64 iUid = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  bool bDisplayGender = 4;
  uint32 iValue = 5;
  uint64 iAllianceId = 6;
  uint32 iAllianceBadge = 7;
  SdpString sAllianceName = 8;
  uint32 iPost = 9;
  SdpString sFBFaceId = 10;
  uint32 iHeadId = 11;
  uint32 iHeadFrameId = 12;
  uint32 iHeadFrameExpireTime = 13;
}

message CmdActivityReceiveRewardStatus {
  map<SdpUInt, SdpUInt> mReceive = 1;
  map<SdpUInt, SdpUInt> mServerReceive = 2;
}

message CmdActivityShopParam {
  SdpString sPic = 1;
  SdpString sDesc = 2;
  bool bShowInShop = 3;
}

message CmdActivityStatus {
  uint32 iActivityId = 1;
  uint32 iActivityType = 2;
  SdpString sStatusDataSdp = 3;
}

message CmdActLevelAward_Status {
  repeated CmdQuest vQuest = 1;
}

message CmdActLoginSelect_Status {
  uint32 iActivityId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
  uint32 iLoginNum = 4;
  uint32 iSelectIndex = 5;
}

message CmdActLoginSendItem_Status {
  uint32 iTakeNum = 1;
}

message CmdActNewDirectPushGift {
  SdpString sProductId = 1;
  uint32 iProductSubId = 2;
  uint32 iGiftEndTime = 3;
  uint32 iLeftBuyTimes = 4;
  SdpString sDiscount = 5;
  SdpString sHeroBackground = 6;
  uint32 iGiftType = 7;
  uint32 iCondId = 8;
  SdpString sBuyReason = 9;
  bool bDirectPop = 10;
  uint32 iGiftId = 11;
  repeated CmdIDNum vItem = 12;
  bool bNewStyle = 13;
}

message CmdActNewDirectPushGift_Status {
  repeated CmdActNewDirectPushGift vAllGift = 1;
}

message CmdActPayStore_Status {
  uint32 iActivityId = 1;
  map<SdpUInt, CmdActPayStoreInfo> mStore = 2;
}

message CmdActPayStoreBuyParam {
  uint32 iActivityId = 1;
  uint32 iStoreId = 2;
  uint32 iGoodsId = 3;
}

message CmdActPayStoreGoods {
  uint32 iGoodsId = 1;
  uint32 iBuyTimes = 2;
}

message CmdActPayStoreInfo {
  uint32 iRefreshTime = 1;
  map<SdpUInt, CmdActPayStoreGoods> mGoods = 2;
}

message CmdActPersonalChatWeb_Status {
  uint64 iLastShareTime = 1;
}

message CmdActPickupGift_Status {
  map<SdpUInt, CmdActPickupGiftInfo> mGift = 1;
}

message CmdActPickupGiftBuyParam {
  uint32 iActivityId = 1;
  map<SdpUInt, SdpUInt> mGridRewardIndex = 2;
}

message CmdActPickupGiftInfo {
  uint32 iBoughtNum = 1;
  map<SdpUInt, SdpUInt> mGridRewardIndex = 2;
}

message CmdActPreUpgrade_Status {
  SdpString sCurrentVersion = 1;
  SdpString sTargetVersion = 2;
  SdpString sResPatchURL = 3;
  uint32 iCdnVersion = 4;
}

message CmdActPushGift_Status {
  uint32 iActivityId = 1;
  repeated CmdActPushGiftInfo vPushGift = 2;
}

message CmdActPushGiftBuyParam {
  uint32 iActivityId = 1;
  SdpString sExtraData = 2;
}

message CmdActPushGiftInfo {
  uint32 iActivityID = 1;
  uint32 iGroupIndex = 2;
  repeated SdpUInt vGiftIndex = 3;
  uint32 iExpireTime = 4;
  uint32 iSubProductID = 5;
  uint32 iTriggerParam = 6;
  uint32 iTotalRecharge = 7;
}

message CmdActRecharge_IAPLimitStatus {
  repeated CmdActRecharge_IAPLimitStatusItem vProductLimit = 1;
  uint32 iBeginTimeForRoll = 2;
  uint32 iLastLimitRefreshTime = 3;
  uint32 bFreeRewarded = 4;
  map<SdpUInt, SdpUInt> mGiftStatus = 5;
  uint32 iInitTime = 6;
}

message CmdActRecharge_IAPLimitStatusItem {
  SdpString sProductId = 1;
  uint32 iUsedDayLimit = 2;
  uint32 iUsedServerLimit = 3;
  uint32 iUsedRoleLimit = 4;
  uint32 iProductSubId = 5;
}

message CmdActRecharge_IAPNewbieLuckyStatus {
  SdpString sProductId = 1;
  uint32 iEndShowTime = 2;
}

message CmdActRecharge_IAPPhaseGiftStatus {
  SdpString sProductId = 1;
  uint32 iStartCDTime = 2;
  uint32 iStartShowTime = 3;
  uint32 iCDType = 4;
}

message CmdActRechargeRebate_Status {
  uint32 iRabateTime = 1;
}

message CmdActReturnSign_Status {
  uint32 iActivityId = 1;
  uint32 iOpenTime = 2;
  uint32 iCloseTime = 3;
  uint32 iLoginDay = 4;
  uint32 iMaxAwardedDays = 5;
}

message CmdActSign_Status {
  uint32 iActivityId = 1;
  uint32 iBeginTime = 2;
  uint32 iEndTime = 3;
  uint32 iActDay = 4;
  uint32 iSignNum = 5;
  bool bSignToday = 6;
  bool bStageRestrict = 7;
}

message CmdActSignGift_Status {
  uint32 iActivityId = 1;
  uint32 iLatestGiftBuyTime = 2;
  uint32 iBuyTimes = 3;
  uint32 iLoginDays = 4;
  uint32 iMaxAwardedDays = 5;
}

message CmdActSignGiftBuyParam {
  uint32 iActivityId = 1;
}

message CmdActSurveyReward_Status {
  uint32 iActivityId = 1;
  map<SdpUInt, SdpUInt> mSendReward = 2;
}

message CmdActTimelineJump_Status {
  bool bIsRewarded = 1;
}

message CmdAfk {
  uint32 iAfkLevel = 1;
  uint32 iAfkExp = 2;
  uint32 iSeeRewardTime = 3;
  uint32 iTakeRewardTime = 4;
  uint32 iInstantTimes = 5;
  map<SdpUInt, SdpUInt> mReward = 6;
}

message CmdAllAttract {
  map<SdpUInt, CmdHeroAttract> mHeroAttract = 1;
  CmdCouncil stCouncil = 2;
}

message CmdAllianceApplyerData {
  PlayerIDType stRoleId = 1;
  SdpString sRoleName = 2;
  uint32 iLevel = 3;
  uint32 iPower = 4;
  uint32 iHeadId = 5;
  uint32 iHeadFrameId = 6;
  uint32 iHeadFrameExpireTime = 7;
}

message CmdAllianceBattleData {
  uint32 iActivityId = 1;
  uint32 iBattleId = 2;
  uint32 iCurRound = 3;
  map<SdpUInt, CmdAllianceBoss> mBoss = 4;
  uint64 iTotalDamage = 5;
}

message CmdAllianceBattleHeroRecord {
  uint32 iHeroId = 1;
  uint32 iLevel = 2;
  uint32 iFashion = 3;
}

message CmdAllianceBattleHistory {
  uint32 iTime = 1;
  PlayerIDType stRoleId = 2;
  SdpString sName = 3;
  uint32 iBossId = 4;
  uint32 iRound = 5;
  uint64 iRealDamage = 6;
  bool bKill = 7;
  uint64 iDamage = 8;
  repeated CmdAllianceBattleHeroRecord vHero = 9;
}

message CmdAllianceBattleRankItem {
  CmdAllianceBriefData stBriefInfo = 1;
  uint32 iRank = 2;
  uint64 iScore = 3;
}

message CmdAllianceBoss {
  uint32 iBossId = 1;
  uint32 iLastTime = 2;
  uint64 iBossHp = 3;
  bool bKill = 4;
  PlayerIDType stLastRole = 5;
}

message CmdAllianceBriefData {
  uint64 iAllianceId = 1;
  SdpString sName = 2;
  uint32 iCreateTime = 3;
  uint32 iLevel = 4;
  uint32 iCurrMemberCount = 5;
  uint32 iCountryId = 6;
  uint32 iLanguageId = 7;
  uint32 iBadgeId = 8;
  uint32 iJoinType = 9;
  uint32 iJoinLevel = 10;
  PlayerIDType stMaster = 11;
  uint32 iTotalActive = 12;
  uint32 iSevenActive = 13;
  SdpString sRecruit = 14;
  uint32 iLastBattleRank = 15;
  uint32 iLastBattleRankCount = 16;
  uint32 iLastBattleRankTime = 17;
}

message CmdAllianceData {
  CmdAllianceBriefData stBriefData = 1;
  SdpString sBulletin = 2;
  repeated CmdAllianceMemberData vMember = 3;
  bool bHaveNewApply = 4;
  uint32 iCurrDevelopment = 5;
  uint32 iTransferEffectTime = 6;
  PlayerIDType stNewTransferMaster = 7;
}

message CmdAllianceHistory {
  uint32 iType = 1;
  uint32 iTime = 2;
  PlayerIDType stOperator = 3;
  PlayerIDType stMember = 4;
  SdpString sOperatorName = 5;
  SdpString sMemberName = 6;
  uint32 iLevel = 7;
  map<SdpString, SdpString> mParam = 8;
}

message CmdAllianceInviteInfo {
  CmdAllianceBriefData stBriefInfo = 1;
  CmdAllianceInviteUser stInviteUser = 2;
}

message CmdAllianceInviteUser {
  PlayerIDType stRoleId = 1;
  SdpString sRoleName = 2;
  uint32 iLevel = 3;
  uint32 iPost = 4;
  uint32 iInviteTime = 5;
  uint32 iHeadId = 6;
  uint32 iHeadFrameId = 7;
  uint32 iHeadFrameExpireTime = 8;
}

message CmdAllianceMemberActive {
  uint32 iTime = 1;
  uint32 iActive = 2;
}

message CmdAllianceMemberData {
  PlayerIDType stRoleId = 1;
  SdpString sRoleName = 2;
  uint32 iLevel = 3;
  uint32 iPost = 4;
  uint32 iLastLogoutTime = 5;
  uint32 iJoinTime = 6;
  bool bOnline = 7;
  uint32 iCountryId = 8;
  uint32 iTotalActive = 9;
  uint32 iTodayActive = 10;
  uint32 iPower = 11;
  uint32 iHeadId = 12;
  uint32 iHeadFrameId = 13;
  uint32 iHeadFrameExpireTime = 14;
}

message CmdAncient {
  uint32 iCurHero = 1;
  map<SdpUInt, CmdAncientHero> mSummonHero = 2;
  repeated CmdQuest vQuest = 3;
  uint32 iRefreshTimes = 4;
}

message CmdAncientHero {
  uint32 iHeroId = 1;
  uint32 iCurEnergy = 2;
  uint32 iSummonTimes = 3;
}

message CmdAntiCheatAllStat {
  CmdAntiCheatSideStat stMyStat = 1;
  CmdAntiCheatSideStat stEnemyStat = 2;
  uint32 iUsedTime = 3;
}

message CmdAntiCheatHeroStat {
  uint32 iHeroId = 1;
  uint64 iMaxDamage = 2;
  uint64 iAvgDamage = 3;
  uint64 iHPBeforeHurt = 4;
}

message CmdAntiCheatSideStat {
  map<SdpUInt, CmdAntiCheatHeroStat> mHeroStat = 1;
}

message CmdAttr {
  uint32 iMaxHp = 1;
  uint32 iAttack = 2;
  uint32 iPhyDefence = 3;
  uint32 iMagDefence = 4;
  uint32 iAttackSpeed = 5;
  uint32 iLv_MaxHp_Rate = 6;
  uint32 iLv_Attack_Rate = 7;
  uint32 iLv_PhyDefence_Rate = 8;
  uint32 iLv_MagDefence_Rate = 9;
  uint32 iCrit_Rate = 10;
  uint32 iAntiCrit_Rate = 11;
  uint32 iCrit_Ratio = 12;
  uint32 iAntiCrit_Ratio = 13;
  uint32 iAllPntrate_Rate = 14;
  uint32 iAntiAllPntrate_Rate = 15;
  uint32 iPhyPntrate_Rate = 16;
  uint32 iMagPntrate_Rate = 17;
  uint32 iAntiPhyPntrate_Rate = 18;
  uint32 iAntiMagPntrate_Rate = 19;
  uint32 iAllDmg_AddRate = 20;
  uint32 iAllDmg_ReduceRate = 21;
  uint32 iPhyDmg_AddRate = 22;
  uint32 iPhyDmg_ReduceRate = 23;
  uint32 iMagDmg_AddRate = 24;
  uint32 iMagDmg_ReduceRate = 25;
  uint32 iCure_Rate = 26;
  uint32 iBearCure_Rate = 27;
  uint32 iCureCrit_Rate = 28;
  uint32 iBearCureCrit_Rate = 29;
  uint32 iCureCrit_Ratio = 30;
  uint32 iBearCureCrit_Ratio = 31;
  uint32 iAnger_Rate = 32;
  uint32 iHpRecover_Rate = 33;
  uint32 iDraw_Rate = 34;
  uint32 iBonusDmg_Add = 35;
  uint32 iBonusDmg_Reduce = 36;
  uint32 iShield_Rate = 37;
  uint32 iMoveSpeed = 38;
  uint32 iInitialEnergy = 39;
  uint32 iGetEnergySpeed = 40;
  uint32 iHp = 41;
  uint32 iAnger = 42;
  uint32 iMaxAnger = 43;
  uint32 iMobInitialLifeTime = 44;
  uint32 iMobRemainLifeTime = 45;
  uint32 iAttackEnergyRate = 46;
  uint32 iDotDmg_ReduceRate = 47;
  uint32 iAttackDmg_Add = 48;
  uint32 iOgiDmg_Add = 49;
  uint32 iDebuffDmg_Add = 50;
  uint32 iCtrlDmg_Add = 51;
  uint32 iBuffTime_Add = 52;
  uint32 iDebuffTime_Add = 53;
  uint32 iAttackDmg_ReduceRate = 54;
  uint32 iSkillDmg_Add = 55;
  uint32 iSkillDmg_Reduce = 56;
  uint32 iOgiDmg_Reduce = 57;
  uint32 iDotDmg_Add = 58;
  uint32 iDebuffDmg_Reduce = 59;
  uint32 iCtrlDmg_Reduce = 60;
  uint32 iFinalDamage_Add = 61;
  uint32 iFinalDamage_Reduce = 62;
}

message CmdBaseStoreBuyParam {
  uint32 iStoreId = 1;
  uint32 iGoodsId = 2;
}

message CmdBaseStoreChapter {
  map<SdpUInt, CmdBaseStoreChapterGoods> mChapter = 1;
}

message CmdBaseStoreChapterGoods {
  uint32 iGoodsId = 1;
  uint32 iBuyTime = 2;
  uint32 iLevel = 3;
  map<SdpUInt, CmdBaseStoreChapterLevel> mLevelInfo = 4;
}

message CmdBaseStoreChapterLevel {
  uint32 iRewardTime = 1;
}

message CmdBaseStoreMonthlyCard {
  map<SdpUInt, CmdBaseStoreMonthlyCardGoods> mMonthlyCard = 1;
}

message CmdBaseStoreMonthlyCardGoods {
  uint32 iCardId = 1;
  uint32 iBuyTime = 2;
  uint32 iExpireTime = 3;
  uint32 iLastRewardTime = 4;
  uint32 iTotalRewardTimes = 5;
  uint32 iTotalBuyTimes = 6;
}

message CmdBulletinInfo {
  uint32 iBulletinId = 1;
  SdpString sTitle = 2;
  SdpString sContent = 3;
  uint32 iDisplayNum = 4;
  uint32 iDisplayGrade = 5;
  SdpString sLuaVersion = 6;
  repeated CmdBulletinTitleContent vContent = 7;
  uint32 iMaintainRemainSecs = 8;
  SdpString sHyperlink = 9;
  SdpString sHyperlinkName = 10;
}

message CmdBulletinTitleContent {
  SdpString sTitle = 1;
  SdpString sContent = 2;
}

message CmdChatArenaBattleFightReport {
  uint32 iZoneId = 1;
  uint64 iReportId = 2;
}

message CmdChatGroup {
  uint64 iGroupId = 1;
  uint64 iCreateUid = 2;
  uint32 iCreateTime = 3;
  SdpString sName = 4;
  repeated CmdRoleSimpleInfo vMember = 5;
  repeated CmdChatInfo vChat = 6;
  bool bOpenPush = 7;
}

message CmdChatInfo {
  uint64 iUid = 1;
  SdpString sName = 2;
  uint32 iChannel = 3;
  SdpString sMessage = 4;
  uint32 iTime = 5;
  uint32 iVipLevel = 6;
  SdpString sAlliance = 7;
  uint32 iTemplateId = 8;
  map<SdpString, SdpString> mParam = 9;
  uint64 iFightReportId = 10;
  uint32 iFightType = 11;
  uint32 iChatUid = 12;
  uint32 iCountryId = 13;
  bool bSys = 14;
  uint64 iAllianceId = 15;
  bool bDisplayVip = 16;
  CmdRoleSimpleInfo stSharedRole = 17;
  CmdAllianceBriefData stSharedAlliance = 18;
  CmdMailFightReport stMailFightReport = 19;
  uint32 iValidEndTime = 20;
  repeated CmdChatArenaBattleFightReport vArenaBattleReportId = 21;
  uint64 iGroupId = 22;
  uint32 iRoleLanguageId = 23;
  SdpString sFacePath = 24;
  uint32 iPost = 25;
  uint32 iZoneId = 26;
  SdpString sZoneName = 27;
  uint32 iGender = 28;
  uint64 iRoomId = 29;
  uint64 iExcludeUid = 30;
  bool bDisplayGender = 31;
  bool bCrossBattle = 32;
  uint32 iLevel = 33;
  CmdHeroData stShareHero = 34;
  uint32 iFightReportZoneId = 35;
  PlayerIDType stToRoleId = 36;
  bool bSysMessage = 37;
  SdpString sFBFaceId = 38;
  uint32 iMaxPassStageId = 39;
  uint32 iHeadId = 40;
  uint32 iHeadFrameId = 41;
  uint32 iHeadFrameExpireTime = 42;
}

message CmdChatLanguage {
  uint32 iLanguageId = 1;
  repeated CmdChatLanguageGroup vGroup = 2;
}

message CmdChatLanguageGroup {
  uint64 iGroupId = 1;
  uint32 iRoleNum = 2;
}

message CmdCirculationItem {
  uint32 iTypeID = 1;
  uint32 iLevel = 2;
  uint32 iExp = 3;
}

message CmdClientData {
  uint32 iExpireTime = 1;
  uint32 iActId = 2;
  SdpString sClientData = 3;
}

message CmdConstella {
  map<SdpUInt, repeated SdpUInt> mUnlockStar = 1;
}

message CmdCouncil {
  repeated SdpUInt vDailyIssue = 1;
  uint32 iChosenIssue = 2;
  repeated SdpUInt vFinishIssue = 3;
  repeated SdpUInt vHero = 4;
  uint32 iStartTime = 5;
}

message CmdCouncilHeroResult {
  uint32 iHeroId = 1;
  uint32 iAddExp = 2;
  uint32 iAttractExp = 3;
  uint32 iResultType = 4;
}

message CmdDailyGiftNewProduct {
  uint32 iSubIndex = 1;
  uint32 iNum = 2;
  bool bManual = 3;
}

message CmdDeserializeIn {
  SdpString sLog = 1;
}

message CmdDeserializeOut {
  SdpString sLog = 1;
}

message CmdDispatchEvent {
  uint32 iGroupId = 1;
  uint32 iEventId = 2;
  uint32 iRefreshTime = 3;
  uint32 iStartTime = 4;
  uint32 iRewardTime = 5;
  repeated SdpUInt vHero = 6;
  uint32 iFirstStartTime = 7;
}

message CmdEquip {
  uint64 iEquipUid = 1;
  uint32 iBaseId = 2;
  uint32 iHeroId = 3;
  uint32 iLevel = 4;
  uint32 iExp = 5;
  uint32 iOverloadHero = 6;
  map<SdpUInt, CmdEquipEffect> mOverloadEffect = 7;
  map<SdpUInt, CmdEquipEffect> mChangingEffect = 8;
}

message CmdEquipEffect {
  uint32 iGroupId = 1;
  uint32 iEffectLevel = 2;
  bool bLock = 3;
}

message CmdFightBuffInfo {
  uint32 iCamp = 1;
  uint32 iBuffId = 2;
  uint32 iHeroId = 3;
  uint32 iBuffType = 4;
}

message CmdFightCommonPassthrough {
  map<SdpUInt, CmdFightingUnit> mFightingUnit = 1;
  uint32 iInitPower = 2;
  map<SdpUInt, CmdFightingMonster> mFightingMonster = 3;
  repeated CmdFightBuffInfo vBuffInfo = 4;
  repeated SdpUInt vMonsterGroupList = 5;
  repeated SdpUInt vMoonList = 6;
  repeated SdpUInt vRookieQuest = 7;
  uint32 iGlobalEnergy = 8;
  map<SdpUInt, XDictionary<SdpUInt, SdpUInt>> mRogueRecord = 9;
  map<SdpUInt, SdpUInt> mSimpleParam = 10;
}

message CmdFightingHero {
  uint32 iStar = 1;
  uint32 iPosition = 2;
  CmdAttr stAttr = 3;
}

message CmdFightingMonster {
  uint32 iID = 1;
  uint64 iHp = 2;
  uint32 iEnergy = 3;
  uint64 iMaxHp = 4;
}

message CmdFightingUnit {
  uint32 iGroupId = 1;
  CmdAttr stAttr = 2;
  CmdFormHero stFormHero = 3;
  bool bNpcFormationPlayer = 4;
}

message CmdFightLegacyStageParam {
  uint32 iWarningNum = 1;
}

message CmdFightPassthrough {
  map<SdpUInt, CmdFightingHero> mFightingHero = 1;
  repeated SdpUInt vDeadHero = 2;
  CmdFightCommonPassthrough stCommonPassthrough = 3;
}

message CmdFightReport {
  uint64 iFightUid = 1;
  uint64 iFightId = 2;
  SdpString sCSharpMd5 = 3;
  uint32 iFightType = 4;
  uint32 iFightSubType = 5;
  uint32 iZoneId = 6;
  uint64 iRoleId = 7;
  uint32 iBeginTime = 8;
  SdpString sVersion = 9;
  CmdFightVerifyInput stVerifyInput = 10;
  CmdFightVerifyOutput stVerifyOutput = 11;
  bool bClientErr = 12;
}

message CmdFightReportOwnerInfo {
  uint64 iRoleId = 1;
  uint64 iAllianceId = 2;
  SdpString sAllianceName = 3;
  uint32 iAllianceBadge = 4;
}

message CmdFightReportSimple {
  SdpString sVersion = 1;
  uint32 iFightType = 2;
  uint32 iFightSubType = 3;
  uint64 iFightId = 4;
  uint32 iScore = 5;
  CmdStageCampDataSimple stAttackerCamp = 6;
  CmdStageCampDataSimple stDefenserCamp = 7;
  uint64 iRoleId = 8;
  repeated CmdHeroFightDamage vAttackerHeroDamage = 9;
  repeated CmdHeroFightDamage vDefenserHeroDamage = 10;
  uint64 iFightReportId = 11;
  uint32 iTime = 12;
}

message CmdFightRoleOpt {
  uint32 iTick = 1;
  uint32 iOpType = 2;
  repeated SdpInt vParam = 3;
}

message CmdFightSystemInfo {
  uint32 iThreadId = 1;
  uint32 iDebugLogType = 2;
  uint32 iDebugLogSizeLimit = 3;
}

message CmdFightVerifyData {
  CmdFightVerifyInfo stVerifyInfo = 1;
  CmdFightVerifyResult stVerifyResult = 2;
  CmdFightVerifyInput stVerifyInput = 3;
  CmdFightVerifyOutput stVerifyOutputSer = 4;
  CmdFightVerifyOutput stVerifyOutputCli = 5;
  CmdMultiFightTestInfo stMultiFightTestInfo = 6;
}

message CmdFightVerifyDebugInfo {
  SdpString sError = 1;
  int64 iErrorType = 2;
  SdpString sDebugInfo = 3;
  uint32 iRealCostTime = 4;
}

message CmdFightVerifyInfo {
  uint32 iFightId = 1;
  uint64 iFightUid = 2;
  uint32 iFightType = 3;
  uint32 iFightSubType = 4;
  SdpString sCSharpMd5 = 5;
  bool bOnlyServerRun = 6;
  bool bNeedVerify = 7;
  SdpString sVersion = 8;
  uint32 iBeginTime = 9;
  uint64 iClientFightUid = 10;
  bool bSkipFight = 11;
}

message CmdFightVerifyInput {
  uint32 iWorldID = 1;
  uint32 iAreaID = 2;
  uint32 iRandomNum = 3;
  uint32 iFightType = 4;
  uint32 iFightSubType = 5;
  CmdFormationInfo stFormationInfo = 6;
  uint64 iFightUid = 7;
  CmdFightCommonPassthrough stCommonPassthrough = 8;
  repeated CmdFightRoleOpt vFinishOpt = 9;
  CmdFightSystemInfo stSystemInfo = 10;
  CmdFightLegacyStageParam stLegacyStageParam = 11;
  uint32 iFightId = 12;
}

message CmdFightVerifyOutput {
  uint64 iScore = 1;
  uint32 iFrameTime = 2;
  CmdFightVerifyDebugInfo stDebugInfo = 3;
  CmdFightPassthrough stPassthrough = 4;
  bool bWin = 5;
}

message CmdFightVerifyResult {
  int64 iVerifyReturnValue = 1;
  repeated SdpString vCheatReason = 2;
  uint64 iFightUid = 3;
  uint64 iClientFightUid = 4;
  uint64 iVerifyWaitTimeMS = 5;
  uint64 iVerifyRealUsedTimeMS = 6;
  int64 iCSharpReturnValue = 7;
  int32 iFightResultType = 8;
  int64 iCheatType = 9;
  int32 iOverloadType = 10;
}

message CmdFinishChallengeInfoCS {
  uint32 iFightId = 1;
  uint64 iFightUid = 2;
  uint32 iFightType = 3;
  uint32 iFightSubType = 4;
  SdpString sCSharpMd5 = 5;
  CmdFightVerifyInput stVerifyInput = 6;
  CmdFightVerifyOutput stVerifyOutputCli = 7;
  CmdMultiFightTestInfo stMultiFightTestInfo = 8;
  bool bClientErr = 9;
  bool bSkipFight = 10;
  SdpString sLogFightDataForReport = 11;
}

message CmdFinishChallengeInfoSC {
  repeated CmdIDNum vReward = 1;
  repeated CmdIDNum vExtraReward = 2;
  repeated CmdIDNum vFirstPassReward = 3;
  CmdFightVerifyInfo stVerifyInfo = 4;
  CmdFightVerifyResult stVerifyResult = 5;
  CmdMultiFightTestInfo stMultiFightTestInfo = 6;
  bool bWin = 7;
}

message CmdForm {
  repeated CmdFormHero vHero = 1;
  uint32 iPower = 2;
  repeated SdpUInt vStarUp = 3;
  repeated SdpUInt vCardHeroID = 4;
}

message CmdFormationInfo {
  map<SdpUInt, CmdHeroData> mCmdHero = 1;
  map<SdpUInt, CmdHeroData> mEnemyCmdHero = 2;
  CmdForm stEnemyForm = 3;
  repeated CmdFormHero vFormHero = 4;
  bool bAutoSkill = 5;
  CmdForm stMyForm = 6;
  repeated CmdFormHero vFormNPC = 7;
}

message CmdFormHero {
  uint32 iHeroId = 1;
  uint32 iPos = 2;
  uint32 iRow = 3;
  uint32 iType = 4;
  uint32 iUnitID = 5;
  uint32 iStar = 6;
}

message CmdFormPreset {
  repeated SdpUInt vHeroId = 1;
  uint32 iPower = 2;
}

message CmdFriendInfo {
  uint32 iLevel = 1;
  SdpString sName = 2;
  uint32 iLoginTime = 3;
  uint32 iLogoutTime = 4;
  PlayerIDType stRoleId = 5;
  SdpString sFBFaceId = 6;
  uint32 iCountryId = 7;
  uint32 iGender = 8;
  bool bDisplayGender = 9;
  uint64 iAllianceId = 10;
  SdpString sAllianceName = 11;
  uint32 iPower = 12;
  uint32 iHeadId = 13;
  uint32 iHeadFrameId = 14;
  uint32 iHeadFrameExpireTime = 15;
}

message CmdGachaPool {
  uint32 iGachaId = 1;
  uint32 iGachaTimes = 2;
  repeated SdpUInt vWishList = 3;
  uint32 iDailyTimes = 4;
  uint32 iCheapTimes = 5;
  uint32 iFreeTimes = 6;
  uint32 iFreeTimesTen = 7;
  repeated SdpUInt vTakenStepSeq = 8;
}

message CmdGachaRecord {
  uint32 iTime = 1;
  repeated SdpUInt vItem = 2;
  uint32 iGachaId = 3;
}

message CmdHeroAttract {
  uint32 iHeroId = 1;
  uint32 iAttractExp = 2;
  repeated SdpUInt vRewardStory = 3;
  repeated SdpUInt vSendGift = 4;
  repeated SdpUInt vSawStory = 5;
  uint32 iTouchTimes = 6;
  map<SdpUInt, CmdLetter> mLetter = 7;
}

message CmdHeroBriefData {
  uint32 iHeroId = 1;
  uint32 iBaseId = 2;
  uint32 iLevel = 3;
  uint32 iBreak = 4;
  uint32 iPower = 5;
  uint64 iMaxHP = 6;
  map<SdpUInt, CmdEquip> mEquip = 7;
  map<SdpUInt, SdpUInt> mSkill = 8;
  uint32 iFashion = 9;
}

message CmdHeroData {
  uint32 iHeroId = 1;
  uint32 iBaseId = 2;
  uint32 iLevel = 3;
  uint32 iTime = 4;
  uint32 iBreak = 5;
  uint32 iPower = 6;
  map<SdpUInt, CmdAttr> mHeroAttr = 7;
  map<SdpUInt, CmdEquip> mEquip = 8;
  map<SdpUInt, SdpUInt> mSkill = 9;
  uint32 iOriLevel = 10;
  bool bLove = 11;
  uint32 iAttractRank = 12;
  CmdLegacy stLegacy = 13;
  uint32 iFashion = 14;
}

message CmdHeroEquipData {
  uint32 iBaseId = 1;
  uint32 iParentBaseId = 2;
}

message CmdHeroFightDamage {
  uint32 iId = 1;
  uint32 iDamage = 2;
}

message CmdHeroFightData {
  uint32 iCurrHP = 1;
}

message CmdHunting {
  uint32 iActivityId = 1;
  map<SdpUInt, CmdHuntingBoss> mBoss = 2;
  uint32 iRankGroupId = 3;
}

message CmdHuntingBoss {
  uint32 iBossId = 1;
  uint64 iDamage = 2;
  repeated SdpUInt vBuff = 3;
  repeated SdpUInt vTaken = 4;
}

message CmdHuntingBossRecord {
  repeated CmdHuntingRecordHero vRecordHero = 1;
  repeated SdpUInt vRecordBuff = 2;
}

message CmdHuntingRankItem {
  CmdRoleSimpleInfo stRoleSimple = 1;
  uint32 iRank = 2;
  uint64 iValue = 3;
}

message CmdHuntingRecordHero {
  uint32 iHeroId = 1;
  uint32 iBreak = 2;
  uint32 iType = 3;
  uint32 iFashion = 4;
}

message CmdIDNum {
  uint32 iID = 1;
  uint32 iNum = 2;
}

message CmdIDNumWeight {
  uint32 iID = 1;
  uint32 iNum = 2;
  uint32 iWeight = 3;
}

message CmdInheritGrid {
  uint32 iHeroId = 1;
  uint32 iCdTime = 2;
}

message CmdItemData {
  uint64 iItemUid = 1;
  uint32 iBaseId = 2;
  uint32 iNum = 3;
}

message CmdLegacy {
  uint32 iLegacyId = 1;
  uint32 iLevel = 2;
  repeated SdpUInt vEquipBy = 3;
}

message CmdLegacyStageChapter {
  uint32 iChapterId = 1;
  bool bRewardTaken = 2;
}

message CmdLegacyStageGame {
  repeated SdpUInt vPassedMonster = 1;
  repeated CmdLegacyStageGameRound vRound = 2;
}

message CmdLegacyStageGameRound {
  repeated CmdLegacyStageGameStep vStep = 1;
}

message CmdLegacyStageGameStep {
  uint32 iStepType = 1;
  int64 iEntityID = 2;
  int64 iPosX = 3;
  int64 iPosY = 4;
  int64 iExternValue1 = 5;
  int64 iExternValue2 = 6;
  int64 iExternValue3 = 7;
}

message CmdLegacyStageLevel {
  uint32 iLevelId = 1;
  uint32 iPassTimes = 2;
}

message CmdLetter {
  uint32 iLetterId = 1;
  uint32 iArchiveId = 2;
  uint32 iCurStep = 3;
  repeated SdpUInt vReply = 4;
  repeated SdpUInt vRewardStep = 5;
  uint32 iStartTime = 6;
  CmdQuest stQuest = 7;
}

message CmdLostStory {
  uint32 iStoryId = 1;
  repeated SdpUInt vSectionId = 2;
  uint32 iRewardTime = 3;
}

message CmdMailFightHero {
  uint32 iHeroId = 1;
  uint32 iBaseId = 2;
  uint32 iBreak = 3;
  uint32 iLevel = 4;
  uint32 iHPPercent = 5;
}

message CmdMailFightReport {
  CmdMailFightSide stAttackSide = 1;
  CmdMailFightSide stDefendSide = 2;
  uint64 iFightReportId = 3;
  repeated CmdIDNum vItem = 4;
  repeated CmdMailFightSide vAttackSide = 5;
  bool bCrossBattle = 6;
}

message CmdMailFightSide {
  uint64 iRoleUid = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  uint32 bWin = 4;
  repeated CmdMailFightHero vMailFightHero = 5;
  uint32 iType = 6;
  bool bIsMine = 7;
  uint32 iVipLevel = 8;
  uint32 iMineralVeinId = 9;
  CmdIDNum stRewardItem = 10;
  bool bWorldBoss = 11;
  uint32 iPower = 12;
  int64 iBuffPercent = 13;
  uint32 iTownAppearanceId = 14;
  uint32 iWorldBossEnumType = 15;
  bool bDisplayGender = 16;
  uint32 iShipId = 17;
  SdpString sFBFaceId = 18;
  uint32 iHeadId = 19;
  uint32 iHeadFrameId = 20;
  uint32 iHeadFrameExpireTime = 21;
}

message CmdMainBackground {
  uint32 iType = 1;
  uint32 iId = 2;
}

message CmdMultiFightTestInfo {
  uint64 iFightTestId = 1;
  uint32 iAllTimes = 2;
  uint32 iCurTimes = 3;
  uint32 iBeginTime = 4;
}

message CmdNoticeData {
  uint32 iNoticeId = 1;
  SdpString sContent = 2;
  uint32 iBeginTime = 3;
  uint32 iEndTime = 4;
  uint32 iDisplayType = 5;
  uint32 iDisplayInterval = 6;
  uint32 iDisplayNum = 7;
  uint32 iTemplateId = 8;
  map<SdpString, SdpString> mTemplateParam = 9;
}

message CmdOriginalArenaEnemy {
  CmdRoleSimpleInfo stRoleSimpleInfo = 1;
  uint32 iScore = 2;
}

message CmdOriginalArenaEnemyDetail {
  CmdRoleSimpleInfo stRoleSimpleInfo = 1;
  map<SdpUInt, CmdHeroData> mCmdHero = 2;
  CmdForm stForm = 3;
}

message CmdOriginalArenaFightRecord {
  CmdRoleSimpleInfo stEnemy = 1;
  uint32 bIsAttacker = 2;
  uint32 bWin = 3;
  uint32 iMyOldScore = 4;
  uint32 iMyNewScore = 5;
  uint32 iEnemyOldScore = 6;
  uint32 iEnemyNewScore = 7;
  uint32 iMyOldRank = 8;
  uint32 iMyNewRank = 9;
  uint32 iEnemyOldRank = 10;
  uint32 iEnemyNewRank = 11;
  uint32 iTime = 12;
}

message CmdOriginalArenaMineInfo {
  uint32 iSeasonId = 1;
  uint32 iGroupId = 2;
  uint32 iScore = 3;
  uint32 iRank = 4;
  uint32 iEndTime = 5;
  uint32 iTicketBuyCount = 6;
  uint32 iTicketFreeCount = 7;
  uint32 iLastRefreshTime = 8;
  uint32 iCurEndTime = 9;
}

message CmdOriginalArenaRankItem {
  CmdRoleSimpleInfo stRole = 1;
  uint32 iRank = 2;
  uint32 iScore = 3;
}

message CmdOriginalArenaRewardItem {
  PlayerIDType stRoleId = 1;
  uint32 iRank = 2;
  uint32 iScore = 3;
  uint32 iRankId = 4;
}

message CmdPersonalChatInitData {
  PlayerIDType stToRoleId = 1;
  uint32 iChatUid = 2;
  uint32 iTime = 3;
  bool bHasUnreadMsg = 4;
  uint32 iCreateTime = 5;
  CmdRoleSimpleInfo stRoleInfo = 6;
}

message CmdQuest {
  uint32 iId = 1;
  uint32 iType = 2;
  uint32 iState = 3;
  uint32 iAcceptTime = 4;
  repeated SdpUInt vCondStep = 5;
  repeated SdpUInt vUniqData = 6;
}

message CmdRankRoleItem {
  uint32 iRank = 1;
  uint64 iRoleUid = 2;
  SdpString sName = 3;
  uint32 iLevel = 4;
  uint32 iCountryId = 5;
  uint32 iRankValue = 6;
  uint64 iAllianceId = 7;
  SdpString sAllianceName = 8;
  uint32 iZoneId = 9;
  bool bDisplayGender = 10;
  SdpString sFBFaceId = 11;
  uint32 iHeadId = 12;
  uint32 iHeadFrameId = 13;
  uint32 iHeadFrameExpireTime = 14;
}

message CmdRecommendForm {
  repeated SdpUInt vHeroId = 1;
  float fScore = 2;
}

message CmdRecommendFormFlow {
  map<SdpUInt, repeated CmdRecommendForm> mvForm = 1;
}

message CmdRecommendHero {
  uint32 iHeroId = 1;
  float fScore = 2;
  bool bIsNew = 3;
}

message CmdRepairStr {
  uint32 iRepairType = 1;
  SdpString sTableName = 2;
  SdpString sKey1 = 3;
  SdpString sValue1 = 4;
  SdpString sKey2 = 5;
  SdpString sValue2 = 6;
  SdpString sItemKey = 7;
  SdpString sItemValue = 8;
}

message CmdReplaceArenaAfk {
  uint32 iRank = 1;
  uint32 iTakeRewardTime = 2;
  uint32 iLastCalcTime = 3;
  map<SdpUInt, SdpUInt> mReward = 4;
  repeated CmdReplaceArenaAfkRecord vRecord = 5;
}

message CmdReplaceArenaAfkRecord {
  uint32 iGrade = 1;
  uint32 iStartTime = 2;
  uint32 iEndTime = 3;
}

message CmdReplaceArenaBattleRecord {
  uint32 iTime = 1;
  CmdRoleSimpleInfo stEnemySimple = 2;
  uint32 iRank = 3;
  uint32 iOldRank = 4;
  bool bWin = 5;
  bool bAttack = 6;
}

message CmdReplaceArenaEnemyDetail {
  CmdRoleSimpleInfo stRoleSimple = 1;
  map<SdpUInt, CmdReplaceArenaForm> mBattleForm = 2;
}

message CmdReplaceArenaForm {
  map<SdpUInt, CmdHeroData> mCmdHero = 1;
  CmdForm stForm = 2;
}

message CmdReplaceArenaMineInfo {
  uint32 iSeasonId = 1;
  uint32 iGroupId = 2;
  uint32 iRegroupIndex = 3;
  uint32 iGradeRank = 4;
  uint32 iFreeFightTimes = 5;
  uint32 iLastRefreshTime = 6;
  uint32 iReplaceArenaPlaySeason = 7;
}

message CmdReplaceArenaRankItem {
  CmdRoleSimpleInfo stRoleSimple = 1;
  uint32 iRank = 2;
  uint32 iScore = 3;
}

message CmdReplaceArenaSeasonReward {
  PlayerIDType stRoleId = 1;
  uint32 iRank = 2;
  uint32 iScore = 3;
  map<SdpUInt, SdpUInt> mLeftAfk = 4;
}

message CmdRogue {
  map<SdpUInt, CmdRogueStage> mStage = 1;
  uint32 iDailyReward = 2;
  uint32 iTakenReward = 3;
  map<SdpUInt, SdpUInt> mTech = 4;
  map<SdpUInt, SdpUInt> mHandbook = 5;
  uint32 iCurStage = 6;
}

message CmdRogueStage {
  uint32 iStageId = 1;
  uint32 iPassTimes = 2;
  uint32 iDailyLevel = 3;
  map<SdpUInt, repeated SdpUInt> mDailyMonster = 4;
}

message CmdRoleArrange {
  CmdRoleSimpleInfo stRoleInfo = 1;
  CmdStageArrange stStageArrange = 2;
}

message CmdRoleBusinessCard {
  PlayerIDType stRoleId = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  uint32 iExp = 4;
  SdpString sAllianceName = 5;
  uint32 iHeadId = 6;
  uint32 iHeadFrameId = 7;
  uint32 iHeadFrameExpireTime = 8;
  uint32 iShowBackgroundId = 9;
  map<SdpUInt, SdpUInt> mCampHeroNum = 10;
  uint32 iPower = 11;
  repeated CmdHeroBriefData vTopHero = 12;
  map<SdpUInt, XDictionary<SdpUInt, SdpUInt>> mmProgress = 13;
  SdpString sSignature = 14;
  uint32 iShowBackgroundExpireTime = 15;
}

message CmdRoleSimpleInfo {
  PlayerIDType stRoleId = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  SdpString sAlliance = 4;
  uint64 iAllianceId = 5;
  uint32 iCountryId = 6;
  uint32 iAllianceBadge = 7;
  SdpString sFacePath = 8;
  uint32 iGender = 9;
  bool bDisplayGender = 10;
  bool bDisplayVip = 11;
  uint32 iVipLevel = 12;
  SdpString sZoneName = 13;
  SdpString sFBFaceId = 14;
  SdpString sThisLoginChannel = 15;
  uint32 bAcceptFriend = 16;
  map<SdpUInt, SdpUInt> mSimpleData = 17;
  uint32 iLastLoginTime = 18;
  uint32 iLastLogoutTime = 19;
  uint32 iHeadId = 20;
  uint32 iHeadFrameId = 21;
  uint32 iHeadFrameExpireTime = 22;
  uint32 iReplaceArenaPlaySeason = 23;
}

message CmdServerConfigData {
  uint64 iServerTimeMS = 1;
  bool bVerifyStageCheckLog = 2;
  int64 iTimeGmtOff = 3;
  uint32 iNextFreshTime = 4;
}

message CmdShareParams {
  repeated SdpUInt vShareHeroId = 1;
}

message CmdShop {
  uint32 iShopId = 1;
  uint32 iOpenTime = 2;
  uint32 iLastRefreshTime = 3;
  uint32 iRefreshTimes = 4;
  repeated CmdShopGoods vGoods = 5;
  uint32 iActivityId = 6;
  uint32 iVersion = 7;
  map<SdpUInt, XDictionary<SdpUInt, SdpUInt>> mGoodsBought = 8;
  uint32 iFreeRefreshTimes = 9;
}

message CmdShopGoods {
  uint32 iGroupId = 1;
  uint32 iGoodsId = 2;
  uint32 iBought = 3;
}

message CmdSimBuff {
  uint32 iGroupId = 1;
  uint32 iShape = 2;
  uint32 iQuality = 3;
  uint32 iRangeId = 4;
}

message CmdSimDoing {
  uint32 iRegionId = 1;
  uint32 iFlowId = 2;
  uint32 iStartTime = 3;
  repeated CmdSimBuff vBuff = 4;
  CmdSimFightData stFight = 5;
  uint32 iCurOrder = 6;
  repeated SdpUInt vChooseEvent = 7;
  uint32 iCurEvent = 8;
  uint32 iStatus = 9;
  repeated CmdSimBuff vChooseBuff = 10;
  uint32 iStartRegion = 11;
}

message CmdSimFightData {
  map<SdpUInt, CmdSimHero> mHero = 1;
  repeated SdpUInt vFinishArea = 2;
  map<SdpUInt, CmdFightingMonster> mFightingMonster = 3;
  repeated SdpUInt vMonsterGroupList = 4;
}

message CmdSimHero {
  uint32 iHeroId = 1;
  uint32 iHpPercent = 2;
  uint32 iEnergy = 3;
}

message CmdSimpleHeroData {
  uint32 iHeroId = 1;
  uint32 iBaseId = 2;
  uint32 iLevel = 3;
  uint32 iBreak = 4;
  uint32 iPower = 5;
}

message CmdSimRoom {
  repeated SdpUInt vPassedRegion = 1;
  uint32 iDailyTakenReward = 2;
  repeated CmdSimBuff vWeekBuff = 3;
  CmdSimDoing stDoingSim = 4;
  repeated SdpUInt vDailyPassRegion = 5;
}

message CmdSoloRaid {
  uint32 iActivityId = 1;
  uint32 iBossId = 2;
  repeated SdpUInt vPassRaid = 3;
  CmdSoloRaidChallenge stCurRaid = 4;
  map<SdpUInt, CmdSoloRaidRecord> mRecord = 5;
  repeated SdpUInt vDailyPassRaid = 6;
}

message CmdSoloRaidChallenge {
  uint32 iRaidId = 1;
  uint32 iStartTime = 2;
  uint64 iDamage = 3;
  uint32 iFightStartTime = 4;
  bool bPass = 5;
  map<SdpUInt, CmdFightingMonster> mFightingMonster = 6;
  repeated repeated SdpUInt vUseHero = 7;
  repeated SdpULong vDamage = 8;
}

message CmdSoloRaidRankItem {
  CmdRoleSimpleInfo stRoleSimple = 1;
  uint32 iRank = 2;
  uint64 iScore = 3;
}

message CmdSoloRaidRecord {
  uint32 iRaidId = 1;
  uint32 iTime = 2;
  uint64 iDamage = 3;
  bool bPass = 4;
  repeated repeated CmdSoloRaidRecordHero vRecordHero = 5;
  repeated SdpULong vDamage = 6;
}

message CmdSoloRaidRecordHero {
  uint32 iHeroId = 1;
  uint32 iLevel = 2;
  uint32 iBreak = 3;
  uint32 iPower = 4;
  uint32 iFashion = 5;
}

message CmdStageArrange {
  repeated CmdHeroBriefData vHero = 1;
  repeated CmdFormHero vFormHero = 2;
  uint64 iTotalPower = 3;
}

message CmdStageCampDataSimple {
  map<SdpUInt, CmdHeroBriefData> mHeroData = 1;
  map<SdpUInt, CmdHeroFightData> mHeroFightData = 2;
}

message CmdStageDetail {
  uint64 iScore = 1;
  uint64 iDamage = 2;
  uint32 iFinishNum = 3;
}

message CmdStartChallengeInfoCS {
  SdpString sCSharpMd5 = 1;
  CmdFightVerifyInput stVerifyInput = 2;
}

message CmdStartChallengeInfoSC {
  SdpString sCSharpMd5 = 1;
  CmdFightVerifyInput stVerifyInput = 2;
}

message CmdStoreIAPMonitor {
  uint32 iDayNum = 1;
  uint32 iWeekNum = 2;
  uint32 iMonthNum = 3;
}

message CmdStrategy {
  SdpString sName = 1;
  repeated CmdStrategyFormaiton vFormaiton = 2;
}

message CmdStrategyFormaiton {
  uint32 iCondition = 1;
  uint32 iAction = 2;
  uint32 iRestriction = 3;
  bool bOn = 4;
}

message CmdSubStageData {
  uint32 iLastPassStageId = 1;
  map<SdpUInt, SdpUInt> mStageFirstFinishTime = 2;
}

message CmdSubTitile {
  SdpString sLanguageId = 1;
  SdpString sWordSize = 2;
  SdpString sWordColor = 3;
  SdpString sStroke = 4;
  SdpString sPosition = 5;
  uint32 iLocation = 6;
}

message CrossChatRoleDetail {
  PlayerBaseInfo stBrief = 1;
  uint32 iAllianceBadge = 2;
  repeated CmdHeroBriefData vHero = 3;
  uint32 iPower = 4;
  uint32 iArenaRank = 5;
  uint32 iArenaBattleRank = 6;
}

message FightTestOneResult {
  uint64 iID = 1;
  uint64 iReportID = 2;
  repeated SdpUInt vAttackHero = 3;
  repeated SdpUInt vDefendHero = 4;
  bool bWin = 5;
  uint32 iScore = 6;
  SdpString sError = 7;
  uint32 iCostTime = 8;
  int32 iOverloadType = 9;
  int64 iVerifyReturnValue = 10;
  SdpString sReportID = 11;
  uint32 iState = 12;
  uint32 iErrorType = 13;
  uint32 iArrangeID = 14;
  BalanceFightTestTeam stAttacker = 15;
  BalanceFightTestTeam stDefender = 16;
}

message FightTestResult {
  map<SdpULong, FightTestOneResult> mResult = 1;
}

message FightTestResumeData {
  FightTestStatus stState = 1;
}

message FightTestStartResult {
  uint64 iStartTime = 1;
}

message FightTestStatus {
  uint64 iStartTime = 1;
  uint64 iEndTime = 2;
  uint64 iTargetTestTimes = 3;
  uint32 iEachLoopTestTimes = 4;
  uint64 iFinishedTimes = 5;
  uint64 iFinishedAndRunningTimes = 6;
  uint32 eState = 7;
  uint32 iAttackIndex = 8;
  uint32 iDefendIndex = 9;
  uint32 iSuccessTimes = 10;
  uint32 iTimeoutTimes = 11;
  uint32 iErrorTimes = 12;
}

message GroupChatInfo {
  uint64 iGroupId = 1;
  repeated PlayerIDType vMembers = 2;
  uint32 iChatUid = 3;
  PlayerIDType iCreateUid = 4;
  SdpString sName = 5;
  uint32 iCreateTime = 6;
  SdpString sLocalName = 7;
  repeated PlayerChatInfo vChat = 8;
}

message ItemUseData {
  map<SdpUInt, SdpUInt> mIndexIdNum = 1;
}

message LamiaData {
  uint32 iActId = 1;
  LamiaSignIn stSign = 2;
  LamiaQuest stQuest = 3;
  LamiaMiniGame stMiniGame = 4;
  map<SdpUInt, LamiaStage> mStageStat = 5;
  repeated SdpUInt vAwardedClue = 6;
  repeated SdpUInt vAwardedSubAct = 7;
}

message LamiaMiniGame {
  map<SdpUInt, SdpUInt> mGameStat = 1;
  uint32 iMaxAwardedGame = 2;
}

message LamiaQuest {
  repeated CmdQuest vQuest = 1;
  repeated CmdQuest vDailyQuest = 2;
  repeated CmdQuest vGameQuest = 3;
  uint32 iDaiyQuestActive = 4;
}

message LamiaSignIn {
  uint32 iLoginDays = 1;
  uint32 iAwardedMaxDays = 2;
  uint64 iLastLoginTime = 3;
}

message LamiaStage {
  uint32 iLastPassedStage = 1;
  map<SdpUInt, SdpUInt> mStageStat = 2;
  uint32 iPassedTimesDaily = 3;
}

message MailData {
  uint32 iMailId = 1;
  uint32 iType = 2;
  uint32 iTime = 3;
  SdpString sFrom = 4;
  SdpString sTitle = 5;
  map<SdpString, SdpString> mTitleParam = 6;
  SdpString sContent = 7;
  repeated CmdIDNum vItems = 8;
  uint32 iOpenTime = 9;
  uint32 iRcvAttachTime = 10;
  uint32 iTemplateId = 11;
  map<SdpString, SdpString> mTemplateParam = 12;
  bool bSticky = 13;
  uint32 iDelTime = 14;
  uint64 iFromUid = 15;
}

message MatchBattleInfo {
  uint64 iBattleUid = 1;
  SdpString sBattleIp = 2;
  uint32 iBattlePort = 3;
  SdpString sBattleProxy = 4;
  uint32 iProxyId = 5;
  uint32 iProxyPing = 6;
  SdpString sBattleConn = 7;
  uint32 iBattleSvrId = 8;
  bool bUseRUdp = 9;
  uint32 iMatchType = 10;
  uint32 iUdpPort = 11;
  repeated PlayerMatchingInfo vUp = 12;
  repeated PlayerMatchingInfo vDown = 13;
}

message OperType_Battle_CastSkill {
  uint32 iSpellId = 1;
  float fPosX = 2;
  float fPosY = 3;
  float fDirX = 4;
  float fDirY = 5;
  uint32 iTargetId = 6;
  bool bStopMove = 7;
  uint32 iTranID = 8;
}

message OperType_Battle_ChangeSetting {
  uint32 byType = 1;
  int64 iValue = 2;
}

message OperType_Battle_ClientInfo {
  uint32 iCpuHz = 1;
  uint32 iMemory = 2;
  uint32 iMinfps = 3;
  uint32 iAvefps = 4;
  uint32 iPing80 = 5;
  uint32 iPing100 = 6;
  uint32 iPing120 = 7;
  uint32 iPing150 = 8;
  uint32 iPing200 = 9;
  uint32 iPing300 = 10;
  uint32 iPing500 = 11;
  uint32 iPing800 = 12;
  uint32 iPing_times = 13;
  uint32 iProxy_ping = 14;
  uint32 iBattle_ping = 15;
  uint32 iProxy_battle_ping = 16;
  SdpString iWifi = 17;
  uint32 iUseUdp = 18;
  uint32 iTimeDelay = 19;
  uint32 iTimeDelayMax = 20;
  uint32 iBigReconnect = 21;
  uint32 iSmallReconnect = 22;
  uint32 iProxyId = 23;
  uint32 iClientParam1 = 24;
  uint32 iClientParam2 = 25;
  uint32 iClientParam3 = 26;
  uint32 iClientParam4 = 27;
  uint32 iClientParam5 = 28;
  uint32 iClientParam6 = 29;
  uint32 iClientParam7 = 30;
  uint32 iClientParam8 = 31;
  uint32 iIncomingLagNum = 32;
  uint32 iOutgoingLagNum = 33;
  uint32 iSwitchUdpNum = 34;
  uint32 iSwitchTcpNum = 35;
  uint32 iIncoming265 = 36;
  uint32 iIncoming530 = 37;
  uint32 iIncoming1000 = 38;
  uint32 iIncoming3000 = 39;
  uint32 iMoveLag = 40;
  uint32 iSkillLag = 41;
  uint32 iOutgoingping50ms = 42;
  uint32 iOutgoingping100ms = 43;
  uint32 iOutgoingpingOver100ms = 44;
  uint32 iIncomingping50ms = 45;
  uint32 iIncomingping100ms = 46;
  uint32 iIncomingpingOver100ms = 47;
  uint32 iTotalClientSendPacket = 48;
  uint32 iOperate350 = 49;
  uint32 iOperate450 = 50;
  uint32 iOperate800 = 51;
  uint32 iTcpFrameNum = 52;
  uint32 iUdpFrameNum = 53;
  SdpString sUdpStat = 54;
  SdpString sUnityVersion = 55;
  uint32 iIncoming66 = 56;
  bool bLowPower = 57;
  uint32 uiBytesC2S = 58;
  uint32 uiPacketsC2S = 59;
  uint32 uiBytesS2C = 60;
  uint32 uiPacketsS2C = 61;
  uint32 iStdPing = 62;
  bool bIsVpn = 63;
}

message OperType_Battle_CommonOper {
  uint32 uiType = 1;
  uint32 uiData1 = 2;
  uint32 uiData2 = 3;
  uint32 uiData3 = 4;
  uint32 uiData4 = 5;
  uint32 uiData5 = 6;
  uint32 uiData6 = 7;
  repeated SdpUInt vData7 = 8;
}

message OperType_Battle_ConfirmHero {
  uint32 iHeroId = 1;
}

message OperType_Battle_ConnStateChange {
  uint32 iType = 1;
}

message OperType_Battle_LoadingPer {
  uint32 iLoadingPer = 1;
}

message OperType_Battle_Move {
  float fDirX = 1;
  float fDirY = 2;
  float fPosX = 3;
  float fPosY = 4;
  uint32 byDirX = 5;
  uint32 byDirY = 6;
}

message OperType_Battle_ReadySelect {
  uint32 iClientResRate = 1;
}

message OperType_Battle_SelectHero {
  uint32 iHeroId = 1;
  bool bByServer = 2;
}

message OperType_Battle_SelectHero_PlayPhase {
  uint32 iHeroId = 1;
}

message OperType_Battle_Sign {
  uint32 iOrderType = 1;
  bool bFloor = 2;
  float fPosX = 3;
  float fPosY = 4;
  uint32 iGuid = 5;
  uint32 iFriendGuid = 6;
}

message OperType_Battle_SkillUp {
  uint32 iSpellId = 1;
}

message PersonalChatInfo {
  uint32 iChatUid = 1;
  uint32 iTime = 2;
  SdpString sChatSpecificData = 3;
}

message PersonalChatSpecificData {
  PlayerIDType stRoleId = 1;
  PlayerIDType stToRoleId = 2;
  SdpString sMessage = 3;
  uint32 iTemplateId = 4;
  CmdAllianceBriefData stSharedAlliance = 5;
  uint64 iAllianceId = 6;
  SdpString sWebSharePic = 7;
  SdpString sWebLink = 8;
  SdpString sWebSystem = 9;
  SdpString sWebLogin = 10;
  uint32 iWebActId = 11;
  uint32 iMaxPassStageId = 12;
}

message PingData {
  uint32 iPing = 1;
  uint32 iLoss = 2;
  uint32 iUpLoss = 3;
  uint32 iDownLoss = 4;
  uint32 iPingType = 5;
  SdpString sClientIP = 6;
}

message PlayerBaseInfo {
  uint64 iUid = 1;
  uint32 iZoneId = 2;
  SdpString sName = 3;
  uint32 iLevel = 4;
  uint32 iCountryId = 5;
  SdpString sAllianceName = 6;
  uint32 iVipLevel = 7;
  uint32 iGender = 8;
  bool bDisplayGender = 9;
  uint32 iFrameId = 10;
  SdpString sZoneName = 11;
  SdpString sFacePath = 12;
  SdpString sFBFaceId = 13;
  uint32 iHeadId = 14;
  uint32 iHeadFrameId = 15;
  uint32 iHeadFrameExpireTime = 16;
}

message PlayerBattleRecord {
  uint64 iUid = 1;
  PrivateRecord stPrivateRecord = 2;
  BattleReportFightInfo stFightInfo = 3;
}

message PlayerChatInfo {
  uint32 iChatType = 1;
  SdpString sMessage = 2;
  PlayerBaseInfo stBase = 3;
  uint32 iChatLanguage = 4;
  uint32 iChatTime = 5;
  uint32 iChatUid = 6;
  uint32 iTemplateId = 7;
  map<SdpString, SdpString> mParam = 8;
  uint64 iGroupId = 9;
  CmdAllianceBriefData stSharedAlliance = 10;
  CmdRoleSimpleInfo stSharedRole = 11;
  CmdHeroData stShareHero = 12;
  uint64 iFightReportId = 13;
  uint32 iFightType = 14;
  uint32 iFightReportZoneId = 15;
  repeated CmdChatArenaBattleFightReport vArenaBattleReportId = 16;
  uint32 iMaxPassStageId = 17;
}

message PlayerDeadInfo {
  uint32 iBeginTime = 1;
  uint32 iEndTime = 2;
}

message PlayerIDType {
  uint32 iZoneId = 1;
  uint64 iUid = 2;
}

message PlayerMatchingInfo {
  uint64 iRoleId = 1;
  uint32 iZoneId = 2;
  SdpString sName = 3;
}

message PlugReport {
  uint32 iPlugType = 1;
}

message PrivateRecord {
  uint32 iFightRate = 1;
}

message ReqProto {
  uint32 iReqCmdId = 1;
  uint32 iReqCmdSeq = 2;
  SdpString sReqData = 3;
  bool bDual = 4;
  uint32 uiFrameConfirm = 5;
}

message ReqProtoHeader {
  uint32 iReqCmdId = 1;
  uint32 iReqCmdSeq = 2;
}

message RoleInfo {
  uint32 iZoneId = 1;
  uint64 iRoleId = 2;
  SdpString sRoleName = 3;
  uint32 iLevel = 4;
  uint32 iUpdateTime = 5;
  SdpString sFBFaceId = 6;
  uint32 iHeadId = 7;
  uint32 iHeadFrameId = 8;
  uint32 iHeadFrameExpireTime = 9;
}

message RoomInfo {
  uint64 iRoomId = 1;
  PlayerIDType stOwner = 2;
  repeated RoomPlayerInfo vPlayer = 3;
}

message RoomPlayerInfo {
  PlayerIDType stPlayer = 1;
  SdpString sName = 2;
  uint32 iLevel = 3;
  repeated SdpUInt vBattleGroupId = 4;
  uint32 iPos = 5;
}

message RspProto {
  uint32 iRspCmdId = 1;
  uint32 iRspCmdSeq = 2;
  uint32 iPushSeqId = 3;
  int64 iRspCode = 4;
  SdpString sRspData = 5;
}

message RspProtoHeader {
  uint32 iRspCmdId = 1;
  uint32 iRspCmdSeq = 2;
}

message ServerGroupInfo {
  uint32 iGroupId = 1;
  SdpString sGroupName = 2;
  uint32 iGroupType = 3;
  repeated SdpString vIpList = 4;
}

message SessionKeyAddition {
  uint32 iBattleSvrId = 1;
  uint32 iZoneId = 2;
}

message WeGameProductInfo {
  SdpString sProductClassId = 1;
  uint32 iProductCount = 2;
  SdpString sProductPrice = 3;
  SdpString sProductName = 4;
  SdpString sProductIconUrl = 5;
  SdpString sProductDescription = 6;
}

message ZoneInfo {
  uint32 iZoneId = 1;
  SdpString sZoneName = 2;
  uint32 iStatus = 3;
  uint32 iFlag = 4;
  SdpString sVersion = 5;
  SdpString sPreLangs = 6;
  bool bIsTestZone = 7;
  SdpString sAuditChannel = 8;
}
